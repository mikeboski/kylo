{
  "swagger" : "2.0",
  "info" : {
    "description" : "Medikly is a comprehensive Data Lake platform built-on Apache Hadoop, Spark, and NiFi.",
    "version" : "v1",
    "title" : "Medikly",
    "contact" : {
      "name" : "Medikly",
      "url" : "https://medikly.com/services/"
    },
    "license" : {
      "name" : "Apache License, Version 2.0",
      "url" : "https://www.apache.org/licenses/LICENSE-2.0"
    }
  },
  "basePath" : "/proxy",
  "tags" : [ {
    "name" : "Feed Manager - Categories",
    "description" : "manages categories"
  }, {
    "name" : "Feed Manager - Administration",
    "description" : "administrator operations"
  }, {
    "name" : "Medikly Cluster - Administration",
    "description" : "administrator cluster"
  }, {
    "name" : "Security - Groups",
    "description" : "manages groups"
  }, {
    "name" : "Feed Manager - SLA",
    "description" : "service level agreements"
  }, {
    "name" : "Configuration",
    "description" : "information on Medikly"
  }, {
    "name" : "Security - Users",
    "description" : "manages users"
  }, {
    "name" : "Security - Roles",
    "description" : "manages roles"
  }, {
    "name" : "Feed Manager - Data Sources",
    "description" : "manages data sources"
  }, {
    "name" : "Feed Manager - NiFi",
    "description" : "integration with NiFi"
  }, {
    "name" : "Feed Manager - Templates",
    "description" : "manages templates"
  }, {
    "name" : "Feed Manager - Feeds",
    "description" : "manages feeds"
  }, {
    "name" : "Security - Access Control",
    "description" : "manage access controls"
  }, {
    "name" : "Feed Manager - Domain Types",
    "description" : "manages domain types"
  }, {
    "name" : "Internal",
    "description" : "debugging tools"
  }, {
    "name" : "Feed Manager - Tables",
    "description" : "access to Hive tables"
  }, {
    "name" : "NiFi - Provenance",
    "description" : "event reporting"
  }, {
    "name" : "Feed Manager - Data Wrangler",
    "description" : "data transformations"
  }, {
    "name" : "Feed Manager - Schema Discovery",
    "description" : "determine file schemas"
  }, {
    "name" : "Feed Manager - Search",
    "description" : "global search"
  }, {
    "name" : "Operations Manager - Service Level Assessments"
  }, {
    "name" : "Security - Audit Log"
  }, {
    "name" : "Feed Manager - Utilities"
  }, {
    "name" : "Operations Manager - Feeds"
  }, {
    "name" : "Operations Manager - Jobs"
  }, {
    "name" : "Operations Manager - Data Confidence"
  }, {
    "name" : "Operations Manager - Alerts"
  }, {
    "name" : "Operations Manager - Services"
  }, {
    "name" : "Operations Manager - Dashboard"
  }, {
    "name" : "Operations Manager - Scheduler"
  } ],
  "schemes" : [ "http" ],
  "consumes" : [ "application/json" ],
  "produces" : [ "application/json" ],
  "paths" : {
    "/v1/about" : {
      "get" : {
        "tags" : [ "Configuration" ],
        "summary" : "The root of the v1 REST API.",
        "description" : "",
        "operationId" : "getApiInfo",
        "produces" : [ "text/plain" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Returns a message indicating the root of the v1 REST API.",
            "schema" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "/v1/about/me" : {
      "get" : {
        "tags" : [ "Configuration" ],
        "summary" : "Gets information about the current user.",
        "description" : "",
        "operationId" : "getCurrentUser",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Returns the user.",
            "schema" : {
              "$ref" : "#/definitions/User"
            }
          }
        }
      }
    },
    "/v1/about/version" : {
      "get" : {
        "tags" : [ "Configuration" ],
        "summary" : "Gets the version number of Medikly.",
        "description" : "",
        "operationId" : "getKyloVersion",
        "produces" : [ "text/plain" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Returns the version number.",
            "schema" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "/v1/admin/cluster/awaiting-messages" : {
      "get" : {
        "tags" : [ "Medikly Cluster - Administration" ],
        "summary" : "Gets messages awaiting acknowledgement.  This will only return data if the property: Medikly.cluster.acknowledge=true in the application.properties of Medikly-services ",
        "description" : "",
        "operationId" : "getMessagesAwaitingAcknowledgement",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "longerThan",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns message delivery status of pending messages",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/MessageDeliveryStatus"
              }
            }
          }
        }
      }
    },
    "/v1/admin/cluster/cluster-node-summary" : {
      "get" : {
        "tags" : [ "Medikly Cluster - Administration" ],
        "summary" : "Returns a summary of this cluster node.",
        "description" : "",
        "operationId" : "getClusterNodeSummary",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Returns summary data about this node in the cluster.",
            "schema" : {
              "$ref" : "#/definitions/ClusterNodeSummary"
            }
          }
        }
      }
    },
    "/v1/admin/cluster/is-clustered" : {
      "get" : {
        "tags" : [ "Medikly Cluster - Administration" ],
        "summary" : "Check to see if Medikly is clustered",
        "description" : "",
        "operationId" : "isClustered",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Returns the response with a 'success' or 'error' indicating the cluster status.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          }
        }
      }
    },
    "/v1/admin/cluster/members" : {
      "get" : {
        "tags" : [ "Medikly Cluster - Administration" ],
        "summary" : "Gets the members in the cluster.",
        "description" : "",
        "operationId" : "getMembers",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Returns the list of Medikly cluster members",
            "schema" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "/v1/admin/cluster/simple" : {
      "get" : {
        "tags" : [ "Medikly Cluster - Administration" ],
        "summary" : "Gets thet latest message sent to this cluster.",
        "description" : "",
        "operationId" : "getSimpleMessage",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      },
      "post" : {
        "tags" : [ "Medikly Cluster - Administration" ],
        "summary" : "Send a Simple text message to other nodes in the Medikly cluster",
        "description" : "",
        "operationId" : "postSimpleMessage",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns the response status of the message.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          },
          "500" : {
            "description" : "The message was unable to be sent.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          }
        }
      }
    },
    "/v1/alerts" : {
      "get" : {
        "tags" : [ "Operations Manager - Alerts" ],
        "summary" : "Lists the current alerts.",
        "description" : "",
        "operationId" : "getAlerts",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "limit",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "type",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "subtype",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "state",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "level",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "before",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "after",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "cleared",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "default" : "false"
        }, {
          "name" : "filter",
          "in" : "query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns the alerts.",
            "schema" : {
              "$ref" : "#/definitions/AlertRange"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Operations Manager - Alerts" ],
        "summary" : "Creates a new alert.",
        "description" : "",
        "operationId" : "createAlert",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/AlertCreateRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns the alert.",
            "schema" : {
              "$ref" : "#/definitions/Alert"
            }
          }
        }
      }
    },
    "/v1/alerts/alert-types" : {
      "get" : {
        "tags" : [ "Operations Manager - Alerts" ],
        "summary" : "returns the unique alert types available.",
        "description" : "",
        "operationId" : "getAlertTypes",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "type",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "subtype",
          "in" : "query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns the unique type of alerts.",
            "schema" : {
              "type" : "array",
              "uniqueItems" : true,
              "items" : {
                "$ref" : "#/definitions/AlertType"
              }
            }
          }
        }
      }
    },
    "/v1/alerts/summary" : {
      "get" : {
        "tags" : [ "Operations Manager - Alerts" ],
        "summary" : "Lists summary grouped alerts.",
        "description" : "",
        "operationId" : "getAlertSummary",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "state",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "level",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "type",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "subtype",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "cleared",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "default" : "false"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns summary of the alerts grouped.",
            "schema" : {
              "$ref" : "#/definitions/AlertRange"
            }
          }
        }
      }
    },
    "/v1/alerts/summary/unhandled" : {
      "get" : {
        "tags" : [ "Operations Manager - Alerts" ],
        "summary" : "Lists summary grouped alerts.",
        "description" : "",
        "operationId" : "getAlertSummaryUnhandled",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "type",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "subtype",
          "in" : "query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns summary of the alerts grouped.",
            "schema" : {
              "$ref" : "#/definitions/AlertRange"
            }
          }
        }
      }
    },
    "/v1/alerts/{id}" : {
      "get" : {
        "tags" : [ "Operations Manager - Alerts" ],
        "summary" : "Gets the specified alert.",
        "description" : "",
        "operationId" : "getAlert",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns the alert.",
            "schema" : {
              "$ref" : "#/definitions/Alert"
            }
          },
          "404" : {
            "description" : "The alert could not be found.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Operations Manager - Alerts" ],
        "summary" : "Modifies the specified alert.",
        "description" : "",
        "operationId" : "updateAlert",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/AlertUpdateRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns the alert.",
            "schema" : {
              "$ref" : "#/definitions/Alert"
            }
          },
          "400" : {
            "description" : "The alert could not be found.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          }
        }
      }
    },
    "/v1/auditlog" : {
      "get" : {
        "tags" : [ "Security - Audit Log" ],
        "summary" : "Get recent log entries.",
        "description" : "",
        "operationId" : "getList",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "limit",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "default" : 10,
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns the log entries.",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/AuditLogEntry"
              }
            }
          }
        }
      }
    },
    "/v1/auditlog/{id}" : {
      "get" : {
        "tags" : [ "Security - Audit Log" ],
        "summary" : "Gets a specific log entry.",
        "description" : "",
        "operationId" : "findById",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns the log entry.",
            "schema" : {
              "$ref" : "#/definitions/AuditLogEntry"
            }
          },
          "404" : {
            "description" : "The entry could not be found.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          }
        }
      }
    },
    "/v1/configuration/module-urls" : {
      "get" : {
        "tags" : [ "Configuration" ],
        "summary" : "Gets the paths to the UI modules.",
        "description" : "",
        "operationId" : "moduleUrls",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Returns a mapping between the module name and the URL path.",
            "schema" : {
              "type" : "object",
              "additionalProperties" : {
                "type" : "object"
              }
            }
          }
        }
      }
    },
    "/v1/configuration/properties" : {
      "get" : {
        "tags" : [ "Configuration" ],
        "summary" : "Gets the current Medikly configuration.",
        "description" : "",
        "operationId" : "getConfiguration",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Returns the configuration parameters.",
            "schema" : {
              "type" : "object",
              "additionalProperties" : {
                "type" : "object"
              }
            }
          }
        }
      }
    },
    "/v1/configuration/system-time" : {
      "get" : {
        "tags" : [ "Configuration" ],
        "summary" : "Gets the current system time.",
        "description" : "",
        "operationId" : "generateSystemName",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Returns the current time in milliseconds.",
            "schema" : {
              "type" : "integer",
              "format" : "int64"
            }
          }
        }
      }
    },
    "/v1/dashboard" : {
      "get" : {
        "tags" : [ "Operations Manager - Dashboard" ],
        "summary" : "Get dashboard containing service health,feed health, data confidence, and unhandled alerts summary",
        "description" : "",
        "operationId" : "getDashboard",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "sort",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "limit",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "default" : 10,
          "format" : "int32"
        }, {
          "name" : "start",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "default" : 0,
          "format" : "int32"
        }, {
          "name" : "fixedFilter",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "filter",
          "in" : "query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns the dashboard.",
            "schema" : {
              "$ref" : "#/definitions/Dashboard"
            }
          }
        }
      }
    },
    "/v1/dashboard/alerts" : {
      "get" : {
        "tags" : [ "Operations Manager - Dashboard" ],
        "summary" : "Lists alerts",
        "description" : "",
        "operationId" : "getAlertSummaryUnhandled",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Returns summary of the alerts grouped.",
            "schema" : {
              "$ref" : "#/definitions/AlertRange"
            }
          }
        }
      }
    },
    "/v1/dashboard/alerts/feed-id/{feedId}" : {
      "get" : {
        "tags" : [ "Operations Manager - Dashboard" ],
        "summary" : "Get a summary of the unhandled alerts for a feed by its id",
        "description" : "",
        "operationId" : "getUserAlertSummaryForFeedId",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "feedId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns summary of the unhandled alerts for a given feed id",
            "schema" : {
              "$ref" : "#/definitions/AlertSummaryGrouped"
            }
          }
        }
      }
    },
    "/v1/dashboard/alerts/feed-name/{feedName}" : {
      "get" : {
        "tags" : [ "Operations Manager - Dashboard" ],
        "summary" : "Get a summary of the unhandled alerts for a feed by its name (category.feedname)",
        "description" : "",
        "operationId" : "getUserAlertSummaryForFeedName",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "feedName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns summary of the unhandled alerts for a given feed name ",
            "schema" : {
              "$ref" : "#/definitions/AlertSummaryGrouped"
            }
          }
        }
      }
    },
    "/v1/dashboard/data-confidence/summary" : {
      "get" : {
        "tags" : [ "Operations Manager - Dashboard" ],
        "summary" : "Gets the data confidence metrics.",
        "description" : "",
        "operationId" : "getDashbardDataConfidenceSummary",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Returns the data confidence metrics.",
            "schema" : {
              "$ref" : "#/definitions/DataConfidenceSummary"
            }
          }
        }
      }
    },
    "/v1/dashboard/feed-health-counts" : {
      "get" : {
        "tags" : [ "Operations Manager - Dashboard" ],
        "summary" : "Get a map of 'HEALTHY', 'UNHEALTHY' and the count of feeds in each group.",
        "description" : "",
        "operationId" : "getFeedHealthCounts",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Returns the health the feeds grouped by 'HEALTHY' and 'UNHEALTHY' as the keys to the returned Map.",
            "schema" : {
              "type" : "object",
              "additionalProperties" : {
                "type" : "object"
              }
            }
          }
        }
      }
    },
    "/v1/dashboard/feeds/feed-name/{feedName}" : {
      "get" : {
        "tags" : [ "Operations Manager - Dashboard" ],
        "summary" : "Provides a detailed health status of every feed.",
        "description" : "",
        "operationId" : "getFeedHealth",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "feedName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns the health.",
            "schema" : {
              "$ref" : "#/definitions/FeedStatus"
            }
          }
        }
      }
    },
    "/v1/dashboard/pageable-feeds" : {
      "get" : {
        "tags" : [ "Operations Manager - Dashboard" ],
        "summary" : "Provides a detailed pageable response with the health status of every feed.",
        "description" : "",
        "operationId" : "getPageableFeedHealth",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "sort",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "limit",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "default" : 10,
          "format" : "int32"
        }, {
          "name" : "start",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "default" : 0,
          "format" : "int32"
        }, {
          "name" : "fixedFilter",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "filter",
          "in" : "query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns the feed health.",
            "schema" : {
              "$ref" : "#/definitions/FeedStatus"
            }
          }
        }
      }
    },
    "/v1/dashboard/running-jobs" : {
      "get" : {
        "tags" : [ "Operations Manager - Dashboard" ],
        "summary" : "Gets running jobs for the last 10 seconds.",
        "description" : "",
        "operationId" : "getRunningJobCounts",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Returns the stats.",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/JobStatusCount"
              }
            }
          }
        }
      }
    },
    "/v1/data-confidence/summary" : {
      "get" : {
        "tags" : [ "Operations Manager - Data Confidence" ],
        "summary" : "Gets the data confidence metrics.",
        "description" : "",
        "operationId" : "getDataConfidenceSummary",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Returns the data confidence metrics.",
            "schema" : {
              "$ref" : "#/definitions/DataConfidenceSummary"
            }
          }
        }
      }
    },
    "/v1/feedmgr/admin/export-feed/{feedId}" : {
      "get" : {
        "tags" : [ "Feed Manager - Administration" ],
        "summary" : "Exports the feed with the specified ID.",
        "description" : "",
        "operationId" : "exportFeed",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "feedId",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "maxItems" : 36,
          "minItems" : 36
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns the feed as an attachment."
          },
          "400" : {
            "description" : "The feedId is invalid.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          },
          "404" : {
            "description" : "The feed is not available.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          }
        }
      }
    },
    "/v1/feedmgr/admin/export-template/{templateId}" : {
      "get" : {
        "tags" : [ "Feed Manager - Administration" ],
        "summary" : "Exports the template with the specified ID.",
        "description" : "",
        "operationId" : "exportTemplate",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "templateId",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "maxItems" : 36,
          "minItems" : 36
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns the template as an attachment."
          },
          "400" : {
            "description" : "the templateId is invalid.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          },
          "500" : {
            "description" : "The template is not available.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          }
        }
      }
    },
    "/v1/feedmgr/admin/import-feed" : {
      "post" : {
        "tags" : [ "Feed Manager - Administration" ],
        "summary" : "Imports a feed zip file.",
        "description" : "",
        "operationId" : "uploadFeed",
        "consumes" : [ "multipart/form-data" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "file",
          "in" : "formData",
          "required" : true,
          "type" : "file"
        }, {
          "name" : "overwrite",
          "in" : "formData",
          "required" : false,
          "type" : "boolean",
          "default" : false
        }, {
          "name" : "overwriteFeedTemplate",
          "in" : "formData",
          "required" : false,
          "type" : "boolean",
          "default" : false
        }, {
          "name" : "categorySystemName",
          "in" : "formData",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "importConnectingReusableFlow",
          "in" : "formData",
          "required" : false,
          "type" : "string",
          "default" : "NOT_SET",
          "enum" : [ "YES", "NO", "NOT_SET" ]
        }, {
          "name" : "templateProperties",
          "in" : "formData",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "feedProperties",
          "in" : "formData",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns the feed metadata.",
            "schema" : {
              "$ref" : "#/definitions/ImportFeed"
            }
          },
          "500" : {
            "description" : "There was a problem importing the feed.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          }
        }
      }
    },
    "/v1/feedmgr/admin/import-template" : {
      "post" : {
        "tags" : [ "Feed Manager - Administration" ],
        "summary" : "Imports a template xml or zip file.",
        "description" : "",
        "operationId" : "uploadTemplatex",
        "consumes" : [ "multipart/form-data" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "file",
          "in" : "formData",
          "required" : true,
          "type" : "file"
        }, {
          "name" : "overwrite",
          "in" : "formData",
          "required" : false,
          "type" : "boolean",
          "default" : false
        }, {
          "name" : "importConnectingReusableFlow",
          "in" : "formData",
          "required" : false,
          "type" : "string",
          "default" : "NOT_SET",
          "enum" : [ "YES", "NO", "NOT_SET" ]
        }, {
          "name" : "createReusableFlow",
          "in" : "formData",
          "required" : false,
          "type" : "boolean",
          "default" : false
        }, {
          "name" : "templateProperties",
          "in" : "formData",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns the template metadata.",
            "schema" : {
              "$ref" : "#/definitions/ImportTemplate"
            }
          },
          "500" : {
            "description" : "There was a problem importing the template.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          }
        }
      }
    },
    "/v1/feedmgr/admin/upload-status/{key}" : {
      "get" : {
        "tags" : [ "Feed Manager - Administration" ],
        "summary" : "Gets thet status of a given upload/import.",
        "description" : "",
        "operationId" : "uploadStatus",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "key",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns the upload status"
          }
        }
      }
    },
    "/v1/feedmgr/admin/user-fields" : {
      "get" : {
        "tags" : [ "Feed Manager - Administration" ],
        "summary" : "Gets the user-defined fields for categories and feeds.",
        "description" : "",
        "operationId" : "getUserFields",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Returns the user-defined fields.",
            "schema" : {
              "$ref" : "#/definitions/UserFieldCollection"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Feed Manager - Administration" ],
        "summary" : "Sets the user-defined fields for categories and feeds.",
        "description" : "",
        "operationId" : "setUserFields",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/UserFieldCollection"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "The user-defined fields have been updated."
          }
        }
      }
    },
    "/v1/feedmgr/categories" : {
      "get" : {
        "tags" : [ "Feed Manager - Categories" ],
        "summary" : "Gets the list of categories.",
        "description" : "",
        "operationId" : "getCategories",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "includeFeedDetails",
          "in" : "query",
          "required" : false,
          "type" : "boolean",
          "default" : false
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns the list of categories.",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/FeedCategory"
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Feed Manager - Categories" ],
        "summary" : "Creates or updates a category.",
        "description" : "",
        "operationId" : "saveCategory",
        "consumes" : [ "application/json", "application/x-www-form-urlencoded" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/FeedCategory"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The category was saved successfully.",
            "schema" : {
              "$ref" : "#/definitions/FeedCategory"
            }
          },
          "400" : {
            "description" : "The category name is invalid.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          },
          "500" : {
            "description" : "The category could not be saved.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          }
        }
      }
    },
    "/v1/feedmgr/categories/by-id/{categoryId}" : {
      "get" : {
        "tags" : [ "Feed Manager - Categories" ],
        "summary" : "Gets category details by id",
        "description" : "",
        "operationId" : "getCategoryById",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "categoryId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns the category details.",
            "schema" : {
              "$ref" : "#/definitions/FeedCategory"
            }
          },
          "400" : {
            "description" : "The category id is invalid.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          }
        }
      }
    },
    "/v1/feedmgr/categories/by-name/{categorySystemName}" : {
      "get" : {
        "tags" : [ "Feed Manager - Categories" ],
        "summary" : "Gets category details by system name",
        "description" : "",
        "operationId" : "getCategoryByName",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "categorySystemName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns the category details.",
            "schema" : {
              "$ref" : "#/definitions/FeedCategory"
            }
          },
          "400" : {
            "description" : "The category system name is invalid.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          }
        }
      }
    },
    "/v1/feedmgr/categories/user-fields" : {
      "get" : {
        "tags" : [ "Feed Manager - Categories" ],
        "summary" : "Returns the user fields for categories.",
        "description" : "",
        "operationId" : "getCategoryUserFields",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Returns the user fields.",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/UserProperty"
              }
            }
          }
        }
      }
    },
    "/v1/feedmgr/categories/{categoryId}" : {
      "delete" : {
        "tags" : [ "Feed Manager - Categories" ],
        "summary" : "Deletes the specified category.",
        "description" : "",
        "operationId" : "deleteCategory",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "categoryId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "The category was deleted."
          },
          "400" : {
            "description" : "The categoryId is invalid.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          },
          "500" : {
            "description" : "The category could not be deleted.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          }
        }
      }
    },
    "/v1/feedmgr/categories/{categoryId}/actions/allowed" : {
      "get" : {
        "tags" : [ "Feed Manager - Categories" ],
        "summary" : "Gets the list of actions permitted for the given username and/or groups.",
        "description" : "",
        "operationId" : "getAllowedActions",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "categoryId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "user",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "group",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns the actions.",
            "schema" : {
              "$ref" : "#/definitions/ActionGroup"
            }
          },
          "404" : {
            "description" : "A category with the given ID does not exist.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Feed Manager - Categories" ],
        "summary" : "Updates the permissions for a category using the supplied permission change request.",
        "description" : "",
        "operationId" : "postPermissionsChange",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "categoryId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/PermissionsChange"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The permissions were changed successfully.",
            "schema" : {
              "$ref" : "#/definitions/ActionGroup"
            }
          },
          "400" : {
            "description" : "The type is not valid.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          },
          "404" : {
            "description" : "No category exists with the specified ID.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          }
        }
      }
    },
    "/v1/feedmgr/categories/{categoryId}/actions/available" : {
      "get" : {
        "tags" : [ "Feed Manager - Categories" ],
        "summary" : "Gets the list of available actions that may be permitted or revoked on a category.",
        "description" : "",
        "operationId" : "getAvailableActions",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "categoryId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns the actions.",
            "schema" : {
              "$ref" : "#/definitions/ActionGroup"
            }
          },
          "404" : {
            "description" : "A category with the given ID does not exist.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          }
        }
      }
    },
    "/v1/feedmgr/categories/{categoryId}/actions/change" : {
      "get" : {
        "tags" : [ "Feed Manager - Categories" ],
        "summary" : "Constructs and returns a permission change request for a set of users/groups containing the actions that the requester may permit or revoke.",
        "description" : "",
        "operationId" : "getAllowedPermissionsChange",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "categoryId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "type",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "user",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "group",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns the change request that may be modified by the client and re-posted.",
            "schema" : {
              "$ref" : "#/definitions/PermissionsChange"
            }
          },
          "400" : {
            "description" : "The type is not valid.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          },
          "404" : {
            "description" : "No category exists with the specified ID.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          }
        }
      }
    },
    "/v1/feedmgr/categories/{categoryId}/feed-roles" : {
      "get" : {
        "tags" : [ "Feed Manager - Categories" ],
        "summary" : "Gets the list of assigned members the category's roles",
        "description" : "",
        "operationId" : "getFeedRoleMemberships",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "categoryId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "verbose",
          "in" : "query",
          "required" : false,
          "type" : "boolean",
          "default" : false
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns the role memberships.",
            "schema" : {
              "$ref" : "#/definitions/ActionGroup"
            }
          },
          "404" : {
            "description" : "A category with the given ID does not exist.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Feed Manager - Categories" ],
        "summary" : "Updates the members of one of a category's roles.",
        "description" : "",
        "operationId" : "postFeedRoleMembershipChange",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "categoryId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/RoleMembershipChange"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The permissions were changed successfully.",
            "schema" : {
              "$ref" : "#/definitions/ActionGroup"
            }
          },
          "404" : {
            "description" : "No category exists with the specified ID.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          }
        }
      }
    },
    "/v1/feedmgr/categories/{categoryId}/feeds" : {
      "get" : {
        "tags" : [ "Feed Manager - Categories" ],
        "summary" : "Gets the feeds for the specified category.",
        "description" : "",
        "operationId" : "getCategory",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "categoryId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "The list of related feeds."
          },
          "400" : {
            "description" : "The categoryId is invalid.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          }
        }
      }
    },
    "/v1/feedmgr/categories/{categoryId}/roles" : {
      "get" : {
        "tags" : [ "Feed Manager - Categories" ],
        "summary" : "Gets the list of assigned members the category's roles",
        "description" : "",
        "operationId" : "getRoleMemberships",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "categoryId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "verbose",
          "in" : "query",
          "required" : false,
          "type" : "boolean",
          "default" : false
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns the role memberships.",
            "schema" : {
              "$ref" : "#/definitions/ActionGroup"
            }
          },
          "404" : {
            "description" : "A category with the given ID does not exist.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Feed Manager - Categories" ],
        "summary" : "Updates the members of one of a category's roles.",
        "description" : "",
        "operationId" : "postRoleMembershipChange",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "categoryId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/RoleMembershipChange"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The permissions were changed successfully.",
            "schema" : {
              "$ref" : "#/definitions/ActionGroup"
            }
          },
          "404" : {
            "description" : "No category exists with the specified ID.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          }
        }
      }
    },
    "/v1/feedmgr/categories/{categoryId}/roles/change" : {
      "get" : {
        "tags" : [ "Feed Manager - Categories" ],
        "operationId" : "getRoleMemberships",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "categoryId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/v1/feedmgr/categories/{categoryId}/user-fields" : {
      "get" : {
        "tags" : [ "Feed Manager - Categories" ],
        "summary" : "Returns the user fields for feeds within the specified category.",
        "description" : "",
        "operationId" : "getFeedUserFields",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "categoryId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns the user fields.",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/UserProperty"
              }
            }
          },
          "400" : {
            "description" : "The categoryId is invalid.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          }
        }
      }
    },
    "/v1/feedmgr/domain-types" : {
      "get" : {
        "tags" : [ "Feed Manager - Domain Types" ],
        "summary" : "Gets all domain types.",
        "description" : "",
        "operationId" : "getDomainTypes",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Returns the domain types.",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/DomainType"
              }
            }
          },
          "500" : {
            "description" : "Medikly is unavailable.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          },
          "403" : {
            "description" : "Access denied.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Feed Manager - Domain Types" ],
        "summary" : "Updates a domain type.",
        "description" : "",
        "operationId" : "updateDomainType",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/DomainType"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns the domain type.",
            "schema" : {
              "$ref" : "#/definitions/DomainType"
            }
          },
          "500" : {
            "description" : "Medikly is unavailable.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          },
          "403" : {
            "description" : "Access denied.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          }
        }
      }
    },
    "/v1/feedmgr/domain-types/{id}" : {
      "get" : {
        "tags" : [ "Feed Manager - Domain Types" ],
        "summary" : "Gets a domain type by id.",
        "description" : "",
        "operationId" : "getDomainType",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns the domain type.",
            "schema" : {
              "$ref" : "#/definitions/DomainType"
            }
          },
          "500" : {
            "description" : "Medikly is unavailable.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          },
          "403" : {
            "description" : "Access denied.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          },
          "404" : {
            "description" : "The domain type does not exist.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Feed Manager - Domain Types" ],
        "summary" : "Deletes a domain type by id.",
        "description" : "",
        "operationId" : "deleteDomainType",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "500" : {
            "description" : "Medikly is unavailable.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          },
          "204" : {
            "description" : "The domain type is deleted."
          },
          "403" : {
            "description" : "Access denied.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          }
        }
      }
    },
    "/v1/feedmgr/feeds" : {
      "get" : {
        "tags" : [ "Feed Manager - Feeds" ],
        "summary" : "Gets the list of feeds.",
        "description" : "",
        "operationId" : "getFeeds",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "verbose",
          "in" : "query",
          "required" : false,
          "type" : "boolean",
          "default" : false
        }, {
          "name" : "sort",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "default" : "feedName"
        }, {
          "name" : "filter",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "limit",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "start",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "default" : 0,
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns a list of feeds.",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/FeedMetadata"
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Feed Manager - Feeds" ],
        "summary" : "Creates or updates a feed.",
        "description" : "",
        "operationId" : "createFeed",
        "consumes" : [ "application/json", "application/x-www-form-urlencoded" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/FeedMetadata"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns the feed including any error messages.",
            "schema" : {
              "$ref" : "#/definitions/NifiFeed"
            }
          }
        }
      }
    },
    "/v1/feedmgr/feeds/by-name/{feedName}" : {
      "get" : {
        "tags" : [ "Feed Manager - Feeds" ],
        "summary" : "Gets the specified feed.",
        "description" : "",
        "operationId" : "getFeedByName",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "feedName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns the feed.",
            "schema" : {
              "$ref" : "#/definitions/FeedMetadata"
            }
          },
          "500" : {
            "description" : "The feed is unavailable.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          }
        }
      }
    },
    "/v1/feedmgr/feeds/by-name/{feedName}/field-policies" : {
      "get" : {
        "tags" : [ "Feed Manager - Feeds" ],
        "summary" : "Gets the specified feed.",
        "description" : "",
        "operationId" : "getFeedFieldPoliciesByName",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "feedName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns the feed field policies (List<FieldPolicy>) as json.",
            "schema" : {
              "type" : "array",
              "items" : {
                "type" : "object"
              }
            }
          },
          "500" : {
            "description" : "The feed is unavailable.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          }
        }
      }
    },
    "/v1/feedmgr/feeds/disable/{feedId}" : {
      "post" : {
        "tags" : [ "Feed Manager - Feeds" ],
        "summary" : "Disables a feed.",
        "description" : "",
        "operationId" : "disableFeed",
        "consumes" : [ "application/json", "application/x-www-form-urlencoded" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "feedId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "The feed was disabled.",
            "schema" : {
              "$ref" : "#/definitions/FeedSummary"
            }
          },
          "500" : {
            "description" : "The feed could not be disabled.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          }
        }
      }
    },
    "/v1/feedmgr/feeds/edit/{feedId}" : {
      "post" : {
        "tags" : [ "Feed Manager - Feeds" ],
        "summary" : "Creates or updates a feed.",
        "description" : "",
        "operationId" : "editFeed",
        "consumes" : [ "application/json", "application/x-www-form-urlencoded" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/EditFeedEntity"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns the feed including any error messages.",
            "schema" : {
              "$ref" : "#/definitions/NifiFeed"
            }
          }
        }
      }
    },
    "/v1/feedmgr/feeds/enable/{feedId}" : {
      "post" : {
        "tags" : [ "Feed Manager - Feeds" ],
        "summary" : "Enables a feed.",
        "description" : "",
        "operationId" : "enableFeed",
        "consumes" : [ "application/json", "application/x-www-form-urlencoded" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "feedId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "The feed was enabled.",
            "schema" : {
              "$ref" : "#/definitions/FeedSummary"
            }
          },
          "500" : {
            "description" : "The feed could not be enabled.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          }
        }
      }
    },
    "/v1/feedmgr/feeds/feed-summary" : {
      "get" : {
        "tags" : [ "Feed Manager - Feeds" ],
        "summary" : "Gets the list of feed summaries.",
        "description" : "",
        "operationId" : "getFeedSummaries",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Returns a list of feeds.",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/FeedSummary"
              }
            }
          }
        }
      }
    },
    "/v1/feedmgr/feeds/names" : {
      "get" : {
        "tags" : [ "Feed Manager - Feeds" ],
        "summary" : "Gets the list of feed summaries.",
        "description" : "",
        "operationId" : "getFeedNames",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Returns a list of feeds.",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/FeedSummary"
              }
            }
          }
        },
        "deprecated" : true
      }
    },
    "/v1/feedmgr/feeds/possible-preconditions" : {
      "get" : {
        "tags" : [ "Feed Manager - Feeds" ],
        "summary" : "Gets the available preconditions for triggering a feed.",
        "description" : "",
        "operationId" : "getPossiblePreconditions",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Returns the available precondition rules.",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/PreconditionRule"
              }
            }
          }
        }
      }
    },
    "/v1/feedmgr/feeds/update-all-datasources" : {
      "post" : {
        "tags" : [ "Feed Manager - Feeds" ],
        "summary" : "Updates ALL  sources/destinations used for the feed lineage for ALL feeds.  WARNING: This will be an expensive call if you have lots of feeds.  This will remove all existing sources/destinations and revaluate the feed and its template for sources/destinations",
        "description" : "",
        "operationId" : "updateAllFeedDataSources",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "All the feed datasources were updated",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          }
        }
      }
    },
    "/v1/feedmgr/feeds/update-datasource-definitions" : {
      "post" : {
        "tags" : [ "Feed Manager - Feeds" ],
        "summary" : "Updates the datasource definitions.",
        "description" : "",
        "operationId" : "updateDatasourceDefinitions",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/DatasourceDefinitions"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns the updated definitions..",
            "schema" : {
              "$ref" : "#/definitions/DatasourceDefinitions"
            }
          }
        }
      }
    },
    "/v1/feedmgr/feeds/update-feed-lineage-styles" : {
      "post" : {
        "tags" : [ "Feed Manager - Feeds" ],
        "summary" : "Updates the feed lineage styles.",
        "description" : "",
        "operationId" : "updateFeedLineageStyles",
        "consumes" : [ "application/json", "application/x-www-form-urlencoded" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/definitions/FeedLineageStyle"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The styles were updated.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          }
        }
      }
    },
    "/v1/feedmgr/feeds/{feedId}" : {
      "get" : {
        "tags" : [ "Feed Manager - Feeds" ],
        "summary" : "Gets the specified feed.",
        "description" : "",
        "operationId" : "getFeed",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "feedId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns the feed.",
            "schema" : {
              "$ref" : "#/definitions/FeedMetadata"
            }
          },
          "500" : {
            "description" : "The feed is unavailable.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Feed Manager - Feeds" ],
        "summary" : "Deletes the specified feed.",
        "description" : "",
        "operationId" : "deleteFeed",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "feedId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "500" : {
            "description" : "The feed could not be deleted.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          },
          "204" : {
            "description" : "The feed was deleted."
          },
          "404" : {
            "description" : "The feed does not exist.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          },
          "409" : {
            "description" : "There are dependent feeds.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          }
        }
      }
    },
    "/v1/feedmgr/feeds/{feedId}/actions/allowed" : {
      "get" : {
        "tags" : [ "Feed Manager - Feeds" ],
        "summary" : "Gets the list of actions permitted for the given username and/or groups.",
        "description" : "",
        "operationId" : "getAllowedActions",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "feedId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "user",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "group",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns the actions.",
            "schema" : {
              "$ref" : "#/definitions/ActionGroup"
            }
          },
          "404" : {
            "description" : "A feed with the given ID does not exist.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Feed Manager - Feeds" ],
        "summary" : "Updates the permissions for a feed using the supplied permission change request.",
        "description" : "",
        "operationId" : "postPermissionsChange",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "feedId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/PermissionsChange"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The permissions were changed successfully.",
            "schema" : {
              "$ref" : "#/definitions/ActionGroup"
            }
          },
          "400" : {
            "description" : "The type is not valid.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          },
          "404" : {
            "description" : "No feed exists with the specified ID.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          }
        }
      }
    },
    "/v1/feedmgr/feeds/{feedId}/actions/available" : {
      "get" : {
        "tags" : [ "Feed Manager - Feeds" ],
        "summary" : "Gets the list of available actions that may be permitted or revoked on a feed.",
        "description" : "",
        "operationId" : "getAvailableActions",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "feedId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns the actions.",
            "schema" : {
              "$ref" : "#/definitions/ActionGroup"
            }
          },
          "404" : {
            "description" : "A feed with the given ID does not exist.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          }
        }
      }
    },
    "/v1/feedmgr/feeds/{feedId}/actions/change" : {
      "get" : {
        "tags" : [ "Feed Manager - Feeds" ],
        "summary" : "Constructs and returns a permission change request for a set of users/groups containing the actions that the requester may permit or revoke.",
        "description" : "",
        "operationId" : "getAllowedPermissionsChange",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "feedId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "type",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "user",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "group",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns the change request that may be modified by the client and re-posted.",
            "schema" : {
              "$ref" : "#/definitions/PermissionsChange"
            }
          },
          "400" : {
            "description" : "The type is not valid.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          },
          "404" : {
            "description" : "No feed exists with the specified ID.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          }
        }
      }
    },
    "/v1/feedmgr/feeds/{feedId}/merge-template" : {
      "post" : {
        "tags" : [ "Feed Manager - Feeds" ],
        "summary" : "Updates a feed with the latest template metadata.",
        "description" : "",
        "operationId" : "mergeTemplate",
        "consumes" : [ "application/json", "application/x-www-form-urlencoded" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "feedId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/FeedMetadata"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The feed was updated.",
            "schema" : {
              "$ref" : "#/definitions/FeedMetadata"
            }
          },
          "500" : {
            "description" : "The feed could not be updated.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          }
        }
      }
    },
    "/v1/feedmgr/feeds/{feedId}/profile-invalid-results" : {
      "get" : {
        "tags" : [ "Feed Manager - Feeds" ],
        "summary" : "Gets statistics on the invalid rows for the specified job.",
        "description" : "",
        "operationId" : "queryProfileInvalidResults",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "feedId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "processingdttm",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "limit",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "filter",
          "in" : "query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns the invalid row statistics.",
            "schema" : {
              "type" : "array",
              "items" : {
                "type" : "object",
                "additionalProperties" : {
                  "type" : "object"
                }
              }
            }
          },
          "500" : {
            "description" : "The profile is unavailable.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          }
        }
      }
    },
    "/v1/feedmgr/feeds/{feedId}/profile-stats" : {
      "get" : {
        "tags" : [ "Feed Manager - Feeds" ],
        "summary" : "Gets the profile statistics for the specified job.",
        "description" : "",
        "operationId" : "profileStats",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "feedId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "processingdttm",
          "in" : "query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns the profile statistics.",
            "schema" : {
              "type" : "array",
              "items" : {
                "type" : "object",
                "additionalProperties" : {
                  "type" : "object"
                }
              }
            }
          },
          "500" : {
            "description" : "The profile is unavailable.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          }
        }
      }
    },
    "/v1/feedmgr/feeds/{feedId}/profile-summary" : {
      "get" : {
        "tags" : [ "Feed Manager - Feeds" ],
        "summary" : "Gets a summary of the feed profiles.",
        "description" : "",
        "operationId" : "profileSummary",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "feedId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns the profile summaries.",
            "schema" : {
              "type" : "array",
              "items" : {
                "type" : "object",
                "additionalProperties" : {
                  "type" : "object"
                }
              }
            }
          },
          "500" : {
            "description" : "The profiles are unavailable.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          }
        }
      }
    },
    "/v1/feedmgr/feeds/{feedId}/profile-valid-results" : {
      "get" : {
        "tags" : [ "Feed Manager - Feeds" ],
        "summary" : "Gets statistics on the valid rows for the specified job.",
        "description" : "",
        "operationId" : "queryProfileValidResults",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "feedId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "processingdttm",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "limit",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns the valid row statistics.",
            "schema" : {
              "type" : "array",
              "items" : {
                "type" : "object",
                "additionalProperties" : {
                  "type" : "object"
                }
              }
            }
          },
          "500" : {
            "description" : "The profile is unavailable.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          }
        }
      }
    },
    "/v1/feedmgr/feeds/{feedId}/roles" : {
      "get" : {
        "tags" : [ "Feed Manager - Feeds" ],
        "summary" : "Gets the list of assigned members the feed's roles",
        "description" : "",
        "operationId" : "getRoleMemberships",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "feedId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "verbose",
          "in" : "query",
          "required" : false,
          "type" : "boolean",
          "default" : false
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns the role memberships.",
            "schema" : {
              "$ref" : "#/definitions/ActionGroup"
            }
          },
          "404" : {
            "description" : "A feed with the given ID does not exist.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Feed Manager - Feeds" ],
        "summary" : "Updates the members of one of a feed's roles.",
        "description" : "",
        "operationId" : "postPermissionsChange",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "feedId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/RoleMembershipChange"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The permissions were changed successfully.",
            "schema" : {
              "$ref" : "#/definitions/ActionGroup"
            }
          },
          "404" : {
            "description" : "No feed exists with the specified ID.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          }
        }
      }
    },
    "/v1/feedmgr/feeds/{feedId}/sla" : {
      "get" : {
        "tags" : [ "Feed Manager - Feeds" ],
        "summary" : "Gets the service level agreements referenced by a feed.",
        "description" : "",
        "operationId" : "getSla",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "feedId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns the service level agreements.",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/FeedServiceLevelAgreement"
              }
            }
          },
          "500" : {
            "description" : "The feed is unavailable.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          }
        }
      }
    },
    "/v1/feedmgr/feeds/{feedId}/update-datasources" : {
      "post" : {
        "tags" : [ "Feed Manager - Feeds" ],
        "summary" : "Updates a feeds sources/destinations used for the FeedLineage.  This will remove all existing sources/destinations and revaluate the feed and its template for sources/destinations",
        "description" : "",
        "operationId" : "updateFeedDatasources",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "feedId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "the datasources were updated",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          }
        }
      }
    },
    "/v1/feedmgr/feeds/{feedId}/upload-file" : {
      "post" : {
        "tags" : [ "Feed Manager - Feeds" ],
        "summary" : "Uploads files to be ingested by a feed.",
        "description" : "",
        "operationId" : "uploadFile",
        "consumes" : [ "multipart/form-data" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "feedId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/FormDataMultiPart"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Files are ready to be ingested."
          },
          "500" : {
            "description" : "Files could not be saved.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          }
        }
      }
    },
    "/v1/feedmgr/feeds/{feedId}/versions" : {
      "get" : {
        "tags" : [ "Feed Manager - Feeds" ],
        "summary" : "Updates a feed with the latest template metadata.",
        "description" : "",
        "operationId" : "getFeedVersions",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "feedId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "content",
          "in" : "query",
          "required" : false,
          "type" : "boolean",
          "default" : false
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns the feed versions.",
            "schema" : {
              "$ref" : "#/definitions/FeedMetadata"
            }
          },
          "500" : {
            "description" : "The feed is unavailable.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          }
        }
      }
    },
    "/v1/feedmgr/feeds/{feedId}/versions/{toVerId}/diff/{fromVerId}" : {
      "get" : {
        "tags" : [ "Feed Manager - Feeds" ],
        "operationId" : "getFeedVersionDifference",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "feedId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "toVerId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "fromVerId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/v1/feedmgr/feeds/{feedId}/versions/{versionId}" : {
      "get" : {
        "tags" : [ "Feed Manager - Feeds" ],
        "summary" : "Updates a feed with the latest template metadata.",
        "description" : "",
        "operationId" : "getFeedVersion",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "feedId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "versionId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "content",
          "in" : "query",
          "required" : false,
          "type" : "boolean",
          "default" : true
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns the feed versions.",
            "schema" : {
              "$ref" : "#/definitions/FeedMetadata"
            }
          },
          "400" : {
            "description" : "Returns the feed or version does not exist.",
            "schema" : {
              "$ref" : "#/definitions/FeedMetadata"
            }
          },
          "500" : {
            "description" : "The feed is unavailable.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          }
        }
      }
    },
    "/v1/feedmgr/hadoop-authorization/enabled" : {
      "get" : {
        "tags" : [ "Security - Groups" ],
        "summary" : "Indicates if security groups are enabled.",
        "description" : "",
        "operationId" : "groupEnabled",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Returns the enabled status.",
            "schema" : {
              "type" : "array",
              "items" : {
                "type" : "object",
                "additionalProperties" : {
                  "type" : "object"
                }
              }
            }
          }
        }
      }
    },
    "/v1/feedmgr/hadoop-authorization/groups" : {
      "get" : {
        "tags" : [ "Security - Groups" ],
        "summary" : "Gets a list of Hadoop security groups.",
        "description" : "",
        "operationId" : "getGroups",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Returns the security groups.",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/HadoopAuthorizationGroup"
              }
            }
          },
          "500" : {
            "description" : "The security groups are unavailable.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          }
        }
      }
    },
    "/v1/feedmgr/metadata-properties" : {
      "get" : {
        "tags" : [ "Feed Manager - Templates" ],
        "summary" : "Gets the available metadata properties.",
        "description" : "Returns a list of all properties that can be assigned during the feed registration process.",
        "operationId" : "getProperties",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Returns the metadata properties.",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/AnnotatedFieldProperty"
              }
            }
          }
        }
      }
    },
    "/v1/feedmgr/nifi/auto-align/{processGroupId}" : {
      "get" : {
        "tags" : [ "Feed Manager - NiFi" ],
        "summary" : "Organizes the components of the specified process group.",
        "description" : "",
        "operationId" : "autoAlign",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "processGroupId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "The result of the operation.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          }
        }
      }
    },
    "/v1/feedmgr/nifi/cleanup-versions/{processGroupId}" : {
      "get" : {
        "tags" : [ "Feed Manager - NiFi" ],
        "summary" : "Performs a cleanup of the specified process group.",
        "description" : "This method will list all of the child process groups and delete the ones where the name matches the regular expression: .* - \\d{13}",
        "operationId" : "cleanupVersionedProcessGroups",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "processGroupId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns the number of process groups deleted.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          },
          "500" : {
            "description" : "The process group is unavailable.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          }
        }
      }
    },
    "/v1/feedmgr/nifi/configuration/properties" : {
      "get" : {
        "tags" : [ "Feed Manager - NiFi" ],
        "summary" : "Gets user properties for NiFi.",
        "description" : "These are the properties beginning with 'config.' in the application.properties file.",
        "operationId" : "getFeeds",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Returns the user properties.",
            "schema" : {
              "type" : "object",
              "additionalProperties" : {
                "type" : "object"
              }
            }
          }
        }
      }
    },
    "/v1/feedmgr/nifi/controller-services" : {
      "get" : {
        "tags" : [ "Feed Manager - NiFi" ],
        "summary" : "Gets a list of available controller services.",
        "description" : "",
        "operationId" : "getServices",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Returns the controller services.",
            "schema" : {
              "type" : "array",
              "uniqueItems" : true,
              "items" : {
                "$ref" : "#/definitions/ControllerServiceDTO"
              }
            }
          },
          "500" : {
            "description" : "NiFi is unavailable.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          }
        }
      }
    },
    "/v1/feedmgr/nifi/controller-services/process-group/{processGroupId}" : {
      "get" : {
        "tags" : [ "Feed Manager - NiFi" ],
        "summary" : "Finds controller services of the specified type.",
        "description" : "",
        "operationId" : "getControllerServices",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "processGroupId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "type",
          "in" : "query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns the matching controller services.",
            "schema" : {
              "type" : "array",
              "uniqueItems" : true,
              "items" : {
                "$ref" : "#/definitions/ControllerServiceDTO"
              }
            }
          },
          "400" : {
            "description" : "The type cannot be empty.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          },
          "500" : {
            "description" : "The process group is unavailable.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          },
          "404" : {
            "description" : "The process group cannot be found.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          }
        }
      }
    },
    "/v1/feedmgr/nifi/controller-services/types" : {
      "get" : {
        "tags" : [ "Feed Manager - NiFi" ],
        "summary" : "Gets a list of the available controller service types.",
        "description" : "",
        "operationId" : "getServiceTypes",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Returns the controller service types.",
            "schema" : {
              "$ref" : "#/definitions/ControllerServiceTypesEntity"
            }
          },
          "500" : {
            "description" : "NiFi is unavailable.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          }
        }
      }
    },
    "/v1/feedmgr/nifi/controller-services/{serviceId}" : {
      "get" : {
        "tags" : [ "Feed Manager - NiFi" ],
        "summary" : "Gets a controller service.",
        "description" : "returns a Nifi controller service object by the supplied identifier",
        "operationId" : "getControllerService",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "serviceId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns the controller service.",
            "schema" : {
              "$ref" : "#/definitions/ControllerServiceDTO"
            }
          },
          "500" : {
            "description" : "Unable to find the controller service",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          }
        }
      }
    },
    "/v1/feedmgr/nifi/controller-services/{serviceId}/query" : {
      "post" : {
        "tags" : [ "Feed Manager - NiFi" ],
        "summary" : "Executes a SELECT query.",
        "description" : "Connects to the database specified by the controller service using the password defined in Medikly's application.properties file.",
        "operationId" : "executeQuery",
        "consumes" : [ "*/*" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "serviceId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Result of the query.",
            "schema" : {
              "$ref" : "#/definitions/QueryResult"
            }
          },
          "500" : {
            "description" : "NiFi is unavailable.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          },
          "404" : {
            "description" : "The controller service could not be found.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          }
        }
      }
    },
    "/v1/feedmgr/nifi/controller-services/{serviceId}/references" : {
      "get" : {
        "tags" : [ "Feed Manager - NiFi" ],
        "summary" : "Gets a controller service references in a map by component type. (i.e. Processor -> list, Controller Service -> list ...)",
        "description" : "returns a map of the type and reference objects",
        "operationId" : "getControllerServiceReferencesMap",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "serviceId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "returns a map of the type and reference objects",
            "schema" : {
              "$ref" : "#/definitions/ControllerServiceDTO"
            }
          },
          "500" : {
            "description" : "Unable to find the controller service",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          }
        }
      }
    },
    "/v1/feedmgr/nifi/controller-services/{serviceId}/tables" : {
      "get" : {
        "tags" : [ "Feed Manager - NiFi" ],
        "summary" : "Gets a list of table names from the specified database.",
        "description" : "Connects to the database specified by the controller service using the password defined in Medikly's application.properties file.",
        "operationId" : "getTableNames",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "serviceId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "serviceName",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "schema",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "tableName",
          "in" : "query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns the table names.",
            "schema" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            }
          },
          "500" : {
            "description" : "Nifi or the database are unavailable.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          }
        }
      }
    },
    "/v1/feedmgr/nifi/controller-services/{serviceId}/tables/{tableName}" : {
      "get" : {
        "tags" : [ "Feed Manager - NiFi" ],
        "summary" : "Gets the schema of the specified table.",
        "description" : "Connects to the database specified by the controller service using the password defined in Medikly's application.properties file.",
        "operationId" : "describeTable",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "serviceId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "tableName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "serviceName",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "schema",
          "in" : "query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns the table schema.",
            "schema" : {
              "$ref" : "#/definitions/TableSchema"
            }
          },
          "500" : {
            "description" : "Nifi or the database are unavailable.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          }
        }
      }
    },
    "/v1/feedmgr/nifi/flow/feed/{categoryAndFeedName}" : {
      "get" : {
        "tags" : [ "Feed Manager - NiFi" ],
        "summary" : "Gets the flow of the specified feed.",
        "description" : "",
        "operationId" : "getFlowForCategoryAndFeed",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "categoryAndFeedName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns the flow.",
            "schema" : {
              "$ref" : "#/definitions/NifiFlowProcessGroup"
            }
          },
          "500" : {
            "description" : "The process group is unavailable.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          }
        }
      }
    },
    "/v1/feedmgr/nifi/flow/{processGroupId}" : {
      "get" : {
        "tags" : [ "Feed Manager - NiFi" ],
        "summary" : "Gets the flow of the specified process group.",
        "description" : "",
        "operationId" : "getFlow",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "processGroupId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns the flow.",
            "schema" : {
              "$ref" : "#/definitions/NifiFlowProcessGroup"
            }
          },
          "500" : {
            "description" : "The process group is unavailable.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          }
        }
      }
    },
    "/v1/feedmgr/nifi/flows" : {
      "get" : {
        "tags" : [ "Feed Manager - NiFi" ],
        "summary" : "Gets a list of all flows.",
        "description" : "",
        "operationId" : "getFlows",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Returns the flows.",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/NifiFlowProcessGroup"
              }
            }
          },
          "500" : {
            "description" : "NiFi is unavailable.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          }
        }
      }
    },
    "/v1/feedmgr/nifi/reusable-input-ports" : {
      "get" : {
        "tags" : [ "Feed Manager - NiFi" ],
        "summary" : "Gets the input ports to reusable templates.",
        "description" : "",
        "operationId" : "getReusableFeedInputPorts",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Returns the input ports.",
            "schema" : {
              "type" : "array",
              "uniqueItems" : true,
              "items" : {
                "$ref" : "#/definitions/PortDTO"
              }
            }
          },
          "500" : {
            "description" : "NiFi is unavailable.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          }
        }
      }
    },
    "/v1/feedmgr/nifi/running" : {
      "get" : {
        "tags" : [ "Feed Manager - NiFi" ],
        "summary" : "Gets the status of the NiFi cluster.",
        "description" : "",
        "operationId" : "getRunning",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Returns the status of NiFi if its running or not"
          },
          "500" : {
            "description" : "An error occurred accessing the NiFi status.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          }
        }
      }
    },
    "/v1/feedmgr/nifi/status" : {
      "get" : {
        "tags" : [ "Feed Manager - NiFi" ],
        "summary" : "Retrieves details about NiFi.",
        "description" : "",
        "operationId" : "getAbout",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Returns details about NiFi.",
            "schema" : {
              "$ref" : "#/definitions/AboutDTO"
            }
          },
          "500" : {
            "description" : "NiFi is unavailable.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          }
        }
      }
    },
    "/v1/feedmgr/search" : {
      "get" : {
        "tags" : [ "Feed Manager - Search" ],
        "summary" : "Queries a search engine.",
        "description" : "",
        "operationId" : "search",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "q",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "rows",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "default" : 20,
          "format" : "int32"
        }, {
          "name" : "start",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "default" : 0,
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "The search results.",
            "schema" : {
              "$ref" : "#/definitions/SearchResult"
            }
          },
          "500" : {
            "description" : "The search engine is unavailable.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          },
          "403" : {
            "description" : "Access denied.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          }
        }
      }
    },
    "/v1/feedmgr/sla" : {
      "get" : {
        "tags" : [ "Feed Manager - SLA" ],
        "summary" : "Gets all SLAs.",
        "description" : "",
        "operationId" : "getAgreements",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Returns the SLAs.",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/FeedServiceLevelAgreement"
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Feed Manager - SLA" ],
        "summary" : "Saves the specified SLA.",
        "description" : "",
        "operationId" : "saveSla",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/Service Level Agreement UI Form Object"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns the SLA.",
            "schema" : {
              "$ref" : "#/definitions/Service Level Agreement UI Form Object"
            }
          },
          "500" : {
            "description" : "The SLA could not be saved.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          }
        }
      }
    },
    "/v1/feedmgr/sla/action/validate" : {
      "get" : {
        "tags" : [ "Feed Manager - SLA" ],
        "summary" : "Validates the specified action configuration.",
        "description" : "",
        "operationId" : "validateAction",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "actionConfigClass",
          "in" : "query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns the validation.",
            "schema" : {
              "$ref" : "#/definitions/ServiceLevelAgreementActionValidation"
            }
          }
        }
      }
    },
    "/v1/feedmgr/sla/available-metrics" : {
      "get" : {
        "tags" : [ "Feed Manager - SLA" ],
        "summary" : "Gets the list of available metrics.",
        "description" : "",
        "operationId" : "getAvailableSLAMetrics",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Returns the metrics.",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/ServiceLevelAgreementRule"
              }
            }
          }
        }
      }
    },
    "/v1/feedmgr/sla/available-responders" : {
      "get" : {
        "tags" : [ "Feed Manager - SLA" ],
        "summary" : "Gets the list of available responders.",
        "description" : "",
        "operationId" : "getAvailableSLAResponders",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Returns the responders.",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/ServiceLevelAgreementActionUiConfigurationItem"
              }
            }
          }
        }
      }
    },
    "/v1/feedmgr/sla/available-sla-template-actions" : {
      "get" : {
        "tags" : [ "Feed Manager - SLA" ],
        "summary" : "Gets the available SLA actions.",
        "description" : "",
        "operationId" : "getAvailableServiceLevelAgreementTemplateActionClasses",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Returns the list of SLA actions used when creating/editing an SLA Email Template.",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/LabelValue"
              }
            }
          }
        }
      }
    },
    "/v1/feedmgr/sla/email-template" : {
      "get" : {
        "tags" : [ "Feed Manager - SLA" ],
        "summary" : "Gets the list of email templates.",
        "description" : "",
        "operationId" : "getServiceLevelAgreementEmailTemplates",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Returns the list of email templates.",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/ServiceLevelAgreementEmailTemplate"
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Feed Manager - SLA" ],
        "summary" : "Saves the specified SLA.",
        "description" : "",
        "operationId" : "saveEmailTemplate",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/ServiceLevelAgreementEmailTemplate"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Save the SLA email template.",
            "schema" : {
              "$ref" : "#/definitions/ServiceLevelAgreementEmailTemplate"
            }
          },
          "500" : {
            "description" : "The SLA could not be saved.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          }
        }
      }
    },
    "/v1/feedmgr/sla/email-template-sla-references" : {
      "get" : {
        "tags" : [ "Feed Manager - SLA" ],
        "summary" : "Gets the SLA's related to this email template.",
        "description" : "",
        "operationId" : "getSlaReferencesForVelocityTemplate",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "templateId",
          "in" : "query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns the list of SLA's related to the given templateId.",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/SimpleServiceLevelAgreementDescription"
              }
            }
          }
        }
      }
    },
    "/v1/feedmgr/sla/feed" : {
      "get" : {
        "tags" : [ "Feed Manager - SLA" ],
        "summary" : "Gets all SLAs related to any feed.",
        "description" : "",
        "operationId" : "getAllSlas",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Returns the SLAs.",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/FeedServiceLevelAgreement"
              }
            }
          }
        }
      }
    },
    "/v1/feedmgr/sla/feed/{feedId}" : {
      "post" : {
        "tags" : [ "Feed Manager - SLA" ],
        "summary" : "Saves the SLA and attaches it to the specified feed.",
        "description" : "",
        "operationId" : "saveAndScheduleFeedSla",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "feedId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/Service Level Agreement UI Form Object"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns the SLA.",
            "schema" : {
              "$ref" : "#/definitions/Service Level Agreement UI Form Object"
            }
          },
          "400" : {
            "description" : "The feedId is not a valid UUID.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          },
          "500" : {
            "description" : "The SLA could not be saved.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          }
        }
      }
    },
    "/v1/feedmgr/sla/send-test-email-template" : {
      "post" : {
        "tags" : [ "Feed Manager - SLA" ],
        "summary" : "Test sending the SLA email template.",
        "description" : "",
        "operationId" : "sendTestTemplate",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/TestSlaVelocityEmail"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Test and send the email template to a test address.  If unable to send or an error occurs it will be indicated in the response.",
            "schema" : {
              "$ref" : "#/definitions/VelocityEmailTemplate"
            }
          }
        }
      }
    },
    "/v1/feedmgr/sla/test-email-template" : {
      "post" : {
        "tags" : [ "Feed Manager - SLA" ],
        "summary" : "Tests a velocity SLA email template.  This will validate and return the parsed template allowing you to preview it.  If an parse exception occurs it will be indicated in the content of the response.",
        "description" : "",
        "operationId" : "testTemplate",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/VelocityEmailTemplate"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The the SLA email template.",
            "schema" : {
              "$ref" : "#/definitions/VelocityEmailTemplate"
            }
          }
        }
      }
    },
    "/v1/feedmgr/sla/{id}" : {
      "get" : {
        "tags" : [ "Feed Manager - SLA" ],
        "summary" : "Gets the specified SLA.",
        "description" : "",
        "operationId" : "getAgreement",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns the SLA.",
            "schema" : {
              "$ref" : "#/definitions/ServiceLevelAgreement"
            }
          },
          "404" : {
            "description" : "The SLA could not be found.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          }
        }
      }
    },
    "/v1/feedmgr/sla/{id}/assessment" : {
      "get" : {
        "tags" : [ "Feed Manager - SLA" ],
        "summary" : "Gets the specified assessment.",
        "description" : "",
        "operationId" : "assessAgreement",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns the assessment.",
            "schema" : {
              "$ref" : "#/definitions/ServiceLevelAgreement"
            }
          },
          "400" : {
            "description" : "The assessment could not be found.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          }
        }
      }
    },
    "/v1/feedmgr/sla/{slaId}" : {
      "delete" : {
        "tags" : [ "Feed Manager - SLA" ],
        "summary" : "Deletes the specified SLA.",
        "description" : "",
        "operationId" : "deleteSla",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "slaId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "400" : {
            "description" : "The slaId is not a valid UUID.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          },
          "500" : {
            "description" : "The SLA could not be deleted.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          },
          "204" : {
            "description" : "The SLA has been deleted."
          }
        }
      }
    },
    "/v1/feedmgr/sla/{slaId}/form-object" : {
      "get" : {
        "tags" : [ "Feed Manager - SLA" ],
        "summary" : "Gets the form for editing the specified SLA.",
        "description" : "",
        "operationId" : "getSlaAsForm",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "slaId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns the SLA form.",
            "schema" : {
              "$ref" : "#/definitions/Service Level Agreement UI Form Object"
            }
          },
          "400" : {
            "description" : "The slaId is not a valid UUID.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          }
        }
      }
    },
    "/v1/feedmgr/templates" : {
      "get" : {
        "tags" : [ "Feed Manager - Templates" ],
        "summary" : "Gets the list of all templates.",
        "description" : "",
        "operationId" : "getTemplates",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "includeDetails",
          "in" : "query",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns the templates.",
            "schema" : {
              "type" : "array",
              "uniqueItems" : true,
              "items" : {
                "$ref" : "#/definitions/TemplateDtoWrapper"
              }
            }
          },
          "500" : {
            "description" : "NiFi is unavailable.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          }
        }
      }
    },
    "/v1/feedmgr/templates/nifi/reusable-input-ports-processors" : {
      "get" : {
        "tags" : [ "Feed Manager - Templates" ],
        "summary" : "Gets the processors connected to the specified input ports.",
        "description" : "",
        "operationId" : "getReusableTemplateProcessorsForInputPorts",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "inputPorts",
          "in" : "query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns the processors.",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Processor"
              }
            }
          },
          "500" : {
            "description" : "NiFi is unavailable.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          }
        }
      }
    },
    "/v1/feedmgr/templates/nifi/{templateId}/flow-info" : {
      "post" : {
        "tags" : [ "Feed Manager - Templates" ],
        "summary" : "Gets the flow for the specified template.",
        "description" : "",
        "operationId" : "getNiFiTemplateFlowInfo",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "templateId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/NiFiTemplateFlowRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns the flow.",
            "schema" : {
              "$ref" : "#/definitions/NiFiTemplateFlowResponse"
            }
          },
          "500" : {
            "description" : "NiFi is unavailable.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          }
        }
      }
    },
    "/v1/feedmgr/templates/nifi/{templateId}/input-ports" : {
      "get" : {
        "tags" : [ "Feed Manager - Templates" ],
        "summary" : "Gets the input ports in the specified template.",
        "description" : "",
        "operationId" : "getInputPortsForNifiTemplate",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "templateId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns the input ports.",
            "schema" : {
              "type" : "array",
              "uniqueItems" : true,
              "items" : {
                "$ref" : "#/definitions/PortDTO"
              }
            }
          },
          "500" : {
            "description" : "NiFi is unavailable.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          }
        }
      }
    },
    "/v1/feedmgr/templates/nifi/{templateId}/out-ports" : {
      "get" : {
        "tags" : [ "Feed Manager - Templates" ],
        "summary" : "Gets the output ports for the specified template.",
        "description" : "",
        "operationId" : "getOutputPortsForNifiTemplate",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "templateId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns the output ports.",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/PortDTO"
              }
            }
          },
          "500" : {
            "description" : "NiFi is unavailable.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          }
        }
      }
    },
    "/v1/feedmgr/templates/nifi/{templateId}/ports" : {
      "get" : {
        "tags" : [ "Feed Manager - Templates" ],
        "summary" : "Gets the ports in the specified template.",
        "description" : "",
        "operationId" : "getPortsForNifiTemplate",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "templateId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns the ports.",
            "schema" : {
              "type" : "array",
              "uniqueItems" : true,
              "items" : {
                "$ref" : "#/definitions/PortDTO"
              }
            }
          },
          "500" : {
            "description" : "NiFi is unavailable.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          }
        }
      }
    },
    "/v1/feedmgr/templates/nifi/{templateId}/processors" : {
      "get" : {
        "tags" : [ "Feed Manager - Templates" ],
        "summary" : "Gets the processors in the specified template.",
        "description" : "",
        "operationId" : "getNiFiTemplateProcessors",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "templateId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns the processors.",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Processor"
              }
            }
          },
          "500" : {
            "description" : "NiFi is unavailable.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          }
        }
      }
    },
    "/v1/feedmgr/templates/order" : {
      "post" : {
        "tags" : [ "Feed Manager - Templates" ],
        "summary" : "Modifies the order of the registered templates.",
        "description" : "",
        "operationId" : "orderTemplates",
        "consumes" : [ "application/json", "application/x-www-form-urlencoded" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/TemplateOrder"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns the result.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          }
        }
      }
    },
    "/v1/feedmgr/templates/register" : {
      "post" : {
        "tags" : [ "Feed Manager - Templates" ],
        "summary" : "Registers the specified template.",
        "description" : "",
        "operationId" : "registerTemplate",
        "consumes" : [ "application/json", "application/x-www-form-urlencoded" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/RegisteredTemplate"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The template was registered.",
            "schema" : {
              "$ref" : "#/definitions/RegisteredTemplate"
            }
          }
        }
      }
    },
    "/v1/feedmgr/templates/registered" : {
      "get" : {
        "tags" : [ "Feed Manager - Templates" ],
        "summary" : "Gets the list of registered templates.",
        "description" : "",
        "operationId" : "getRegisteredTemplates",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Returns the templates.",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/RegisteredTemplate"
              }
            }
          }
        }
      }
    },
    "/v1/feedmgr/templates/registered/{templateId}" : {
      "get" : {
        "tags" : [ "Feed Manager - Templates" ],
        "summary" : "Gets the specified registered template.",
        "description" : "",
        "operationId" : "getRegisteredTemplate",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "templateId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "allProperties",
          "in" : "query",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "feedName",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "templateName",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "feedEdit",
          "in" : "query",
          "required" : false,
          "type" : "boolean",
          "default" : false
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns the template.",
            "schema" : {
              "$ref" : "#/definitions/RegisteredTemplate"
            }
          },
          "500" : {
            "description" : "NiFi is unavailable.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          }
        }
      }
    },
    "/v1/feedmgr/templates/registered/{templateId}/actions/allowed" : {
      "get" : {
        "tags" : [ "Feed Manager - Templates" ],
        "summary" : "Gets the list of actions permitted for the given username and/or groups.",
        "description" : "",
        "operationId" : "getAllowedActions",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "templateId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "user",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "group",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns the actions.",
            "schema" : {
              "$ref" : "#/definitions/ActionGroup"
            }
          },
          "404" : {
            "description" : "A template with the given ID does not exist.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Feed Manager - Templates" ],
        "summary" : "Updates the permissions for a template using the supplied permission change request.",
        "description" : "",
        "operationId" : "postPermissionsChange",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "templateId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/PermissionsChange"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The permissions were changed successfully.",
            "schema" : {
              "$ref" : "#/definitions/ActionGroup"
            }
          },
          "400" : {
            "description" : "The type is not valid.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          },
          "404" : {
            "description" : "No template exists with the specified ID.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          }
        }
      }
    },
    "/v1/feedmgr/templates/registered/{templateId}/actions/available" : {
      "get" : {
        "tags" : [ "Feed Manager - Templates" ],
        "summary" : "Gets the list of available actions that may be permitted or revoked on a template.",
        "description" : "",
        "operationId" : "getAvailableActions",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "templateId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns the actions.",
            "schema" : {
              "$ref" : "#/definitions/ActionGroup"
            }
          },
          "404" : {
            "description" : "A template with the given ID does not exist.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          }
        }
      }
    },
    "/v1/feedmgr/templates/registered/{templateId}/actions/change" : {
      "get" : {
        "tags" : [ "Feed Manager - Templates" ],
        "summary" : "Constructs and returns a permission change request for a set of users/groups containing the actions that the requester may permit or revoke.",
        "description" : "",
        "operationId" : "getAllowedPermissionsChange",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "templateId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "type",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "user",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "group",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns the change request that may be modified by the client and re-posted.",
            "schema" : {
              "$ref" : "#/definitions/PermissionsChange"
            }
          },
          "400" : {
            "description" : "The type is not valid.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          },
          "404" : {
            "description" : "No template exists with the specified ID.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          }
        }
      }
    },
    "/v1/feedmgr/templates/registered/{templateId}/delete" : {
      "delete" : {
        "tags" : [ "Feed Manager - Templates" ],
        "summary" : "Deletes the specified registered template.",
        "description" : "",
        "operationId" : "deleteTemplate",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "templateId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns the result.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          }
        }
      }
    },
    "/v1/feedmgr/templates/registered/{templateId}/disable" : {
      "post" : {
        "tags" : [ "Feed Manager - Templates" ],
        "summary" : "Disables the specified registered template.",
        "description" : "",
        "operationId" : "disableTemplate",
        "consumes" : [ "application/json", "application/x-www-form-urlencoded" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "templateId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns the template.",
            "schema" : {
              "$ref" : "#/definitions/RegisteredTemplate"
            }
          }
        }
      }
    },
    "/v1/feedmgr/templates/registered/{templateId}/enable" : {
      "post" : {
        "tags" : [ "Feed Manager - Templates" ],
        "summary" : "Enables the specified registered template.",
        "description" : "",
        "operationId" : "enableTemplate",
        "consumes" : [ "application/json", "application/x-www-form-urlencoded" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "templateId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns the template.",
            "schema" : {
              "$ref" : "#/definitions/RegisteredTemplate"
            }
          }
        }
      }
    },
    "/v1/feedmgr/templates/registered/{templateId}/processor-properties" : {
      "get" : {
        "tags" : [ "Feed Manager - Templates" ],
        "summary" : "Gets the processors of a registered template for input ports.",
        "description" : "",
        "operationId" : "getReusableTemplateProcessorsForInputPorts",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "templateId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "includeReusableTemplates",
          "in" : "query",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns the processors.",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Processor"
              }
            }
          }
        }
      }
    },
    "/v1/feedmgr/templates/registered/{templateId}/properties" : {
      "get" : {
        "tags" : [ "Feed Manager - Templates" ],
        "summary" : "Gets the properties of a registered template.",
        "description" : "",
        "operationId" : "getRegisteredTemplateProperties",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "templateId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns the properties.",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/NifiProperty"
              }
            }
          }
        }
      }
    },
    "/v1/feedmgr/templates/registered/{templateId}/roles" : {
      "get" : {
        "tags" : [ "Feed Manager - Templates" ],
        "summary" : "Gets the list of assigned members the template's roles",
        "description" : "",
        "operationId" : "getRoleMemberships",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "templateId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "verbose",
          "in" : "query",
          "required" : false,
          "type" : "boolean",
          "default" : false
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns the role memberships.",
            "schema" : {
              "$ref" : "#/definitions/ActionGroup"
            }
          },
          "404" : {
            "description" : "A template with the given ID does not exist.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Feed Manager - Templates" ],
        "summary" : "Updates the members of one of a template's roles.",
        "description" : "",
        "operationId" : "postPermissionsChange",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "templateId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/RoleMembershipChange"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The permissions were changed successfully.",
            "schema" : {
              "$ref" : "#/definitions/ActionGroup"
            }
          },
          "404" : {
            "description" : "No template exists with the specified ID.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          }
        }
      }
    },
    "/v1/feedmgr/templates/reload-data-source-definitions" : {
      "get" : {
        "tags" : [ "Feed Manager - Templates" ],
        "summary" : "Reloads the datasource definitions file.",
        "description" : "",
        "operationId" : "reloadDatasources",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "The datasource definitions were reloaded.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          }
        }
      }
    },
    "/v1/feedmgr/templates/unregistered" : {
      "get" : {
        "tags" : [ "Feed Manager - Templates" ],
        "summary" : "Gets the list of unregistered templates.",
        "description" : "",
        "operationId" : "getUnregisteredTemplates",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "includeDetails",
          "in" : "query",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns the templates.",
            "schema" : {
              "type" : "array",
              "uniqueItems" : true,
              "items" : {
                "$ref" : "#/definitions/TemplateDtoWrapper"
              }
            }
          },
          "500" : {
            "description" : "NiFi is unavailable.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          }
        }
      }
    },
    "/v1/feedmgr/util/codemirror-types" : {
      "get" : {
        "tags" : [ "Feed Manager - Utilities" ],
        "summary" : "Gets the languages supported by CodeMirror.",
        "description" : "",
        "operationId" : "codeMirrorTypes",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Returns a mime-type to language mapping.",
            "schema" : {
              "type" : "object",
              "additionalProperties" : {
                "type" : "object"
              }
            }
          }
        }
      }
    },
    "/v1/feedmgr/util/cron-expression/preview" : {
      "get" : {
        "tags" : [ "Feed Manager - Utilities" ],
        "summary" : "Gets the next matching times of the cron expression.",
        "description" : "",
        "operationId" : "previewCronExpression",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "cronExpression",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "number",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "default" : 3,
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns the times.",
            "schema" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "/v1/feedmgr/util/cron-expression/validate" : {
      "get" : {
        "tags" : [ "Feed Manager - Utilities" ],
        "summary" : "Validates the specified cron expression.",
        "description" : "",
        "operationId" : "validateCronExpression",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "cronExpression",
          "in" : "query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns the result.",
            "schema" : {
              "type" : "object",
              "additionalProperties" : {
                "type" : "object"
              }
            }
          }
        }
      }
    },
    "/v1/feedmgr/util/decrypt" : {
      "post" : {
        "tags" : [ "Feed Manager - Utilities" ],
        "summary" : "Decrypts provided value",
        "description" : "",
        "operationId" : "decrypt",
        "consumes" : [ "text/plain" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns decrypted value",
            "schema" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "/v1/feedmgr/util/encrypt" : {
      "post" : {
        "tags" : [ "Feed Manager - Utilities" ],
        "summary" : "Encrypts provided value",
        "description" : "",
        "operationId" : "encrypt",
        "consumes" : [ "text/plain" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns encrypted value",
            "schema" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "/v1/feedmgr/util/format-date" : {
      "get" : {
        "tags" : [ "Feed Manager - Utilities" ],
        "summary" : "Formats a date using the specified pattern",
        "description" : "",
        "operationId" : "formatDateTime",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "pattern",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "date",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns the date string",
            "schema" : {
              "type" : "object",
              "additionalProperties" : {
                "type" : "object"
              }
            }
          },
          "400" : {
            "description" : "Pattern is not valid",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          }
        }
      }
    },
    "/v1/feedmgr/util/icon-colors" : {
      "get" : {
        "tags" : [ "Feed Manager - Utilities" ],
        "summary" : "Gets the list of available icon colors.",
        "description" : "",
        "operationId" : "iconColors",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Returns the icon colors.",
            "schema" : {
              "type" : "array",
              "items" : {
                "type" : "object",
                "additionalProperties" : {
                  "type" : "object"
                }
              }
            }
          }
        }
      }
    },
    "/v1/feedmgr/util/icons" : {
      "get" : {
        "tags" : [ "Feed Manager - Utilities" ],
        "summary" : "Gets the list of available icons.",
        "description" : "",
        "operationId" : "icons",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Returns the icons.",
            "schema" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "/v1/feedmgr/util/parse-date" : {
      "get" : {
        "tags" : [ "Feed Manager - Utilities" ],
        "summary" : "Parses a date using the specified pattern",
        "description" : "",
        "operationId" : "parseDateTime",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "pattern",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "text",
          "in" : "query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns time in milliseconds",
            "schema" : {
              "type" : "object",
              "additionalProperties" : {
                "type" : "object"
              }
            }
          },
          "400" : {
            "description" : "Pattern is not valid or pattern does not match text",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          }
        }
      }
    },
    "/v1/feedmgr/util/partition-functions" : {
      "get" : {
        "tags" : [ "Feed Manager - Utilities" ],
        "summary" : "Gets the list of partition functions.",
        "description" : "These functions can be used to produce partition values.",
        "operationId" : "partitionFunctions",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Returns the partition functions.",
            "schema" : {
              "type" : "array",
              "uniqueItems" : true,
              "items" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "/v1/feedmgr/util/system-name" : {
      "get" : {
        "tags" : [ "Feed Manager - Utilities" ],
        "summary" : "Generates a system name from the specified name.",
        "description" : "",
        "operationId" : "generateSystemName",
        "produces" : [ "text/plain" ],
        "parameters" : [ {
          "name" : "name",
          "in" : "query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns the system name.",
            "schema" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "/v1/feeds/health" : {
      "get" : {
        "tags" : [ "Operations Manager - Feeds" ],
        "summary" : "Provides a detailed health status of every feed.",
        "description" : "",
        "operationId" : "getFeedHealth",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Returns the health.",
            "schema" : {
              "$ref" : "#/definitions/FeedStatus"
            }
          }
        }
      }
    },
    "/v1/feeds/health-count" : {
      "get" : {
        "tags" : [ "Operations Manager - Feeds" ],
        "summary" : "Provides a summarized health status of every feed.",
        "description" : "",
        "operationId" : "getFeedHealthCounts",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Returns the health.",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/FeedHealth"
              }
            }
          }
        }
      }
    },
    "/v1/feeds/health-count/{feedName}" : {
      "get" : {
        "tags" : [ "Operations Manager - Feeds" ],
        "summary" : "Gets a health summary for the specified feed.",
        "description" : "",
        "operationId" : "getFeedHealthCounts",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "feedName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns the health.",
            "schema" : {
              "$ref" : "#/definitions/FeedHealth"
            }
          },
          "404" : {
            "description" : "The feed does not exist.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          }
        }
      }
    },
    "/v1/feeds/health/{feedName}" : {
      "get" : {
        "tags" : [ "Operations Manager - Feeds" ],
        "summary" : "Gets the detailed health status of the specified feed.",
        "description" : "",
        "operationId" : "getFeedHealthForFeed",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "feedName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns the health.",
            "schema" : {
              "$ref" : "#/definitions/FeedStatus"
            }
          },
          "404" : {
            "description" : "The feed does not exist.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          }
        }
      }
    },
    "/v1/feeds/names" : {
      "get" : {
        "tags" : [ "Operations Manager - Feeds" ],
        "summary" : "Gets the name of every feed.",
        "description" : "",
        "operationId" : "getFeedNames",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Returns the feed names.",
            "schema" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "/v1/feeds/query/{feedId}" : {
      "get" : {
        "tags" : [ "Operations Manager - Feeds" ],
        "summary" : "Gets the name of the feed matching the feedId.",
        "description" : "",
        "operationId" : "getFeedName",
        "produces" : [ "text/plain" ],
        "parameters" : [ {
          "name" : "feedId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns the feed name.",
            "schema" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "/v1/feeds/{feedName}/alerts" : {
      "get" : {
        "tags" : [ "Operations Manager - Feeds" ],
        "summary" : "Gets the name of every feed.",
        "description" : "",
        "operationId" : "getFeedAlerts",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "feedName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "feedId",
          "in" : "query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns the feed names.",
            "schema" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "/v1/feeds/{feedName}/daily-status-count" : {
      "get" : {
        "tags" : [ "Operations Manager - Feeds" ],
        "summary" : "Gets a daily health summary for the specified feed.",
        "description" : "",
        "operationId" : "findFeedDailyStatusCount",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "feedName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "period",
          "in" : "query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns the health.",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/JobStatusCount"
              }
            }
          }
        }
      }
    },
    "/v1/feeds/{feedName}/latest" : {
      "get" : {
        "tags" : [ "Operations Manager - Feeds" ],
        "summary" : "Gets the latest execution of the specified feed.",
        "description" : "",
        "operationId" : "findLatestFeedsByName",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "feedName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns the latest execution.",
            "schema" : {
              "$ref" : "#/definitions/ExecutedFeed"
            }
          },
          "400" : {
            "description" : "The feed does not exist or has no jobs.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          }
        }
      }
    },
    "/v1/field-policies/standardization" : {
      "get" : {
        "tags" : [ "Feed Manager - Feeds" ],
        "summary" : "Gets the available standardization policies.",
        "description" : "",
        "operationId" : "getStandardizationPolicies",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Returns the standardization policies.",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/FieldStandardizationRule"
              }
            }
          }
        }
      }
    },
    "/v1/field-policies/validation" : {
      "get" : {
        "tags" : [ "Feed Manager - Feeds" ],
        "summary" : "Gets the available validation policies.",
        "description" : "",
        "operationId" : "getValidationPolicies",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Returns the validation policies.",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/FieldValidationRule"
              }
            }
          }
        }
      }
    },
    "/v1/hive/browse/{schema}/{table}" : {
      "get" : {
        "tags" : [ "Feed Manager - Tables" ],
        "summary" : "Queries the specified table.",
        "description" : "",
        "operationId" : "browseTable",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "schema",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "table",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "where",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "limit",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "default" : 20,
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns the result.",
            "schema" : {
              "$ref" : "#/definitions/QueryResult"
            }
          },
          "500" : {
            "description" : "Hive is unavailable.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          }
        }
      }
    },
    "/v1/hive/query" : {
      "get" : {
        "tags" : [ "Feed Manager - Tables" ],
        "summary" : "Executes a Hive query.",
        "description" : "",
        "operationId" : "browseTable",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "query",
          "in" : "query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns the result.",
            "schema" : {
              "$ref" : "#/definitions/QueryResult"
            }
          },
          "500" : {
            "description" : "Hive is unavailable.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          }
        }
      }
    },
    "/v1/hive/query-result" : {
      "get" : {
        "tags" : [ "Feed Manager - Tables" ],
        "summary" : "Executes a Hive query.",
        "description" : "",
        "operationId" : "queryResult",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "query",
          "in" : "query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns the result.",
            "schema" : {
              "$ref" : "#/definitions/QueryResult"
            }
          },
          "500" : {
            "description" : "Hive is unavailable.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          }
        }
      }
    },
    "/v1/hive/refreshUserHiveAccessCache" : {
      "get" : {
        "tags" : [ "Feed Manager - Tables" ],
        "summary" : "Refreshes Hive table access cache for current user",
        "description" : "",
        "operationId" : "refreshUserHiveAccessCache",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Cache refreshed",
            "schema" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "/v1/hive/schemas" : {
      "get" : {
        "tags" : [ "Feed Manager - Tables" ],
        "summary" : "Lists the databases in Hive.",
        "description" : "",
        "operationId" : "getSchemaNames",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Returns the databases.",
            "schema" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            }
          },
          "500" : {
            "description" : "Hive is unavailable.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          }
        }
      }
    },
    "/v1/hive/schemas/{schema}/tables" : {
      "get" : {
        "tags" : [ "Feed Manager - Tables" ],
        "summary" : "Lists the tables in the specified database.",
        "description" : "",
        "operationId" : "getTableNames",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "schema",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns the table names.",
            "schema" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            }
          },
          "500" : {
            "description" : "Hive is unavailable.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          }
        }
      }
    },
    "/v1/hive/schemas/{schema}/tables/{table}" : {
      "get" : {
        "tags" : [ "Feed Manager - Tables" ],
        "summary" : "Gets the schema of the specified table.",
        "description" : "",
        "operationId" : "getTableSchema",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "schema",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "table",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns the table schema.",
            "schema" : {
              "$ref" : "#/definitions/TableSchema"
            }
          },
          "500" : {
            "description" : "Hive is unavailable.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          }
        }
      }
    },
    "/v1/hive/table-columns" : {
      "get" : {
        "tags" : [ "Feed Manager - Tables" ],
        "summary" : "Lists all columns from all tables.",
        "description" : "",
        "operationId" : "getTableColumns",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Returns the list of columns.",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/DatabaseMetadata"
              }
            }
          },
          "500" : {
            "description" : "Hive is unavailable.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          }
        }
      }
    },
    "/v1/hive/table-schemas" : {
      "get" : {
        "tags" : [ "Feed Manager - Tables" ],
        "summary" : "Gets the schema of every table.",
        "description" : "",
        "operationId" : "getAllTableSchemas",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Returns the table schemas.",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/TableSchema"
              }
            }
          },
          "500" : {
            "description" : "Hive is unavailable.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          }
        }
      }
    },
    "/v1/hive/tables" : {
      "get" : {
        "tags" : [ "Feed Manager - Tables" ],
        "summary" : "Lists matching tables in Hive schema. Will list all tables in schema if 'table' query param is not provided. Will list matching tables in all schemas if 'schema' query parameter is not provided. Will list all tables in all schemas if both 'schema' and 'table' parameters are not provided.",
        "description" : "",
        "operationId" : "getTables",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "schema",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "table",
          "in" : "query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns the table names.",
            "schema" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            }
          },
          "500" : {
            "description" : "Hive is unavailable.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          }
        }
      }
    },
    "/v1/hive/test-connection" : {
      "get" : {
        "tags" : [ "Feed Manager - Tables" ],
        "summary" : "Verifies the connection to Hive.",
        "description" : "",
        "operationId" : "testConnection",
        "produces" : [ "text/plain" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Returns the connection status.",
            "schema" : {
              "type" : "boolean"
            }
          }
        }
      }
    },
    "/v1/jobs" : {
      "get" : {
        "tags" : [ "Operations Manager - Jobs" ],
        "summary" : "Lists all jobs.",
        "description" : "",
        "operationId" : "findJobs",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "sort",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "limit",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "default" : 10,
          "format" : "int32"
        }, {
          "name" : "start",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "default" : 1,
          "format" : "int32"
        }, {
          "name" : "filter",
          "in" : "query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns the jobs.",
            "schema" : {
              "$ref" : "#/definitions/SearchResult"
            }
          },
          "400" : {
            "description" : "The sort cannot be empty.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          },
          "500" : {
            "description" : "The sort contains an invalid value.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          },
          "404" : {
            "description" : "The start or limit is not a valid integer.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          }
        }
      }
    },
    "/v1/jobs/abandon-all/{feedName}" : {
      "post" : {
        "tags" : [ "Operations Manager - Jobs" ],
        "summary" : "Abandons all jobs for the specified feed.",
        "description" : "",
        "operationId" : "abandonAllJobs",
        "consumes" : [ "application/json", "application/x-www-form-urlencoded" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "feedName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "204" : {
            "description" : "Return no content"
          }
        }
      }
    },
    "/v1/jobs/abandoned" : {
      "get" : {
        "tags" : [ "Operations Manager - Jobs" ],
        "summary" : "Gets the list of abandoned jobs.",
        "description" : "",
        "operationId" : "findAbandonedJobs",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "sort",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "limit",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "default" : 10,
          "format" : "int32"
        }, {
          "name" : "start",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "default" : 1,
          "format" : "int32"
        }, {
          "name" : "filter",
          "in" : "query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns the jobs.",
            "schema" : {
              "$ref" : "#/definitions/SearchResult"
            }
          },
          "400" : {
            "description" : "The sort cannot be empty.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          },
          "500" : {
            "description" : "The sort contains an invalid value.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          },
          "404" : {
            "description" : "The start or limit is not a valid integer.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          }
        }
      }
    },
    "/v1/jobs/completed" : {
      "get" : {
        "tags" : [ "Operations Manager - Jobs" ],
        "summary" : "Gets the list of completed jobs.",
        "description" : "",
        "operationId" : "findCompletedJobs",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "sort",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "limit",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "default" : 10,
          "format" : "int32"
        }, {
          "name" : "start",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "default" : 1,
          "format" : "int32"
        }, {
          "name" : "filter",
          "in" : "query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns the jobs.",
            "schema" : {
              "$ref" : "#/definitions/SearchResult"
            }
          },
          "400" : {
            "description" : "The sort cannot be empty.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          },
          "500" : {
            "description" : "The sort contains an invalid value.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          },
          "404" : {
            "description" : "The start or limit is not a valid integer.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          }
        }
      }
    },
    "/v1/jobs/daily-status-count" : {
      "get" : {
        "tags" : [ "Operations Manager - Jobs" ],
        "summary" : "Gets the daily statistics.",
        "description" : "",
        "operationId" : "findDailyStatusCount",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "period",
          "in" : "query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns the daily stats.",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/JobStatusCount"
              }
            }
          }
        }
      }
    },
    "/v1/jobs/failed" : {
      "get" : {
        "tags" : [ "Operations Manager - Jobs" ],
        "summary" : "Gets the list of failed jobs.",
        "description" : "",
        "operationId" : "findFailedJobs",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "sort",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "limit",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "default" : 10,
          "format" : "int32"
        }, {
          "name" : "start",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "default" : 1,
          "format" : "int32"
        }, {
          "name" : "filter",
          "in" : "query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns the jobs.",
            "schema" : {
              "$ref" : "#/definitions/SearchResult"
            }
          },
          "400" : {
            "description" : "The sort cannot be empty.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          },
          "500" : {
            "description" : "The sort contains an invalid value.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          },
          "404" : {
            "description" : "The start or limit is not a valid integer.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          }
        }
      }
    },
    "/v1/jobs/list" : {
      "get" : {
        "tags" : [ "Operations Manager - Jobs" ],
        "summary" : "Lists all jobs.",
        "description" : "",
        "operationId" : "findJobsList",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "sort",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "limit",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "default" : 10,
          "format" : "int32"
        }, {
          "name" : "start",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "default" : 1,
          "format" : "int32"
        }, {
          "name" : "filter",
          "in" : "query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns the jobs.",
            "schema" : {
              "$ref" : "#/definitions/SearchResult"
            }
          },
          "400" : {
            "description" : "The sort cannot be empty.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          },
          "500" : {
            "description" : "The sort contains an invalid value.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          },
          "404" : {
            "description" : "The start or limit is not a valid integer.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          }
        }
      }
    },
    "/v1/jobs/running" : {
      "get" : {
        "tags" : [ "Operations Manager - Jobs" ],
        "summary" : "Gets the list of running jobs.",
        "description" : "",
        "operationId" : "findRunningJobs",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "sort",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "limit",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "default" : 10,
          "format" : "int32"
        }, {
          "name" : "start",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "default" : 1,
          "format" : "int32"
        }, {
          "name" : "filter",
          "in" : "query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns the jobs.",
            "schema" : {
              "$ref" : "#/definitions/SearchResult"
            }
          },
          "400" : {
            "description" : "The sort cannot be empty.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          },
          "500" : {
            "description" : "The sort contains an invalid value.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          },
          "404" : {
            "description" : "The start or limit is not a valid integer.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          }
        }
      }
    },
    "/v1/jobs/running-failed-counts" : {
      "get" : {
        "tags" : [ "Operations Manager - Jobs" ],
        "summary" : "Gets the daily statistics.",
        "description" : "",
        "operationId" : "getRunningOrFailedJobCounts",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Returns the stats.",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/JobStatusCount"
              }
            }
          }
        }
      }
    },
    "/v1/jobs/stopped" : {
      "get" : {
        "tags" : [ "Operations Manager - Jobs" ],
        "summary" : "Gets the list of failed jobs.",
        "description" : "",
        "operationId" : "findStoppedJobs",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "sort",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "limit",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "default" : 10,
          "format" : "int32"
        }, {
          "name" : "start",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "default" : 1,
          "format" : "int32"
        }, {
          "name" : "filter",
          "in" : "query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns the jobs.",
            "schema" : {
              "$ref" : "#/definitions/SearchResult"
            }
          },
          "400" : {
            "description" : "The sort cannot be empty.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          },
          "500" : {
            "description" : "The sort contains an invalid value.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          },
          "404" : {
            "description" : "The start or limit is not a valid integer.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          }
        }
      }
    },
    "/v1/jobs/{executionId}" : {
      "get" : {
        "tags" : [ "Operations Manager - Jobs" ],
        "summary" : "Gets the specified job.",
        "description" : "",
        "operationId" : "getJob",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "executionId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "includeSteps",
          "in" : "query",
          "required" : false,
          "type" : "boolean",
          "default" : false
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns the job.",
            "schema" : {
              "$ref" : "#/definitions/ExecutedJob"
            }
          },
          "400" : {
            "description" : "The executionId is not a valid integer.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          }
        }
      }
    },
    "/v1/jobs/{executionId}/abandon" : {
      "post" : {
        "tags" : [ "Operations Manager - Jobs" ],
        "summary" : "Abandons the specified job.",
        "description" : "",
        "operationId" : "abandonJob",
        "consumes" : [ "application/json", "application/x-www-form-urlencoded" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "executionId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/JobAction"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns the abandoned job.",
            "schema" : {
              "$ref" : "#/definitions/ExecutedJob"
            }
          },
          "204" : {
            "description" : "The job could not be found."
          },
          "404" : {
            "description" : "The executionId is not a valid integer.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          }
        }
      }
    },
    "/v1/jobs/{executionId}/fail" : {
      "post" : {
        "tags" : [ "Operations Manager - Jobs" ],
        "summary" : "Fails the specified job.",
        "description" : "",
        "operationId" : "failJob",
        "consumes" : [ "application/json", "application/x-www-form-urlencoded" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "executionId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/JobAction"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns the job.",
            "schema" : {
              "$ref" : "#/definitions/ExecutedJob"
            }
          },
          "404" : {
            "description" : "The executionId is not a valid integer.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          }
        }
      }
    },
    "/v1/metadata/datasource" : {
      "get" : {
        "tags" : [ "Feed Manager - Data Sources" ],
        "summary" : "Gets the data sources matching the provided criteria.",
        "description" : "",
        "operationId" : "getDatasources",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "name",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "owner",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "on",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "after",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "before",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "type",
          "in" : "query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns the data sources.",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Datasource"
              }
            }
          },
          "500" : {
            "description" : "Medikly is unavailable.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          },
          "403" : {
            "description" : "Access denied.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Feed Manager - Data Sources" ],
        "summary" : "Updates the specified data source.",
        "description" : "",
        "operationId" : "postDatasource",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/UserDatasource"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns the data source.",
            "schema" : {
              "$ref" : "#/definitions/Datasource"
            }
          },
          "500" : {
            "description" : "Medikly is unavailable.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          },
          "403" : {
            "description" : "Access denied.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          }
        }
      }
    },
    "/v1/metadata/datasource/datasource-definitions" : {
      "get" : {
        "tags" : [ "Feed Manager - Data Sources" ],
        "summary" : "Gets the data source definitions.",
        "description" : "",
        "operationId" : "getDatasourceDefinitions",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Returns the data source definitions.",
            "schema" : {
              "type" : "array",
              "uniqueItems" : true,
              "items" : {
                "$ref" : "#/definitions/DatasourceDefinition"
              }
            }
          },
          "500" : {
            "description" : "Medikly is unavailable.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          },
          "403" : {
            "description" : "Access denied.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          }
        }
      }
    },
    "/v1/metadata/datasource/{id}" : {
      "get" : {
        "tags" : [ "Feed Manager - Data Sources" ],
        "summary" : "Gets the data source with the provided id.",
        "description" : "",
        "operationId" : "getDatasource",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "sensitive",
          "in" : "query",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns the data source.",
            "schema" : {
              "$ref" : "#/definitions/Datasource"
            }
          },
          "500" : {
            "description" : "Medikly is unavailable.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          },
          "403" : {
            "description" : "Access denied.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          },
          "404" : {
            "description" : "The data source does not exist.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Feed Manager - Data Sources" ],
        "summary" : "Deletes the data source with the provided id.",
        "description" : "",
        "operationId" : "deleteDatasource",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "500" : {
            "description" : "Medikly is unavailable.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          },
          "204" : {
            "description" : "The data source was deleted."
          },
          "403" : {
            "description" : "Access denied.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          },
          "404" : {
            "description" : "The data source does not exist.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          }
        }
      }
    },
    "/v1/metadata/datasource/{id}/actions/allowed" : {
      "get" : {
        "tags" : [ "Feed Manager - Data Sources" ],
        "summary" : "Gets the list of actions permitted for the given username and/or groups.",
        "description" : "",
        "operationId" : "getAllowedActions",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "user",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "group",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns the actions.",
            "schema" : {
              "$ref" : "#/definitions/ActionGroup"
            }
          },
          "404" : {
            "description" : "A data source with the given ID does not exist.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Feed Manager - Data Sources" ],
        "summary" : "Updates the permissions for a data source using the supplied permission change request.",
        "description" : "",
        "operationId" : "postPermissionsChange",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/PermissionsChange"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The permissions were changed successfully.",
            "schema" : {
              "$ref" : "#/definitions/ActionGroup"
            }
          },
          "400" : {
            "description" : "The type is not valid.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          },
          "404" : {
            "description" : "No data source exists with the specified ID.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          }
        }
      }
    },
    "/v1/metadata/datasource/{id}/actions/available" : {
      "get" : {
        "tags" : [ "Feed Manager - Data Sources" ],
        "summary" : "Gets the list of available actions that may be permitted or revoked on a data source.",
        "description" : "",
        "operationId" : "getAvailableActions",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns the actions.",
            "schema" : {
              "$ref" : "#/definitions/ActionGroup"
            }
          },
          "404" : {
            "description" : "A data source with the given ID does not exist.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          }
        }
      }
    },
    "/v1/metadata/datasource/{id}/actions/change" : {
      "get" : {
        "tags" : [ "Feed Manager - Data Sources" ],
        "summary" : "Constructs and returns a permission change request for a set of users/groups containing the actions that the requester may permit or revoke.",
        "description" : "",
        "operationId" : "getAllowedPermissionsChange",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "type",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "user",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "group",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns the change request that may be modified by the client and re-posted.",
            "schema" : {
              "$ref" : "#/definitions/PermissionsChange"
            }
          },
          "400" : {
            "description" : "The type is not valid.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          },
          "404" : {
            "description" : "No data source exists with the specified ID.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          }
        }
      }
    },
    "/v1/metadata/datasource/{id}/query" : {
      "get" : {
        "tags" : [ "Feed Manager - Data Sources" ],
        "summary" : "Executes a query and returns the result.",
        "description" : "",
        "operationId" : "query",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "query",
          "in" : "query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns the result.",
            "schema" : {
              "$ref" : "#/definitions/QueryResult"
            }
          },
          "400" : {
            "description" : "A JDBC data source with that id does not exist.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          },
          "500" : {
            "description" : "NiFi or the database are unavailable.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          },
          "403" : {
            "description" : "Access denied.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          }
        }
      }
    },
    "/v1/metadata/datasource/{id}/roles" : {
      "get" : {
        "tags" : [ "Feed Manager - Data Sources" ],
        "summary" : "Gets the list of assigned members the data source's roles",
        "description" : "",
        "operationId" : "getRoleMemberships",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "verbose",
          "in" : "query",
          "required" : false,
          "type" : "boolean",
          "default" : false
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns the role memberships.",
            "schema" : {
              "$ref" : "#/definitions/ActionGroup"
            }
          },
          "404" : {
            "description" : "A data source with the given ID does not exist.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Feed Manager - Data Sources" ],
        "summary" : "Updates the members of one of a data source's roles.",
        "description" : "",
        "operationId" : "postPermissionsChange",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/RoleMembershipChange"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The permissions were changed successfully.",
            "schema" : {
              "$ref" : "#/definitions/ActionGroup"
            }
          },
          "404" : {
            "description" : "No data source exists with the specified ID.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          }
        }
      }
    },
    "/v1/metadata/datasource/{id}/schemas" : {
      "get" : {
        "tags" : [ "Feed Manager - Data Sources" ],
        "summary" : "Gets the table names from the data source.",
        "description" : "Connects to the database specified by the data source.",
        "operationId" : "getSchemaNames",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns the schema names.",
            "schema" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            }
          },
          "500" : {
            "description" : "NiFi or the database are unavailable.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          },
          "403" : {
            "description" : "Access denied.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          },
          "404" : {
            "description" : "A JDBC data source with that id does not exist.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          }
        }
      }
    },
    "/v1/metadata/datasource/{id}/table-columns" : {
      "get" : {
        "tags" : [ "Feed Manager - Data Sources" ],
        "summary" : "Gets the tables and their columns from the data source for given schema",
        "description" : "Connects to the database specified by the data source.",
        "operationId" : "getTablesAndColumns",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "schema",
          "in" : "query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns tables and columns",
            "schema" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            }
          },
          "500" : {
            "description" : "NiFi or the database are unavailable.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          },
          "403" : {
            "description" : "Access denied.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          },
          "404" : {
            "description" : "A JDBC data source with that id does not exist.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          }
        }
      }
    },
    "/v1/metadata/datasource/{id}/tables" : {
      "get" : {
        "tags" : [ "Feed Manager - Data Sources" ],
        "summary" : "Gets the table names from the data source.",
        "description" : "Connects to the database specified by the data source.",
        "operationId" : "getTableNames",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "schema",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "tableName",
          "in" : "query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns the table names.",
            "schema" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            }
          },
          "500" : {
            "description" : "NiFi or the database are unavailable.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          },
          "403" : {
            "description" : "Access denied.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          },
          "404" : {
            "description" : "A JDBC data source with that id does not exist.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          }
        }
      }
    },
    "/v1/metadata/datasource/{id}/tables/{tableName}" : {
      "get" : {
        "tags" : [ "Feed Manager - Data Sources" ],
        "summary" : "Gets the schema of the specified table.",
        "description" : "Connects to the database specified by the data source.",
        "operationId" : "describeTable",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "tableName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "schema",
          "in" : "query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns the table schema.",
            "schema" : {
              "$ref" : "#/definitions/TableSchema"
            }
          },
          "500" : {
            "description" : "NiFi or the database are unavailable.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          },
          "403" : {
            "description" : "Access denied.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          },
          "404" : {
            "description" : "A JDBC data source with that id does not exist.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          }
        }
      }
    },
    "/v1/metadata/debug/datasource/hivetable" : {
      "get" : {
        "tags" : [ "Internal" ],
        "operationId" : "exampleHiveTable",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Datasource"
            },
            "headers" : { }
          }
        }
      }
    },
    "/v1/metadata/debug/feedop/event" : {
      "post" : {
        "tags" : [ "Internal" ],
        "operationId" : "postFeedOperationStatusEvent",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "feed",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "op",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "state",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "status",
          "in" : "query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "string"
            },
            "headers" : { }
          }
        }
      }
    },
    "/v1/metadata/debug/jcr" : {
      "get" : {
        "tags" : [ "Internal" ],
        "operationId" : "printJcrId",
        "produces" : [ "text/plain", "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "string"
            },
            "headers" : { }
          }
        }
      },
      "delete" : {
        "tags" : [ "Internal" ],
        "operationId" : "deleteJcrId",
        "produces" : [ "text/plain" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "string"
            },
            "headers" : { }
          }
        }
      }
    },
    "/v1/metadata/debug/jcr-index" : {
      "get" : {
        "tags" : [ "Internal" ],
        "operationId" : "getIndexes",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/JcrIndexDefinition"
              }
            },
            "headers" : { }
          }
        }
      }
    },
    "/v1/metadata/debug/jcr-index/register" : {
      "post" : {
        "tags" : [ "Internal" ],
        "summary" : "registers an index with modeshape",
        "description" : "",
        "operationId" : "registerIndex",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/JcrIndexDefinition"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "registers an index with modeshape",
            "schema" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "/v1/metadata/debug/jcr-index/reindex" : {
      "get" : {
        "tags" : [ "Internal" ],
        "operationId" : "getReindex",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            },
            "headers" : { }
          }
        }
      },
      "post" : {
        "tags" : [ "Internal" ],
        "operationId" : "postReindex",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            },
            "headers" : { }
          }
        }
      }
    },
    "/v1/metadata/debug/jcr-index/{indexName}/unregister" : {
      "post" : {
        "tags" : [ "Internal" ],
        "operationId" : "unregisterIndex",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "indexName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            },
            "headers" : { }
          }
        }
      }
    },
    "/v1/metadata/debug/jcr-sql" : {
      "get" : {
        "tags" : [ "Internal" ],
        "operationId" : "queryJcr",
        "produces" : [ "text/plain", "application/json" ],
        "parameters" : [ {
          "name" : "query",
          "in" : "query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/JcrQueryResult"
            },
            "headers" : { }
          }
        }
      }
    },
    "/v1/metadata/debug/jcr/{abspath}" : {
      "get" : {
        "tags" : [ "Internal" ],
        "operationId" : "printJcrTree",
        "produces" : [ "text/plain", "application/json" ],
        "parameters" : [ {
          "name" : "abspath",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "pattern" : ".*"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "string"
            },
            "headers" : { }
          }
        }
      },
      "delete" : {
        "tags" : [ "Internal" ],
        "operationId" : "deleteJcrTree",
        "produces" : [ "text/plain" ],
        "parameters" : [ {
          "name" : "abspath",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "pattern" : ".*"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "string"
            },
            "headers" : { }
          }
        }
      }
    },
    "/v1/metadata/debug/metrics" : {
      "get" : {
        "tags" : [ "Internal" ],
        "operationId" : "exampleMetrics",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Metric"
              }
            },
            "headers" : { }
          }
        }
      }
    },
    "/v1/metadata/debug/precondition" : {
      "get" : {
        "tags" : [ "Internal" ],
        "operationId" : "examplePrecondition",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/FeedPrecondition"
            },
            "headers" : { }
          }
        }
      }
    },
    "/v1/metadata/extension/type" : {
      "get" : {
        "tags" : [ "Internal" ],
        "operationId" : "getTypes",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/ExtensibleTypeDescriptor"
              }
            },
            "headers" : { }
          }
        }
      },
      "post" : {
        "tags" : [ "Internal" ],
        "operationId" : "createType",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/ExtensibleTypeDescriptor"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ExtensibleTypeDescriptor"
            },
            "headers" : { }
          }
        }
      }
    },
    "/v1/metadata/extension/type/{id}" : {
      "put" : {
        "tags" : [ "Internal" ],
        "operationId" : "updateType",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/ExtensibleTypeDescriptor"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ExtensibleTypeDescriptor"
            },
            "headers" : { }
          }
        }
      },
      "delete" : {
        "tags" : [ "Internal" ],
        "operationId" : "deleteType",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/v1/metadata/extension/type/{nameOrId}" : {
      "get" : {
        "tags" : [ "Internal" ],
        "operationId" : "getType",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "nameOrId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ExtensibleTypeDescriptor"
            },
            "headers" : { }
          }
        }
      }
    },
    "/v1/metadata/feed" : {
      "get" : {
        "tags" : [ "Feed Manager - Feeds" ],
        "summary" : "Gets a list of feeds.",
        "description" : "",
        "operationId" : "getFeeds",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "cat",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "name",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "srcid",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "destid",
          "in" : "query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns the matching feeds.",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Feed"
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Feed Manager - Feeds" ],
        "summary" : "Creates a new feed.",
        "description" : "",
        "operationId" : "createFeed",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/Feed"
          }
        }, {
          "name" : "ensure",
          "in" : "query",
          "required" : false,
          "type" : "boolean",
          "default" : true
        } ],
        "responses" : {
          "200" : {
            "description" : "The feed was created.",
            "schema" : {
              "$ref" : "#/definitions/Feed"
            }
          },
          "400" : {
            "description" : "The name is already in use.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          },
          "500" : {
            "description" : "The feed could not be created.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          }
        }
      }
    },
    "/v1/metadata/feed/data-history-reindex-configured" : {
      "get" : {
        "tags" : [ "Feed Manager - Feeds" ],
        "summary" : "Check if feed data history reindexing is configured in Medikly.",
        "description" : "",
        "operationId" : "getDataHistoryReindexConfigured",
        "produces" : [ "text/plain" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Info on whether data history reindexing is configured in Medikly",
            "schema" : {
              "type" : "boolean"
            }
          },
          "500" : {
            "description" : "Unable to check if data history reindexing is configured in Medikly",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          }
        }
      }
    },
    "/v1/metadata/feed/feeds-for-data-history-reindex" : {
      "get" : {
        "tags" : [ "Feed Manager - Feeds" ],
        "summary" : "Get all feeds for which historical data needs to be reindexed.",
        "description" : "",
        "operationId" : "getFeedsForDataHistoryReindexing",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Returns all identified feeds",
            "schema" : {
              "$ref" : "#/definitions/FeedsForDataHistoryReindex"
            }
          },
          "404" : {
            "description" : "The feeds could not be found.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          }
        }
      }
    },
    "/v1/metadata/feed/{feedId}/depfeeds" : {
      "post" : {
        "tags" : [ "Feed Manager - Feeds" ],
        "summary" : "Adds a dependency to the specified feed.",
        "description" : "",
        "operationId" : "addDependent",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "feedId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "dependentId",
          "in" : "query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns the new dependency graph.",
            "schema" : {
              "$ref" : "#/definitions/FeedDependencyGraph"
            }
          },
          "500" : {
            "description" : "The dependency could not be added.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Feed Manager - Feeds" ],
        "summary" : "Removes a dependency from the specified feed.",
        "description" : "",
        "operationId" : "removeDependent",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "feedId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "dependentId",
          "in" : "query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns the new dependency graph.",
            "schema" : {
              "$ref" : "#/definitions/FeedDependencyGraph"
            }
          },
          "500" : {
            "description" : "The dependency could not be removed.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          }
        }
      }
    },
    "/v1/metadata/feed/{feedId}/depfeeds/delta" : {
      "get" : {
        "tags" : [ "Feed Manager - Feeds" ],
        "summary" : "Gets the dependencies delta for the specified feed.",
        "description" : "",
        "operationId" : "getDependentResultDeltas",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "feedId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns the dependencies deltas.",
            "schema" : {
              "$ref" : "#/definitions/FeedDependencyDeltaResults"
            }
          },
          "500" : {
            "description" : "The feed could not be found.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          }
        }
      }
    },
    "/v1/metadata/feed/{feedId}/destination" : {
      "post" : {
        "tags" : [ "Feed Manager - Feeds" ],
        "summary" : "Adds a destination to the specified feed.",
        "description" : "",
        "operationId" : "addFeedDestination",
        "consumes" : [ "application/x-www-form-urlencoded" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "feedId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "datasourceId",
          "in" : "formData",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns the updated feed.",
            "schema" : {
              "$ref" : "#/definitions/Feed"
            }
          },
          "400" : {
            "description" : "The feed could not be found.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          },
          "500" : {
            "description" : "The feed could not be updated.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          }
        }
      }
    },
    "/v1/metadata/feed/{feedId}/lineage" : {
      "get" : {
        "tags" : [ "Feed Manager - Feeds" ],
        "summary" : "Gets the lineage of the specified feed.",
        "description" : "",
        "operationId" : "getFeedLineage",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "feedId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns the feed lineage.",
            "schema" : {
              "$ref" : "#/definitions/FeedLineage"
            }
          },
          "400" : {
            "description" : "The id is not a valid UUID.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          }
        }
      }
    },
    "/v1/metadata/feed/{feedId}/precondition" : {
      "post" : {
        "tags" : [ "Feed Manager - Feeds" ],
        "summary" : "Adds a precondition to the specified feed.",
        "description" : "",
        "operationId" : "setPrecondition",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "feedId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/FeedPrecondition"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns the updated feed.",
            "schema" : {
              "$ref" : "#/definitions/Feed"
            }
          },
          "400" : {
            "description" : "The feed could not be found.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          },
          "500" : {
            "description" : "The feed could not be updated.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          }
        }
      }
    },
    "/v1/metadata/feed/{feedId}/source" : {
      "post" : {
        "tags" : [ "Feed Manager - Feeds" ],
        "summary" : "Adds a source to the specified feed.",
        "description" : "",
        "operationId" : "addFeedSource",
        "consumes" : [ "application/x-www-form-urlencoded" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "feedId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "datasourceId",
          "in" : "formData",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns the updated feed.",
            "schema" : {
              "$ref" : "#/definitions/Feed"
            }
          },
          "400" : {
            "description" : "The feed could not be found.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          },
          "500" : {
            "description" : "The feed could not be updated.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          }
        }
      }
    },
    "/v1/metadata/feed/{id}" : {
      "get" : {
        "tags" : [ "Feed Manager - Feeds" ],
        "summary" : "Gets the specified feed.",
        "description" : "",
        "operationId" : "getFeed",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns the feed.",
            "schema" : {
              "$ref" : "#/definitions/Feed"
            }
          },
          "400" : {
            "description" : "The id is not a valid UUID.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          },
          "500" : {
            "description" : "The feed could not be found.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Feed Manager - Feeds" ],
        "summary" : "Updates the specified feed.",
        "description" : "",
        "operationId" : "updateFeed",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/Feed"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The feed was updated.",
            "schema" : {
              "$ref" : "#/definitions/Feed"
            }
          },
          "500" : {
            "description" : "The feed could not be updated.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          },
          "404" : {
            "description" : "The feed was not found.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          }
        }
      }
    },
    "/v1/metadata/feed/{id}/actions/allowed" : {
      "get" : {
        "tags" : [ "Feed Manager - Feeds" ],
        "summary" : "Gets the list of actions permitted for the given username and/or groups.",
        "description" : "",
        "operationId" : "getAllowedActions",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "user",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "group",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns the actions.",
            "schema" : {
              "$ref" : "#/definitions/ActionGroup"
            }
          },
          "404" : {
            "description" : "A feed with the given ID does not exist.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Feed Manager - Feeds" ],
        "summary" : "Updates the permissions for a feed using the supplied permission change request.",
        "description" : "",
        "operationId" : "postPermissionsChange",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/PermissionsChange"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The permissions were changed successfully.",
            "schema" : {
              "$ref" : "#/definitions/ActionGroup"
            }
          },
          "400" : {
            "description" : "The type is not valid.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          },
          "404" : {
            "description" : "No feed exists with the specified ID.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          }
        }
      }
    },
    "/v1/metadata/feed/{id}/actions/available" : {
      "get" : {
        "tags" : [ "Feed Manager - Feeds" ],
        "summary" : "Gets the list of available actions that may be permitted or revoked on a feed.",
        "description" : "",
        "operationId" : "getAvailableActions",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns the actions.",
            "schema" : {
              "$ref" : "#/definitions/ActionGroup"
            }
          },
          "404" : {
            "description" : "A feed with the given ID does not exist.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          }
        }
      }
    },
    "/v1/metadata/feed/{id}/actions/change/allowed" : {
      "get" : {
        "tags" : [ "Feed Manager - Feeds" ],
        "summary" : "Constructs and returns a permission change request for a set of users/groups containing the actions that the requester may permit or revoke.",
        "description" : "",
        "operationId" : "getAllowedPermissionsChange",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "type",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "user",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "group",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns the change request that may be modified by the client and re-posted.",
            "schema" : {
              "$ref" : "#/definitions/PermissionsChange"
            }
          },
          "400" : {
            "description" : "The type is not valid.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          },
          "404" : {
            "description" : "No feed exists with the specified ID.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          }
        }
      }
    },
    "/v1/metadata/feed/{id}/depfeeds" : {
      "get" : {
        "tags" : [ "Feed Manager - Feeds" ],
        "summary" : "Gets the dependencies of the specified feed.",
        "description" : "",
        "operationId" : "getDependencyGraph",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "preconds",
          "in" : "query",
          "required" : false,
          "type" : "boolean",
          "default" : false
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns the dependency graph.",
            "schema" : {
              "$ref" : "#/definitions/FeedDependencyGraph"
            }
          },
          "404" : {
            "description" : "The feed could not be found.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          }
        }
      }
    },
    "/v1/metadata/feed/{id}/destination" : {
      "get" : {
        "tags" : [ "Feed Manager - Feeds" ],
        "summary" : "Gets the destinations of the specified feed.",
        "description" : "",
        "operationId" : "getFeedDestinations",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns the feed destinations.",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/FeedDestination"
              }
            }
          },
          "400" : {
            "description" : "The id is not a valid UUID.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          },
          "404" : {
            "description" : "The feed could not be found.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          }
        }
      }
    },
    "/v1/metadata/feed/{id}/initstatus" : {
      "get" : {
        "tags" : [ "Feed Manager - Feeds" ],
        "summary" : "Gets the registration status for the specified feed.",
        "description" : "",
        "operationId" : "getInitializationStatus",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns the registration status.",
            "schema" : {
              "$ref" : "#/definitions/InitializationStatus"
            }
          },
          "404" : {
            "description" : "The feed could not be found.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Feed Manager - Feeds" ],
        "summary" : "Sets the registration status for the specified feed.",
        "description" : "",
        "operationId" : "putInitializationStatus",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/InitializationStatus"
          }
        } ],
        "responses" : {
          "500" : {
            "description" : "The registration status could not be updated.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          },
          "204" : {
            "description" : "The registration status was updated."
          },
          "404" : {
            "description" : "The feed could not be found.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          }
        }
      }
    },
    "/v1/metadata/feed/{id}/initstatus/history" : {
      "get" : {
        "tags" : [ "Feed Manager - Feeds" ],
        "summary" : "Gets the registration history for the specified feed.",
        "description" : "",
        "operationId" : "getInitializationStatusHistory",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns the registration history.",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/InitializationStatus"
              }
            }
          },
          "404" : {
            "description" : "The feed could not be found.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          }
        }
      }
    },
    "/v1/metadata/feed/{id}/precondition" : {
      "get" : {
        "tags" : [ "Feed Manager - Feeds" ],
        "summary" : "Gets the precondition for the specified feed.",
        "description" : "",
        "operationId" : "getFeedPrecondition",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns the feed precondition.",
            "schema" : {
              "$ref" : "#/definitions/FeedPrecondition"
            }
          },
          "400" : {
            "description" : "The id is not a valid UUID.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          },
          "404" : {
            "description" : "The feed could not be found.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          }
        }
      }
    },
    "/v1/metadata/feed/{id}/precondition/assessment" : {
      "get" : {
        "tags" : [ "Feed Manager - Feeds" ],
        "summary" : "Assess the precondition of the specified feed.",
        "description" : "",
        "operationId" : "assessPrecondition",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns the assessment.",
            "schema" : {
              "$ref" : "#/definitions/ServiceLevelAssessment"
            }
          },
          "400" : {
            "description" : "The id is not a valid UUID or the feed does not have a precondition.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          },
          "404" : {
            "description" : "The feed could not be found.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          }
        }
      }
    },
    "/v1/metadata/feed/{id}/precondition/assessment/result" : {
      "get" : {
        "tags" : [ "Feed Manager - Feeds" ],
        "summary" : "Assess the precondition of the specified feed.",
        "description" : "",
        "operationId" : "assessPreconditionResult",
        "produces" : [ "text/plain" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns the assessment result.",
            "schema" : {
              "$ref" : "#/definitions/ServiceLevelAssessment"
            }
          },
          "400" : {
            "description" : "The id is not a valid UUID or the feed does not have a precondition.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          },
          "404" : {
            "description" : "The feed could not be found.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          }
        }
      }
    },
    "/v1/metadata/feed/{id}/props" : {
      "get" : {
        "tags" : [ "Feed Manager - Feeds" ],
        "summary" : "Gets the properties of the specified feed.",
        "description" : "",
        "operationId" : "getFeedProperties",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns the feed properties.",
            "schema" : {
              "type" : "object",
              "additionalProperties" : {
                "type" : "object"
              }
            }
          },
          "400" : {
            "description" : "The id is not a valid UUID.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          },
          "404" : {
            "description" : "The feed was not found.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Feed Manager - Feeds" ],
        "summary" : "Merges the properties for the specified feed.",
        "description" : "",
        "operationId" : "mergeFeedProperties",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns the updated properties.",
            "schema" : {
              "type" : "object",
              "additionalProperties" : {
                "type" : "object"
              }
            }
          },
          "400" : {
            "description" : "The id is not a valid UUID.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          },
          "500" : {
            "description" : "The properties could not be updated.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          },
          "404" : {
            "description" : "The feed could not be found.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Feed Manager - Feeds" ],
        "summary" : "Sets the properties for the specified feed.",
        "description" : "",
        "operationId" : "replaceFeedProperties",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns the updated properties.",
            "schema" : {
              "type" : "object",
              "additionalProperties" : {
                "type" : "string"
              }
            }
          },
          "400" : {
            "description" : "The id is not a valid UUID.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          },
          "500" : {
            "description" : "The properties could not be updated.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          },
          "404" : {
            "description" : "The feed could not be found.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          }
        }
      }
    },
    "/v1/metadata/feed/{id}/source" : {
      "get" : {
        "tags" : [ "Feed Manager - Feeds" ],
        "summary" : "Gets the sources of the specified feed.",
        "description" : "",
        "operationId" : "getFeedSources",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns the feed sources.",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/FeedSource"
              }
            }
          },
          "400" : {
            "description" : "The id is not a valid UUID.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          },
          "404" : {
            "description" : "The feed could not be found.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          }
        }
      }
    },
    "/v1/metadata/feed/{id}/update-data-history-reindex-status" : {
      "post" : {
        "tags" : [ "Feed Manager - Feeds" ],
        "summary" : "Sets the data history reindexing status for the specified feed",
        "description" : "",
        "operationId" : "updateDataHistoryReindexStatus",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/HistoryReindexingStatus"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns the feed's updated data history reindex status and columns to index",
            "schema" : {
              "$ref" : "#/definitions/FeedDataHistoryReindexParams"
            }
          },
          "500" : {
            "description" : "The data history reindex status could not be updated for the feed",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          }
        }
      }
    },
    "/v1/metadata/feed/{id}/watermark" : {
      "get" : {
        "tags" : [ "Feed Manager - Feeds" ],
        "summary" : "Gets the HighWaterMarks used by the specified feed.",
        "description" : "",
        "operationId" : "getHighWaterMarks",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns the HighWaterMark names.",
            "schema" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            }
          },
          "404" : {
            "description" : "The feed could not be found.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          }
        }
      }
    },
    "/v1/metadata/feed/{id}/watermark/{name}" : {
      "get" : {
        "tags" : [ "Feed Manager - Feeds" ],
        "summary" : "Gets the value for a specific HighWaterMark.",
        "description" : "",
        "operationId" : "getHighWaterMark",
        "produces" : [ "text/plain", "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "name",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns the HighWaterMark value.",
            "schema" : {
              "type" : "string"
            }
          },
          "404" : {
            "description" : "The HighWaterMark could not be found.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Feed Manager - Feeds" ],
        "summary" : "Sets the value for a specific HighWaterMark.",
        "description" : "",
        "operationId" : "cancelHighWaterMark",
        "consumes" : [ "text/plain" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "name",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "cancel",
          "in" : "query",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "500" : {
            "description" : "The HighWaterMark value could not be changed.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          },
          "204" : {
            "description" : "The HighWaterMark value has been changed."
          },
          "404" : {
            "description" : "The feed could not be found.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Feed Manager - Feeds" ],
        "summary" : "Sets the value for a specific HighWaterMark.",
        "description" : "",
        "operationId" : "putHighWaterMark",
        "consumes" : [ "text/plain" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "name",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "cancel",
          "in" : "query",
          "required" : false,
          "type" : "boolean",
          "default" : false
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "500" : {
            "description" : "The HighWaterMark value could not be changed.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          },
          "204" : {
            "description" : "The HighWaterMark value has been changed."
          },
          "404" : {
            "description" : "The feed could not be found.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Feed Manager - Feeds" ],
        "summary" : "Deletes the specified HighWaterMark.",
        "description" : "",
        "operationId" : "deleteHighWaterMark",
        "consumes" : [ "text/plain" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "name",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "500" : {
            "description" : "The HighWaterMark could not be deleted.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          },
          "204" : {
            "description" : "The HighWaterMark has been deleted."
          },
          "404" : {
            "description" : "The feed could not be found.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          }
        }
      }
    },
    "/v1/metadata/nifi-provenance/nifi-flow-cache/available" : {
      "get" : {
        "tags" : [ "NiFi - Provenance" ],
        "summary" : "Indicates if the cache is available.",
        "description" : "",
        "operationId" : "isAvailable",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Returns the cache status.",
            "schema" : {
              "type" : "boolean"
            }
          }
        }
      }
    },
    "/v1/metadata/nifi-provenance/nifi-flow-cache/cache-summary" : {
      "get" : {
        "tags" : [ "NiFi - Provenance" ],
        "summary" : "Gets the flow cache status.",
        "description" : "",
        "operationId" : "previewFlowUpdates",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Returns the cache status.",
            "schema" : {
              "$ref" : "#/definitions/CacheSummary"
            }
          }
        }
      }
    },
    "/v1/metadata/nifi-provenance/nifi-flow-cache/get-cache" : {
      "get" : {
        "tags" : [ "NiFi - Provenance" ],
        "summary" : "Gets the flows.",
        "description" : "",
        "operationId" : "getCache",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "syncId",
          "in" : "query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns the flows.",
            "schema" : {
              "$ref" : "#/definitions/NiFiFlowCacheSync"
            }
          }
        }
      }
    },
    "/v1/metadata/nifi-provenance/nifi-flow-cache/get-flow-updates" : {
      "get" : {
        "tags" : [ "NiFi - Provenance" ],
        "summary" : "Gets flow updates since the last sync.",
        "description" : "",
        "operationId" : "getFlowUpdates",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "syncId",
          "in" : "query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns the flow updates.",
            "schema" : {
              "$ref" : "#/definitions/NiFiFlowCacheSync"
            }
          }
        }
      }
    },
    "/v1/metadata/nifi-provenance/nifi-flow-cache/preview-flow-updates" : {
      "get" : {
        "tags" : [ "NiFi - Provenance" ],
        "summary" : "Gets flow updates without syncing.",
        "description" : "",
        "operationId" : "previewFlowUpdates",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "syncId",
          "in" : "query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns the flow updates.",
            "schema" : {
              "$ref" : "#/definitions/NiFiFlowCacheSync"
            }
          }
        }
      }
    },
    "/v1/metadata/nifi-provenance/nifi-flow-cache/reset-cache" : {
      "get" : {
        "tags" : [ "NiFi - Provenance" ],
        "summary" : "Resets the flow cache.",
        "description" : "",
        "operationId" : "resetCache",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "The cache was reset.",
            "schema" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "/v1/metadata/nifi-provenance/nifi-flow-cache/reset-flow-updates" : {
      "get" : {
        "tags" : [ "NiFi - Provenance" ],
        "summary" : "Resets the updates to the flow cache since the last sync.",
        "description" : "",
        "operationId" : "getSyncUpdates",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "syncId",
          "in" : "query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns the updated flow cache.",
            "schema" : {
              "$ref" : "#/definitions/NiFiFlowCacheSync"
            }
          }
        }
      }
    },
    "/v1/provenance-stats/all" : {
      "get" : {
        "tags" : [ "Operations Manager - Feeds" ],
        "summary" : "Gets the provenance statistics for all feeds.",
        "description" : "",
        "operationId" : "findStats",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Returns the provenance stats.",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/NifiFeedProcessorStats"
              }
            }
          }
        }
      }
    },
    "/v1/provenance-stats/time-frame-options" : {
      "get" : {
        "tags" : [ "Operations Manager - Feeds" ],
        "summary" : "Gets the default time frame options.",
        "description" : "",
        "operationId" : "getTimeFrameOptions",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Returns the time frame options.",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/LabelValue"
              }
            }
          }
        }
      }
    },
    "/v1/provenance-stats/{feedName}/processor-duration/{timeframe}" : {
      "get" : {
        "tags" : [ "Operations Manager - Feeds" ],
        "summary" : "Gets the job duration for the specified feed.",
        "description" : "",
        "operationId" : "findStats",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "feedName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "timeframe",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "default" : "THREE_MIN",
          "enum" : [ "ONE_MIN", "THREE_MIN", "FIVE_MIN", "TEN_MIN", "THIRTY_MIN", "HOUR", "THREE_HOUR", "FIVE_HOUR", "TEN_HOUR", "DAY", "THREE_DAYS", "WEEK", "MONTH", "THREE_MONTHS", "SIX_MONTHS", "YEAR" ]
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns the job duration.",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/NifiFeedProcessorStats"
              }
            }
          }
        }
      }
    },
    "/v1/provenance-stats/{feedName}/{timeframe}" : {
      "get" : {
        "tags" : [ "Operations Manager - Feeds" ],
        "summary" : "Gets the statistics for the specified feed.",
        "description" : "",
        "operationId" : "findFeedStats",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "feedName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "timeframe",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "default" : "THREE_MIN",
          "enum" : [ "ONE_MIN", "THREE_MIN", "FIVE_MIN", "TEN_MIN", "THIRTY_MIN", "HOUR", "THREE_HOUR", "FIVE_HOUR", "TEN_HOUR", "DAY", "THREE_DAYS", "WEEK", "MONTH", "THREE_MONTHS", "SIX_MONTHS", "YEAR" ]
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns the feed statistics.",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/NifiFeedProcessorStats"
              }
            }
          }
        }
      }
    },
    "/v1/scheduler/job/{group}/{name}" : {
      "delete" : {
        "tags" : [ "Operations Manager - Scheduler" ],
        "summary" : "Deletes a specific job by its group and name",
        "description" : "",
        "operationId" : "deleteJob",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "group",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "name",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Deletes a job by its group and name",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          }
        }
      }
    },
    "/v1/scheduler/jobs" : {
      "get" : {
        "tags" : [ "Operations Manager - Scheduler" ],
        "summary" : "Gets the list of all jobs",
        "description" : "",
        "operationId" : "getJobs",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Returns the list of jobs.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          }
        }
      }
    },
    "/v1/scheduler/jobs/pause" : {
      "post" : {
        "tags" : [ "Operations Manager - Scheduler" ],
        "summary" : "Pauses all triggers for the specified job.",
        "description" : "",
        "operationId" : "pauseJob",
        "consumes" : [ "application/json", "application/x-www-form-urlencoded" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/ScheduleIdentifier"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The triggers are paused.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          }
        }
      }
    },
    "/v1/scheduler/jobs/resume" : {
      "post" : {
        "tags" : [ "Operations Manager - Scheduler" ],
        "summary" : "Starts all triggers for the specified job.",
        "description" : "",
        "operationId" : "resumeJob",
        "consumes" : [ "application/json", "application/x-www-form-urlencoded" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/ScheduleIdentifier"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The triggers are started.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          }
        }
      }
    },
    "/v1/scheduler/jobs/trigger" : {
      "post" : {
        "tags" : [ "Operations Manager - Scheduler" ],
        "summary" : "Executes the specified job.",
        "description" : "",
        "operationId" : "triggerJob",
        "consumes" : [ "application/json", "application/x-www-form-urlencoded" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/ScheduleIdentifier"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The job is started.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          }
        }
      }
    },
    "/v1/scheduler/metadata" : {
      "get" : {
        "tags" : [ "Operations Manager - Scheduler" ],
        "summary" : "Gets the scheduler status.",
        "description" : "",
        "operationId" : "getMetaData",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Returns the metadata.",
            "schema" : {
              "type" : "object",
              "additionalProperties" : {
                "type" : "object"
              }
            }
          }
        }
      }
    },
    "/v1/scheduler/pause" : {
      "post" : {
        "tags" : [ "Operations Manager - Scheduler" ],
        "summary" : "Pauses the scheduler.",
        "description" : "",
        "operationId" : "standByScheduler",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "The scheduler is paused.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          }
        }
      }
    },
    "/v1/scheduler/resume" : {
      "post" : {
        "tags" : [ "Operations Manager - Scheduler" ],
        "summary" : "Starts the scheduler.",
        "description" : "",
        "operationId" : "startScheduler",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "The scheduler is started.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          }
        }
      }
    },
    "/v1/scheduler/triggers/pause" : {
      "post" : {
        "tags" : [ "Operations Manager - Scheduler" ],
        "summary" : "Pauses the trigger for a job.",
        "description" : "",
        "operationId" : "pauseTrigger",
        "consumes" : [ "application/json", "application/x-www-form-urlencoded" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/ScheduleIdentifier"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The trigger is paused.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          }
        }
      }
    },
    "/v1/scheduler/triggers/resume" : {
      "post" : {
        "tags" : [ "Operations Manager - Scheduler" ],
        "summary" : "Starts the trigger for a job.",
        "description" : "",
        "operationId" : "resumeTrigger",
        "consumes" : [ "application/json", "application/x-www-form-urlencoded" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/ScheduleIdentifier"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The trigger is started.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          }
        }
      }
    },
    "/v1/scheduler/triggers/update" : {
      "post" : {
        "tags" : [ "Operations Manager - Scheduler" ],
        "summary" : "Updates the trigger for a job.",
        "description" : "",
        "operationId" : "rescheduleTrigger",
        "consumes" : [ "application/json", "application/x-www-form-urlencoded" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/TriggerInfo"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The trigger is updated.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          }
        }
      }
    },
    "/v1/schema-discovery/file-parsers" : {
      "get" : {
        "tags" : [ "Feed Manager - Schema Discovery" ],
        "summary" : "Gets the available file parsers.",
        "description" : "",
        "operationId" : "getFileParsers",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Returns the file parsers.",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/SchemaParserDescriptor"
              }
            }
          }
        }
      }
    },
    "/v1/schema-discovery/hive/sample-file" : {
      "post" : {
        "tags" : [ "Feed Manager - Schema Discovery" ],
        "summary" : "Determines the schema of the provided file.",
        "description" : "",
        "operationId" : "uploadFile",
        "consumes" : [ "multipart/form-data" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "parser",
          "in" : "formData",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "file",
          "in" : "formData",
          "required" : false,
          "type" : "file"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns the schema.",
            "schema" : {
              "$ref" : "#/definitions/Schema"
            }
          },
          "500" : {
            "description" : "The schema could not be determined.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          }
        }
      }
    },
    "/v1/security/actions/entity-access-controlled" : {
      "get" : {
        "tags" : [ "Security - Access Control" ],
        "summary" : "Return true/false if entity access is enabled or not",
        "description" : "",
        "operationId" : "isEntityAccessControlled",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Returns true/false.",
            "schema" : {
              "type" : "boolean"
            }
          }
        }
      }
    },
    "/v1/security/actions/{name}/allowed" : {
      "get" : {
        "tags" : [ "Security - Access Control" ],
        "summary" : "Gets the list of allowed actions for a principal.",
        "description" : "",
        "operationId" : "getAllowedActions",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "name",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "user",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "group",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns the actions.",
            "schema" : {
              "$ref" : "#/definitions/ActionGroup"
            }
          },
          "404" : {
            "description" : "The given name was not found.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Security - Access Control" ],
        "summary" : "Modifies the permissions of a principal.",
        "description" : "",
        "operationId" : "postPermissionsChange",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "name",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/PermissionsChange"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns the updated permissions.",
            "schema" : {
              "$ref" : "#/definitions/ActionGroup"
            }
          },
          "500" : {
            "description" : "The permissions could not be changed.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          }
        }
      }
    },
    "/v1/security/actions/{name}/available" : {
      "get" : {
        "tags" : [ "Security - Access Control" ],
        "summary" : "Gets the list of available actions.",
        "description" : "",
        "operationId" : "getAvailableActions",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "name",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns the actions.",
            "schema" : {
              "$ref" : "#/definitions/ActionGroup"
            }
          },
          "404" : {
            "description" : "The given name was not found.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          }
        }
      }
    },
    "/v1/security/actions/{name}/change/allowed" : {
      "get" : {
        "tags" : [ "Security - Access Control" ],
        "summary" : "Gets the permissions that may be changed.",
        "description" : "",
        "operationId" : "getAllowedPermissionsChange",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "name",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "type",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "user",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "group",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns the permissions.",
            "schema" : {
              "$ref" : "#/definitions/PermissionsChange"
            }
          },
          "400" : {
            "description" : "The type is not valid.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          },
          "404" : {
            "description" : "The given name was not found.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          }
        }
      }
    },
    "/v1/security/groups" : {
      "get" : {
        "tags" : [ "Security - Groups" ],
        "summary" : "Returns a list of all groups.",
        "description" : "",
        "operationId" : "getGroups",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "The list of groups.",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/UserGroup"
              }
            }
          },
          "500" : {
            "description" : "There was a problem accessing the groups.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Security - Groups" ],
        "summary" : "Adds or updates a Medikly group.",
        "description" : "",
        "operationId" : "addGroup",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/UserGroup"
          }
        } ],
        "responses" : {
          "500" : {
            "description" : "There was a problem adding or updating the group.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          },
          "204" : {
            "description" : "The group was added or updated."
          }
        }
      }
    },
    "/v1/security/groups/{groupId}" : {
      "get" : {
        "tags" : [ "Security - Groups" ],
        "summary" : "Returns the specified group.",
        "description" : "",
        "operationId" : "getGroup",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "groupId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "The requested group.",
            "schema" : {
              "$ref" : "#/definitions/UserGroup"
            }
          },
          "500" : {
            "description" : "There was a problem accessing the group.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          },
          "404" : {
            "description" : "The group was not found.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Security - Groups" ],
        "summary" : "Deletes the specified group.",
        "description" : "",
        "operationId" : "deleteGroup",
        "parameters" : [ {
          "name" : "groupId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "500" : {
            "description" : "There was a problem deleting the group.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          },
          "204" : {
            "description" : "The group was deleted."
          },
          "404" : {
            "description" : "The group was not found.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          }
        }
      }
    },
    "/v1/security/groups/{groupId}/users" : {
      "get" : {
        "tags" : [ "Security - Groups" ],
        "summary" : "Returns a list of all users in the specified group.",
        "description" : "",
        "operationId" : "getUsers",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "groupId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "The list of users.",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/User"
              }
            }
          },
          "500" : {
            "description" : "There was a problem accessing the group.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          },
          "404" : {
            "description" : "The group was not found.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          }
        }
      }
    },
    "/v1/security/roles" : {
      "get" : {
        "tags" : [ "Security - Roles" ],
        "summary" : "Returns all the roles defined for each kind of entity.",
        "description" : "",
        "operationId" : "getRoles",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "The list of entity/roles mappings.",
            "schema" : {
              "$ref" : "#/definitions/UserGroup"
            }
          },
          "500" : {
            "description" : "There was a problem accessing the roles.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          }
        }
      }
    },
    "/v1/security/roles/{entity}" : {
      "get" : {
        "tags" : [ "Security - Roles" ],
        "summary" : "Returns all the roles defined for the a particular kind of entity.",
        "description" : "",
        "operationId" : "getEntityRoles",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "entity",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "The list of roles defined for the entity.",
            "schema" : {
              "$ref" : "#/definitions/UserGroup"
            }
          },
          "500" : {
            "description" : "There was a problem accessing the roles.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          }
        }
      }
    },
    "/v1/security/users" : {
      "get" : {
        "tags" : [ "Security - Users" ],
        "summary" : "Returns a list of all users.",
        "description" : "",
        "operationId" : "getUsers",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "The list of users.",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/User"
              }
            }
          },
          "500" : {
            "description" : "There was a problem accessing the users.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Security - Users" ],
        "summary" : "Adds or updates a Medikly user.",
        "description" : "",
        "operationId" : "addUser",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/User"
          }
        } ],
        "responses" : {
          "500" : {
            "description" : "There was a problem adding or updating the user.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          },
          "204" : {
            "description" : "The user was added or updated."
          }
        }
      }
    },
    "/v1/security/users/{userId}" : {
      "get" : {
        "tags" : [ "Security - Users" ],
        "summary" : "Returns the specified user.",
        "description" : "",
        "operationId" : "getUser",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "userId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "The requested user.",
            "schema" : {
              "$ref" : "#/definitions/User"
            }
          },
          "500" : {
            "description" : "There was a problem accessing the user.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          },
          "404" : {
            "description" : "The user was not found.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Security - Users" ],
        "summary" : "Deletes the specified user.",
        "description" : "",
        "operationId" : "deleteUser",
        "parameters" : [ {
          "name" : "userId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "500" : {
            "description" : "There was a problem deleting the user.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          },
          "204" : {
            "description" : "The user was deleted."
          },
          "404" : {
            "description" : "The user was not found.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          }
        }
      }
    },
    "/v1/service-monitor" : {
      "get" : {
        "tags" : [ "Operations Manager - Services" ],
        "summary" : "Gets the list of all services and their health",
        "description" : "",
        "operationId" : "listServices",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Returns the services.",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/ServiceStatusResponse"
              }
            }
          }
        }
      }
    },
    "/v1/sla/assessments" : {
      "get" : {
        "tags" : [ "Operations Manager - Service Level Assessments" ],
        "summary" : "Lists all sla assessments.",
        "description" : "",
        "operationId" : "getAssessments",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "sort",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "limit",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "default" : 10,
          "format" : "int32"
        }, {
          "name" : "start",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "default" : 1,
          "format" : "int32"
        }, {
          "name" : "filter",
          "in" : "query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns the sla assessments.",
            "schema" : {
              "$ref" : "#/definitions/SearchResult"
            }
          },
          "400" : {
            "description" : "The sort cannot be empty.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          },
          "500" : {
            "description" : "The sort contains an invalid value.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          },
          "404" : {
            "description" : "The start or limit is not a valid integer.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          }
        }
      }
    },
    "/v1/sla/assessments/{assessmentId}" : {
      "get" : {
        "tags" : [ "Operations Manager - Service Level Assessments" ],
        "summary" : "get an SLA Assessment by the assessmentId",
        "description" : "",
        "operationId" : "getAssessment",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "assessmentId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ServiceLevelAssessment"
            }
          }
        }
      }
    },
    "/v1/spark/shell/data-sources" : {
      "get" : {
        "tags" : [ "Feed Manager - Data Wrangler" ],
        "summary" : "Finds Spark data sources",
        "description" : "",
        "operationId" : "getDataSources",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/v1/spark/shell/query" : {
      "post" : {
        "tags" : [ "Feed Manager - Data Wrangler" ],
        "summary" : "Queries a data source table.",
        "description" : "",
        "operationId" : "query",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "The request indicates the query to execute. Exactly one source must be specified.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/TransformRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns the status of the query.",
            "schema" : {
              "$ref" : "#/definitions/TransformResponse"
            }
          },
          "400" : {
            "description" : "The requested data source does not exist.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          },
          "500" : {
            "description" : "There was a problem processing the data.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          }
        }
      }
    },
    "/v1/spark/shell/query/{query}/save" : {
      "post" : {
        "tags" : [ "Feed Manager - Data Wrangler" ],
        "summary" : "Saves the results of a transformation.",
        "description" : "",
        "operationId" : "saveQuery",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "query",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "The request indicates the destination for saving the transformation. The format is required.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/SaveRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns the status of the save.",
            "schema" : {
              "$ref" : "#/definitions/SaveResponse"
            }
          },
          "404" : {
            "description" : "The transformation does not exist.",
            "schema" : {
              "$ref" : "#/definitions/SaveResponse"
            }
          }
        }
      }
    },
    "/v1/spark/shell/query/{query}/save/{save}" : {
      "get" : {
        "tags" : [ "Feed Manager - Data Wrangler" ],
        "summary" : "Fetches the status of a save",
        "description" : "",
        "operationId" : "getQuerySave",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "query",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "save",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns the status of the save.",
            "schema" : {
              "$ref" : "#/definitions/SaveResponse"
            }
          },
          "500" : {
            "description" : "There was a problem accessing the data.",
            "schema" : {
              "$ref" : "#/definitions/SaveResponse"
            }
          },
          "404" : {
            "description" : "The transformation or save does not exist.",
            "schema" : {
              "$ref" : "#/definitions/SaveResponse"
            }
          }
        }
      }
    },
    "/v1/spark/shell/query/{query}/save/{save}/zip" : {
      "get" : {
        "tags" : [ "Feed Manager - Data Wrangler" ],
        "summary" : "Downloads the saved results in a ZIP file",
        "description" : "",
        "operationId" : "downloadQuery",
        "produces" : [ "application/octet-stream" ],
        "parameters" : [ {
          "name" : "query",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "save",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns the saved file."
          },
          "500" : {
            "description" : "There was a problem accessing the data."
          },
          "404" : {
            "description" : "The save does not exist."
          }
        }
      }
    },
    "/v1/spark/shell/query/{table}" : {
      "get" : {
        "tags" : [ "Feed Manager - Data Wrangler" ],
        "summary" : "Fetches the status of a query.",
        "description" : "",
        "operationId" : "getQueryResult",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "table",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns the status of the query.",
            "schema" : {
              "$ref" : "#/definitions/TransformResponse"
            }
          },
          "500" : {
            "description" : "There was a problem accessing the data.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          },
          "404" : {
            "description" : "The query does not exist.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          }
        }
      }
    },
    "/v1/spark/shell/register" : {
      "post" : {
        "tags" : [ "Feed Manager - Data Wrangler" ],
        "summary" : "Registers a new Spark Shell process with Medikly.",
        "description" : "",
        "operationId" : "register",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/RegistrationRequest"
          }
        } ],
        "responses" : {
          "401" : {
            "description" : "The provided credentials are invalid.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          },
          "500" : {
            "description" : "The Spark Shell process could not be registered with this server.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          },
          "204" : {
            "description" : "The Spark Shell process has been successfully registered with this server."
          },
          "403" : {
            "description" : "The Spark Shell process does not have permission to register with this server.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          }
        }
      }
    },
    "/v1/spark/shell/start" : {
      "post" : {
        "tags" : [ "Feed Manager - Data Wrangler" ],
        "summary" : "Starts a new Spark Shell process for the current user if one is not already running.",
        "description" : "",
        "operationId" : "start",
        "parameters" : [ ],
        "responses" : {
          "202" : {
            "description" : "The Spark Shell process will be started."
          },
          "500" : {
            "description" : "The Spark Shell process could not be started.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          }
        }
      }
    },
    "/v1/spark/shell/transform" : {
      "post" : {
        "tags" : [ "Feed Manager - Data Wrangler" ],
        "summary" : "Queries a Hive table and applies a series of transformations on the rows.",
        "description" : "",
        "operationId" : "transform",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "The request indicates the transformations to apply to the source table and how the user wishes the results to be displayed. Exactly one parent or source must be specified.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/TransformRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns the status of the transformation.",
            "schema" : {
              "$ref" : "#/definitions/TransformResponse"
            }
          },
          "400" : {
            "description" : "The requested data source does not exist.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          },
          "500" : {
            "description" : "There was a problem processing the data.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          }
        }
      }
    },
    "/v1/spark/shell/transform/{table}" : {
      "get" : {
        "tags" : [ "Feed Manager - Data Wrangler" ],
        "summary" : "Fetches the status of a transformation.",
        "description" : "",
        "operationId" : "getTransformResult",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "table",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns the status of the transformation.",
            "schema" : {
              "$ref" : "#/definitions/TransformResponse"
            }
          },
          "500" : {
            "description" : "There was a problem accessing the data.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          },
          "404" : {
            "description" : "The transformation does not exist.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          }
        }
      }
    },
    "/v1/spark/shell/transform/{transform}/save" : {
      "post" : {
        "tags" : [ "Feed Manager - Data Wrangler" ],
        "summary" : "Saves the results of a transformation.",
        "description" : "",
        "operationId" : "saveTransform",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "transform",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "The request indicates the destination for saving the transformation. The format is required.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/SaveRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns the status of the save.",
            "schema" : {
              "$ref" : "#/definitions/SaveResponse"
            }
          },
          "404" : {
            "description" : "The transformation does not exist.",
            "schema" : {
              "$ref" : "#/definitions/SaveResponse"
            }
          }
        }
      }
    },
    "/v1/spark/shell/transform/{transform}/save/{save}" : {
      "get" : {
        "tags" : [ "Feed Manager - Data Wrangler" ],
        "summary" : "Fetches the status of a save",
        "description" : "",
        "operationId" : "getTransformSave",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "transform",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "save",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns the status of the save.",
            "schema" : {
              "$ref" : "#/definitions/SaveResponse"
            }
          },
          "500" : {
            "description" : "There was a problem accessing the data.",
            "schema" : {
              "$ref" : "#/definitions/SaveResponse"
            }
          },
          "404" : {
            "description" : "The transformation or save does not exist.",
            "schema" : {
              "$ref" : "#/definitions/SaveResponse"
            }
          }
        }
      }
    },
    "/v1/spark/shell/transform/{transform}/save/{save}/zip" : {
      "get" : {
        "tags" : [ "Feed Manager - Data Wrangler" ],
        "summary" : "Downloads the saved results in a ZIP file",
        "description" : "",
        "operationId" : "downloadTransform",
        "produces" : [ "application/octet-stream" ],
        "parameters" : [ {
          "name" : "transform",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "save",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns the saved file."
          },
          "500" : {
            "description" : "There was a problem accessing the data."
          },
          "404" : {
            "description" : "The save does not exist."
          }
        }
      }
    },
    "/v2/feedmgr/admin/cache-summary" : {
      "get" : {
        "tags" : [ "Feed Manager - Administration" ],
        "summary" : "Gets the size of the Feed and FeedACL cache",
        "description" : "",
        "operationId" : "getCacheSizes",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/v2/feedmgr/admin/import-feed" : {
      "post" : {
        "tags" : [ "Feed Manager - Administration" ],
        "summary" : "Imports a feed zip file.",
        "description" : "",
        "operationId" : "uploadFeed",
        "consumes" : [ "multipart/form-data" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "file",
          "in" : "formData",
          "required" : true,
          "type" : "file"
        }, {
          "name" : "uploadKey",
          "in" : "formData",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "categorySystemName",
          "in" : "formData",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "disableFeedUponImport",
          "in" : "formData",
          "required" : false,
          "type" : "boolean",
          "default" : false
        }, {
          "name" : "importComponents",
          "in" : "formData",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns the feed metadata.",
            "schema" : {
              "$ref" : "#/definitions/ImportFeed"
            }
          },
          "500" : {
            "description" : "There was a problem importing the feed.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          }
        }
      }
    },
    "/v2/feedmgr/admin/import-template" : {
      "post" : {
        "tags" : [ "Feed Manager - Administration" ],
        "summary" : "Imports a template xml or zip file.",
        "description" : "",
        "operationId" : "uploadTemplate",
        "consumes" : [ "multipart/form-data" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "file",
          "in" : "formData",
          "required" : true,
          "type" : "file"
        }, {
          "name" : "uploadKey",
          "in" : "formData",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "importComponents",
          "in" : "formData",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns the template metadata.",
            "schema" : {
              "$ref" : "#/definitions/ImportTemplate"
            }
          },
          "500" : {
            "description" : "There was a problem importing the template.",
            "schema" : {
              "$ref" : "#/definitions/RestResponseStatus"
            }
          }
        }
      }
    },
    "/v2/feedmgr/admin/reset-cache" : {
      "post" : {
        "tags" : [ "Feed Manager - Administration" ],
        "summary" : "Resets the Feed and FeedACL cache.",
        "description" : "",
        "operationId" : "refreshCache",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/v2/feedmgr/admin/upload-status/{key}" : {
      "get" : {
        "tags" : [ "Feed Manager - Administration" ],
        "summary" : "Gets thet status of a given upload/import.",
        "description" : "",
        "operationId" : "uploadStatus",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "key",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns the upload status"
          }
        }
      }
    },
    "/v2/provenance-stats/all" : {
      "get" : {
        "tags" : [ "Operations Manager - Feeds" ],
        "summary" : "Gets the provenance statistics for all feeds.",
        "description" : "",
        "operationId" : "findStats",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Returns the provenance stats.",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/NifiFeedProcessorStats"
              }
            }
          }
        }
      }
    },
    "/v2/provenance-stats/time-frame-options" : {
      "get" : {
        "tags" : [ "Operations Manager - Feeds" ],
        "summary" : "Gets the default time frame options.",
        "description" : "",
        "operationId" : "getTimeFrameOptions",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Returns the time frame options.",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/LabelValue"
              }
            }
          }
        }
      }
    },
    "/v2/provenance-stats/{feedName}" : {
      "get" : {
        "tags" : [ "Operations Manager - Feeds" ],
        "summary" : "Gets the statistics for the specified feed.",
        "description" : "",
        "operationId" : "findFeedStats",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "feedName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "from",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "to",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns the feed statistics.",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/NifiFeedProcessorStats"
              }
            }
          }
        }
      }
    },
    "/v2/provenance-stats/{feedName}/processor-duration" : {
      "get" : {
        "tags" : [ "Operations Manager - Feeds" ],
        "summary" : "Returns the list of stats for each processor within the given timeframe relative to now",
        "description" : "",
        "operationId" : "findStats",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "feedName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "from",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "to",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns the list of stats for each processor within the given timeframe relative to now",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/NifiFeedProcessorStats"
              }
            }
          }
        }
      }
    },
    "/v2/provenance-stats/{feedName}/processor-errors" : {
      "get" : {
        "tags" : [ "Operations Manager - Feeds" ],
        "summary" : "Returns the list of stats for each processor within the given timeframe relative to now",
        "description" : "",
        "operationId" : "findFeedProcessorErrors",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "feedName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "from",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "to",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "after",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns the list of stats for each processor within the given timeframe relative to now",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/NifiFeedProcessorStats"
              }
            }
          }
        }
      }
    }
  },
  "definitions" : {
    "BatchSettingsDTO" : {
      "type" : "object",
      "properties" : {
        "count" : {
          "type" : "integer",
          "format" : "int32"
        },
        "size" : {
          "type" : "string"
        },
        "duration" : {
          "type" : "string"
        }
      }
    },
    "Serializable" : {
      "type" : "object"
    },
    "FeedProcessingOptions" : {
      "type" : "object",
      "properties" : {
        "skipHeader" : {
          "type" : "boolean",
          "default" : false
        }
      }
    },
    "Obligation" : {
      "type" : "object",
      "properties" : {
        "description" : {
          "type" : "string"
        },
        "metrics" : {
          "$ref" : "#/definitions/#"
        }
      }
    },
    "ServiceStatusResponse" : {
      "type" : "object",
      "properties" : {
        "components" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ServiceComponent"
          }
        },
        "serviceName" : {
          "type" : "string"
        },
        "alerts" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ServiceAlert"
          }
        },
        "checkDate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "healthyComponents" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ServiceComponent"
          }
        },
        "unhealthyComponents" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ServiceComponent"
          }
        },
        "alertsWithoutComponent" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ServiceAlert"
          }
        },
        "latestAlertTimestamp" : {
          "type" : "string",
          "format" : "date-time"
        },
        "earliestAlertTimestamp" : {
          "type" : "string",
          "format" : "date-time"
        },
        "state" : {
          "type" : "string",
          "enum" : [ "UP", "DOWN", "WARNING" ]
        }
      }
    },
    "TemplateDTO" : {
      "type" : "object",
      "properties" : {
        "uri" : {
          "type" : "string"
        },
        "id" : {
          "type" : "string"
        },
        "groupId" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "timestamp" : {
          "type" : "string",
          "format" : "date-time"
        },
        "encodingVersion" : {
          "type" : "string",
          "xml" : {
            "name" : "encoding-version",
            "attribute" : true
          }
        },
        "snippet" : {
          "$ref" : "#/definitions/FlowSnippetDTO"
        }
      },
      "xml" : {
        "name" : "template"
      }
    },
    "MetricAssessment" : {
      "type" : "object",
      "properties" : {
        "metric" : {
          "$ref" : "#/definitions/Metric"
        },
        "result" : {
          "type" : "string",
          "enum" : [ "SUCCESS", "WARNING", "FAILURE" ]
        },
        "message" : {
          "type" : "string"
        }
      }
    },
    "MediaType" : {
      "type" : "object",
      "properties" : {
        "type" : {
          "type" : "string"
        },
        "subtype" : {
          "type" : "string"
        },
        "parameters" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "wildcardType" : {
          "type" : "boolean",
          "default" : false
        },
        "wildcardSubtype" : {
          "type" : "boolean",
          "default" : false
        }
      }
    },
    "ValidationError" : {
      "type" : "object",
      "properties" : {
        "fieldValue" : {
          "type" : "string"
        },
        "errorMessage" : {
          "type" : "string"
        }
      }
    },
    "FeedJobExecutionData" : {
      "type" : "object",
      "properties" : {
        "jobExecutionId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "startTime" : {
          "type" : "string",
          "format" : "date-time"
        },
        "endTime" : {
          "type" : "string",
          "format" : "date-time"
        },
        "executionContext" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "object"
          }
        }
      }
    },
    "TransformValidationResult" : {
      "type" : "object",
      "properties" : {
        "scope" : {
          "type" : "string"
        },
        "field" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        },
        "rule" : {
          "type" : "string"
        },
        "reason" : {
          "type" : "string"
        }
      }
    },
    "JcrQueryResultColumn" : {
      "type" : "object",
      "properties" : {
        "name" : {
          "type" : "string"
        }
      }
    },
    "ControllerServiceApiDTO" : {
      "type" : "object",
      "properties" : {
        "type" : {
          "type" : "string"
        },
        "bundle" : {
          "$ref" : "#/definitions/BundleDTO"
        }
      }
    },
    "ProcessorConfigDTO" : {
      "type" : "object",
      "properties" : {
        "properties" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "descriptors" : {
          "type" : "object",
          "additionalProperties" : {
            "$ref" : "#/definitions/PropertyDescriptorDTO"
          }
        },
        "schedulingPeriod" : {
          "type" : "string"
        },
        "schedulingStrategy" : {
          "type" : "string"
        },
        "executionNode" : {
          "type" : "string"
        },
        "penaltyDuration" : {
          "type" : "string"
        },
        "yieldDuration" : {
          "type" : "string"
        },
        "bulletinLevel" : {
          "type" : "string"
        },
        "runDurationMillis" : {
          "type" : "integer",
          "format" : "int64"
        },
        "concurrentlySchedulableTaskCount" : {
          "type" : "integer",
          "format" : "int32"
        },
        "autoTerminatedRelationships" : {
          "type" : "array",
          "uniqueItems" : true,
          "items" : {
            "type" : "string"
          }
        },
        "comments" : {
          "type" : "string"
        },
        "customUiUrl" : {
          "type" : "string"
        },
        "lossTolerant" : {
          "type" : "boolean",
          "default" : false
        },
        "annotationData" : {
          "type" : "string"
        },
        "defaultConcurrentTasks" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "defaultSchedulingPeriod" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        }
      }
    },
    "UserProperty" : {
      "type" : "object",
      "properties" : {
        "description" : {
          "type" : "string"
        },
        "displayName" : {
          "type" : "string"
        },
        "order" : {
          "type" : "integer",
          "format" : "int32"
        },
        "required" : {
          "type" : "boolean",
          "default" : false
        },
        "systemName" : {
          "type" : "string"
        },
        "locked" : {
          "type" : "boolean",
          "default" : false
        },
        "value" : {
          "type" : "string"
        }
      }
    },
    "AuditLogEntry" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string"
        },
        "createdTime" : {
          "type" : "string",
          "format" : "date-time"
        },
        "user" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "entityId" : {
          "type" : "string"
        }
      }
    },
    "NifiFlowCacheSnapshot" : {
      "type" : "object",
      "properties" : {
        "snapshotDate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "processorIdToFeedNameMap" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "processorIdToFeedProcessGroupId" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "processorIdToProcessorName" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "connectionIdToConnectionName" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "connectionIdToConnection" : {
          "type" : "object",
          "additionalProperties" : {
            "$ref" : "#/definitions/NiFiFlowCacheConnectionData"
          }
        },
        "allStreamingFeeds" : {
          "type" : "array",
          "uniqueItems" : true,
          "items" : {
            "type" : "string"
          }
        },
        "reusableTemplateProcessorIds" : {
          "type" : "array",
          "uniqueItems" : true,
          "items" : {
            "type" : "string"
          }
        },
        "feedToInputProcessorIds" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        },
        "allFeeds" : {
          "type" : "array",
          "uniqueItems" : true,
          "items" : {
            "type" : "string"
          }
        }
      }
    },
    "NifiProperty" : {
      "type" : "object",
      "properties" : {
        "processGroupName" : {
          "type" : "string"
        },
        "processorName" : {
          "type" : "string"
        },
        "processorId" : {
          "type" : "string"
        },
        "processGroupId" : {
          "type" : "string"
        },
        "processorType" : {
          "type" : "string"
        },
        "key" : {
          "type" : "string"
        },
        "value" : {
          "type" : "string"
        },
        "expressionProperties" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "propertyDescriptor" : {
          "$ref" : "#/definitions/NiFiPropertyDescriptor"
        },
        "templateValue" : {
          "type" : "string"
        },
        "userEditable" : {
          "type" : "boolean",
          "default" : false
        },
        "renderType" : {
          "type" : "string"
        },
        "renderOptions" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "selected" : {
          "type" : "boolean",
          "default" : false
        },
        "inputProperty" : {
          "type" : "boolean",
          "default" : false
        },
        "containsConfigurationVariables" : {
          "type" : "boolean",
          "default" : false
        },
        "sensitive" : {
          "type" : "boolean",
          "default" : false
        },
        "required" : {
          "type" : "boolean",
          "default" : false
        },
        "templateProperty" : {
          "$ref" : "#/definitions/NifiProperty"
        },
        "idKey" : {
          "type" : "string"
        },
        "processorNameTypeKey" : {
          "type" : "string"
        },
        "nameKey" : {
          "type" : "string"
        }
      }
    },
    "NifiFlowConnection" : {
      "type" : "object",
      "properties" : {
        "connectionIdentifier" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "sourceIdentifier" : {
          "type" : "string"
        },
        "destinationIdentifier" : {
          "type" : "string"
        }
      }
    },
    "NiFiTemplateFlowResponse" : {
      "type" : "object",
      "properties" : {
        "processors" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/FlowProcessor"
          }
        },
        "processorFlowTypes" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/MediklyProcessorFlowTypeOption"
          }
        },
        "userDefinedFailureProcessors" : {
          "type" : "boolean",
          "default" : false
        },
        "request" : {
          "$ref" : "#/definitions/NiFiTemplateFlowRequest"
        },
        "templateProcessorDatasourceDefinitions" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/TemplateProcessorDatasourceDefinition"
          }
        }
      }
    },
    "ParameterizedHeader" : {
      "type" : "object",
      "properties" : {
        "value" : {
          "type" : "string"
        },
        "parameters" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        }
      }
    },
    "Processor" : {
      "type" : "object",
      "properties" : {
        "properties" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/NifiProperty"
          }
        },
        "type" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "id" : {
          "type" : "string"
        },
        "groupName" : {
          "type" : "string"
        },
        "groupId" : {
          "type" : "string"
        },
        "inputProcessor" : {
          "type" : "boolean",
          "default" : false
        },
        "userDefinedInputProcessor" : {
          "type" : "boolean",
          "default" : false
        }
      }
    },
    "PermissionsDTO" : {
      "type" : "object",
      "properties" : {
        "canRead" : {
          "type" : "boolean",
          "default" : false
        },
        "canWrite" : {
          "type" : "boolean",
          "default" : false
        }
      }
    },
    "Providers" : {
      "type" : "object"
    },
    "BulletinEntity" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "groupId" : {
          "type" : "string"
        },
        "sourceId" : {
          "type" : "string"
        },
        "timestamp" : {
          "type" : "string",
          "format" : "date-time"
        },
        "nodeAddress" : {
          "type" : "string"
        },
        "canRead" : {
          "type" : "boolean",
          "default" : false
        },
        "bulletin" : {
          "$ref" : "#/definitions/BulletinDTO"
        }
      },
      "xml" : {
        "name" : "bulletinEntity"
      }
    },
    "NifiFlowProcessGroup" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "parentGroupId" : {
          "type" : "string"
        },
        "parentGroupName" : {
          "type" : "string"
        },
        "feedName" : {
          "type" : "string"
        },
        "processorMap" : {
          "type" : "object",
          "additionalProperties" : {
            "$ref" : "#/definitions/NifiFlowProcessor"
          }
        },
        "endingProcessors" : {
          "type" : "object",
          "additionalProperties" : {
            "$ref" : "#/definitions/NifiFlowProcessor"
          }
        },
        "connectionIdMap" : {
          "type" : "object",
          "additionalProperties" : {
            "$ref" : "#/definitions/NifiFlowConnection"
          }
        },
        "startingProcessors" : {
          "type" : "array",
          "uniqueItems" : true,
          "items" : {
            "$ref" : "#/definitions/NifiFlowProcessor"
          }
        },
        "sortedStartingProcessors" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/NifiFlowProcessor"
          }
        }
      }
    },
    "ServiceAlert" : {
      "type" : "object",
      "properties" : {
        "firstTimestamp" : {
          "type" : "string",
          "format" : "date-time"
        },
        "latestTimestamp" : {
          "type" : "string",
          "format" : "date-time"
        },
        "serviceName" : {
          "type" : "string"
        },
        "state" : {
          "type" : "string",
          "enum" : [ "OK", "UNKNOWN", "WARNING", "CRITICAL" ]
        },
        "label" : {
          "type" : "string"
        },
        "message" : {
          "type" : "string"
        },
        "componentName" : {
          "type" : "string"
        }
      }
    },
    "HistoryReindexingStatus" : {
      "type" : "object",
      "properties" : {
        "historyReindexingState" : {
          "type" : "string",
          "enum" : [ "NEVER_RUN", "DIRTY", "IN_PROGRESS", "COMPLETED_WITH_SUCCESS", "COMPLETED_WITH_FAILURE" ]
        },
        "lastModifiedTimestamp" : {
          "type" : "string",
          "format" : "date-time"
        }
      }
    },
    "ExecutedFeed" : {
      "type" : "object",
      "properties" : {
        "timeSinceEndTime" : {
          "type" : "integer",
          "format" : "int64"
        },
        "exitStatus" : {
          "type" : "string"
        },
        "runTime" : {
          "type" : "integer",
          "format" : "int64"
        },
        "feedInstanceId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "feedExecutionId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "endTime" : {
          "type" : "string",
          "format" : "date-time"
        },
        "status" : {
          "type" : "string",
          "enum" : [ "STARTING", "STARTED", "STOPPING", "STOPPED", "FAILED", "COMPLETED", "ABANDONED", "UNKNOWN" ]
        },
        "startTime" : {
          "type" : "string",
          "format" : "date-time"
        },
        "exitCode" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        }
      }
    },
    "FormDataMultiPart" : {
      "type" : "object",
      "properties" : {
        "contentDisposition" : {
          "$ref" : "#/definitions/ContentDisposition"
        },
        "entity" : {
          "type" : "object"
        },
        "headers" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        },
        "mediaType" : {
          "$ref" : "#/definitions/MediaType"
        },
        "messageBodyWorkers" : {
          "$ref" : "#/definitions/MessageBodyWorkers"
        },
        "parent" : {
          "$ref" : "#/definitions/MultiPart"
        },
        "providers" : {
          "$ref" : "#/definitions/Providers"
        },
        "bodyParts" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/BodyPart"
          }
        },
        "fields" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/FormDataBodyPart"
            }
          }
        },
        "parameterizedHeaders" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/ParameterizedHeader"
            }
          }
        }
      }
    },
    "AlertCreateRequest" : {
      "type" : "object",
      "properties" : {
        "type" : {
          "type" : "string",
          "format" : "uri"
        },
        "subtype" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "level" : {
          "type" : "string",
          "enum" : [ "INFO", "WARNING", "MINOR", "MAJOR", "CRITICAL", "FATAL" ]
        }
      }
    },
    "FeedStatus" : {
      "type" : "object",
      "properties" : {
        "failedFeeds" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/FeedHealth"
          }
        },
        "healthyFeeds" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/FeedHealth"
          }
        },
        "healthyCount" : {
          "type" : "integer",
          "format" : "int32"
        },
        "feedSummary" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/FeedSummary"
          }
        },
        "percent" : {
          "type" : "number",
          "format" : "float"
        },
        "feeds" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/FeedHealth"
          }
        },
        "failedCount" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "PropertyDescriptorDTO" : {
      "type" : "object",
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "displayName" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "defaultValue" : {
          "type" : "string"
        },
        "allowableValues" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/AllowableValueEntity"
          }
        },
        "required" : {
          "type" : "boolean",
          "default" : false
        },
        "sensitive" : {
          "type" : "boolean",
          "default" : false
        },
        "dynamic" : {
          "type" : "boolean",
          "default" : false
        },
        "supportsEl" : {
          "type" : "boolean",
          "default" : false
        },
        "identifiesControllerService" : {
          "type" : "string"
        },
        "identifiesControllerServiceBundle" : {
          "$ref" : "#/definitions/BundleDTO"
        }
      }
    },
    "ServiceLevelAgreementCheck" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string"
        },
        "actionConfigurations" : {
          "$ref" : "#/definitions/#"
        },
        "cronSchedule" : {
          "type" : "string"
        }
      }
    },
    "SearchResult" : {
      "type" : "object",
      "properties" : {
        "query" : {
          "type" : "string"
        },
        "totalHits" : {
          "type" : "integer",
          "format" : "int64"
        },
        "tookInMillis" : {
          "type" : "integer",
          "format" : "int64"
        },
        "from" : {
          "type" : "integer",
          "format" : "int64"
        },
        "to" : {
          "type" : "integer",
          "format" : "int64"
        },
        "engine" : {
          "type" : "string"
        },
        "searchResultsSummary" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "integer",
            "format" : "int64"
          }
        },
        "searchResults" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/SearchResultData"
          }
        }
      }
    },
    "AnnotatedFieldProperty" : {
      "type" : "object",
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "dataType" : {
          "type" : "string"
        },
        "annotation" : {
          "$ref" : "#/definitions/Annotation"
        }
      }
    },
    "FeedDataHistoryReindexParams" : {
      "type" : "object",
      "properties" : {
        "feedId" : {
          "type" : "string"
        },
        "feedSystemName" : {
          "type" : "string"
        },
        "categorySystemName" : {
          "type" : "string"
        },
        "commaSeparatedColumnsForIndexing" : {
          "type" : "string"
        },
        "historyReindexingStatus" : {
          "$ref" : "#/definitions/HistoryReindexingStatus"
        }
      }
    },
    "ImportFeed" : {
      "type" : "object",
      "properties" : {
        "valid" : {
          "type" : "boolean",
          "default" : false
        },
        "success" : {
          "type" : "boolean",
          "default" : false
        },
        "fileName" : {
          "type" : "string"
        },
        "feedName" : {
          "type" : "string"
        },
        "template" : {
          "$ref" : "#/definitions/ImportTemplate"
        },
        "nifiFeed" : {
          "$ref" : "#/definitions/NifiFeed"
        },
        "feedJson" : {
          "type" : "string"
        },
        "importOptions" : {
          "$ref" : "#/definitions/ImportFeedOptions"
        }
      }
    },
    "NiFiPropertyDescriptor" : {
      "type" : "object",
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "displayName" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "defaultValue" : {
          "type" : "string"
        },
        "allowableValues" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/NiFiAllowableValue"
          }
        },
        "required" : {
          "type" : "boolean",
          "default" : false
        },
        "sensitive" : {
          "type" : "boolean",
          "default" : false
        },
        "dynamic" : {
          "type" : "boolean",
          "default" : false
        },
        "supportsEl" : {
          "type" : "boolean",
          "default" : false
        },
        "identifiesControllerService" : {
          "type" : "string"
        }
      }
    },
    "RoleMembershipChange" : {
      "type" : "object",
      "properties" : {
        "change" : {
          "type" : "string",
          "enum" : [ "ADD", "REMOVE", "REPLACE" ]
        },
        "roleName" : {
          "type" : "string"
        },
        "users" : {
          "type" : "array",
          "uniqueItems" : true,
          "items" : {
            "type" : "string"
          }
        },
        "groups" : {
          "type" : "array",
          "uniqueItems" : true,
          "items" : {
            "type" : "string"
          }
        }
      }
    },
    "DataTypeDescriptor" : {
      "type" : "object",
      "properties" : {
        "date" : {
          "type" : "boolean",
          "default" : false
        },
        "complex" : {
          "type" : "boolean",
          "default" : false
        },
        "numeric" : {
          "type" : "boolean",
          "default" : false
        }
      }
    },
    "FeedMetadata" : {
      "type" : "object",
      "properties" : {
        "owner" : {
          "$ref" : "#/definitions/User"
        },
        "allowedActions" : {
          "$ref" : "#/definitions/ActionGroup"
        },
        "roleMemberships" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/RoleMembership"
          }
        },
        "feedRoleMemberships" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/RoleMembership"
          }
        },
        "id" : {
          "type" : "string"
        },
        "feedId" : {
          "type" : "string"
        },
        "templateId" : {
          "type" : "string"
        },
        "inputProcessorType" : {
          "type" : "string"
        },
        "inputProcessorName" : {
          "type" : "string"
        },
        "templateName" : {
          "type" : "string"
        },
        "properties" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/NifiProperty"
          }
        },
        "schedule" : {
          "$ref" : "#/definitions/FeedSchedule"
        },
        "feedName" : {
          "type" : "string"
        },
        "systemFeedName" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "tags" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Tag"
          }
        },
        "dataOwner" : {
          "type" : "string"
        },
        "category" : {
          "$ref" : "#/definitions/FeedCategory"
        },
        "table" : {
          "$ref" : "#/definitions/TableSetup"
        },
        "createDate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "updateDate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "dataTransformation" : {
          "$ref" : "#/definitions/FeedDataTransformation"
        },
        "active" : {
          "type" : "boolean",
          "default" : false
        },
        "state" : {
          "type" : "string"
        },
        "nifiProcessGroupId" : {
          "type" : "string"
        },
        "options" : {
          "$ref" : "#/definitions/FeedProcessingOptions"
        },
        "version" : {
          "type" : "integer",
          "format" : "int64"
        },
        "versionName" : {
          "type" : "string"
        },
        "registeredTemplate" : {
          "$ref" : "#/definitions/RegisteredTemplate"
        },
        "userProperties" : {
          "type" : "array",
          "uniqueItems" : true,
          "items" : {
            "$ref" : "#/definitions/UserProperty"
          }
        },
        "hadoopSecurityGroups" : {
          "type" : "string"
        },
        "hadoopAuthorizationType" : {
          "type" : "string"
        },
        "securityGroups" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/HadoopSecurityGroup"
          }
        },
        "usedByFeeds" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/FeedSummary"
          }
        },
        "userDatasources" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Datasource"
          }
        },
        "tableOption" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "object"
          }
        },
        "allowIndexing" : {
          "type" : "boolean",
          "default" : false
        },
        "historyReindexingStatus" : {
          "type" : "string"
        },
        "categoryIcon" : {
          "type" : "string"
        },
        "categoryIconColor" : {
          "type" : "string"
        },
        "categoryId" : {
          "type" : "string"
        },
        "categoryName" : {
          "type" : "string"
        },
        "systemCategoryName" : {
          "type" : "string"
        },
        "categoryAndFeedDisplayName" : {
          "type" : "string"
        },
        "new" : {
          "type" : "boolean",
          "default" : false
        },
        "reusableFeed" : {
          "type" : "boolean",
          "default" : false
        }
      }
    },
    "Schema" : {
      "type" : "object",
      "properties" : {
        "description" : {
          "type" : "string"
        },
        "charset" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "fields" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Field"
          }
        },
        "properties" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "id" : {
          "type" : "string",
          "format" : "uuid"
        }
      }
    },
    "VersionedProcessGroup" : {
      "type" : "object",
      "properties" : {
        "processGroupPriorToVersioning" : {
          "$ref" : "#/definitions/ProcessGroupDTO"
        },
        "inputProcessorsPriorToDisabling" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ProcessorDTO"
          }
        },
        "versionedProcessGroup" : {
          "$ref" : "#/definitions/ProcessGroupDTO"
        },
        "processGroupName" : {
          "type" : "string"
        },
        "versionedProcessGroupName" : {
          "type" : "string"
        },
        "deletedInputPortConnections" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ConnectionDTO"
          }
        }
      }
    },
    "FeedDependencyGraph" : {
      "type" : "object",
      "properties" : {
        "feed" : {
          "$ref" : "#/definitions/Feed"
        },
        "preconditonResult" : {
          "$ref" : "#/definitions/ServiceLevelAssessment"
        },
        "dependencies" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/FeedDependencyGraph"
          }
        }
      }
    },
    "Dashboard" : {
      "type" : "object",
      "properties" : {
        "user" : {
          "type" : "string"
        },
        "time" : {
          "type" : "integer",
          "format" : "int64"
        },
        "status" : {
          "type" : "string",
          "enum" : [ "READY", "NOT_READY" ]
        },
        "healthCounts" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "integer",
            "format" : "int64"
          }
        },
        "feeds" : {
          "$ref" : "#/definitions/SearchResult"
        },
        "alerts" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/AlertSummaryGrouped"
          }
        },
        "serviceStatus" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ServiceStatusResponse"
          }
        },
        "dataConfidenceSummary" : {
          "$ref" : "#/definitions/DataConfidenceSummary"
        }
      }
    },
    "TemplateDtoWrapper" : {
      "type" : "object",
      "properties" : {
        "uri" : {
          "type" : "string",
          "description" : "The URI for the template."
        },
        "id" : {
          "type" : "string",
          "description" : "The id of the template."
        },
        "groupId" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string",
          "description" : "The name of the template."
        },
        "description" : {
          "type" : "string",
          "description" : "The description of the template."
        },
        "timestamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The timestamp when this template was created."
        },
        "encodingVersion" : {
          "type" : "string",
          "xml" : {
            "name" : "encoding-version",
            "attribute" : true
          }
        },
        "snippet" : {
          "description" : "The contents of the template.",
          "$ref" : "#/definitions/FlowSnippetDTO"
        },
        "templateDto" : {
          "$ref" : "#/definitions/TemplateDTO"
        },
        "registeredTemplateId" : {
          "type" : "string"
        }
      },
      "xml" : {
        "name" : "template"
      }
    },
    "PreconditionRule" : {
      "type" : "object",
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "displayName" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "shortDescription" : {
          "type" : "string"
        },
        "properties" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/FieldRuleProperty"
          }
        },
        "objectClassType" : {
          "type" : "string"
        },
        "objectShortClassType" : {
          "type" : "string"
        },
        "propertyValuesDisplayString" : {
          "type" : "string"
        },
        "sequence" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "TestSlaVelocityEmail" : {
      "type" : "object",
      "properties" : {
        "subject" : {
          "type" : "string"
        },
        "body" : {
          "type" : "string"
        },
        "emailAddress" : {
          "type" : "string"
        },
        "success" : {
          "type" : "boolean",
          "default" : false
        },
        "exceptionMessage" : {
          "type" : "string"
        }
      }
    },
    "AlertUpdateRequest" : {
      "type" : "object",
      "properties" : {
        "state" : {
          "type" : "string",
          "enum" : [ "CREATED", "UNHANDLED", "IN_PROGRESS", "HANDLED" ]
        },
        "description" : {
          "type" : "string"
        },
        "clear" : {
          "type" : "boolean",
          "default" : false
        },
        "unclear" : {
          "type" : "boolean",
          "default" : false
        }
      }
    },
    "DomainType" : {
      "type" : "object",
      "properties" : {
        "description" : {
          "type" : "string"
        },
        "field" : {
          "$ref" : "#/definitions/Field"
        },
        "fieldNameFlags" : {
          "type" : "string"
        },
        "fieldNamePattern" : {
          "type" : "string"
        },
        "fieldPolicy" : {
          "$ref" : "#/definitions/FieldPolicy"
        },
        "icon" : {
          "type" : "string"
        },
        "iconColor" : {
          "type" : "string"
        },
        "id" : {
          "type" : "string"
        },
        "regexFlags" : {
          "type" : "string"
        },
        "regexPattern" : {
          "type" : "string"
        },
        "title" : {
          "type" : "string"
        }
      }
    },
    "FeedLineageStyle" : {
      "type" : "object",
      "properties" : {
        "shape" : {
          "type" : "string"
        },
        "color" : {
          "type" : "string"
        },
        "size" : {
          "type" : "integer",
          "format" : "int32"
        },
        "font" : {
          "$ref" : "#/definitions/FontOptions"
        },
        "icon" : {
          "$ref" : "#/definitions/IconOptions"
        }
      }
    },
    "FeedPrecondition" : {
      "type" : "object",
      "properties" : {
        "sla" : {
          "$ref" : "#/definitions/ServiceLevelAgreement"
        }
      }
    },
    "JcrQueryResult" : {
      "type" : "object",
      "properties" : {
        "columns" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/JcrQueryResultColumn"
          }
        },
        "rows" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/JcrQueryResultRow"
          }
        },
        "explainPlan" : {
          "type" : "string"
        },
        "queryTime" : {
          "type" : "integer",
          "format" : "int64"
        }
      }
    },
    "DirectoryDatasource" : {
      "allOf" : [ {
        "$ref" : "#/definitions/Datasource"
      }, {
        "type" : "object",
        "properties" : {
          "path" : {
            "type" : "string"
          },
          "patterns" : {
            "type" : "array",
            "uniqueItems" : true,
            "items" : {
              "$ref" : "#/definitions/FilePattern"
            }
          }
        }
      } ]
    },
    "ServiceLevelAgreementActionValidation" : {
      "type" : "object",
      "properties" : {
        "validationMessage" : {
          "type" : "string"
        },
        "actionClass" : {
          "type" : "string"
        },
        "valid" : {
          "type" : "boolean",
          "default" : false
        }
      }
    },
    "ServiceLevelAgreementActionUiConfigurationItem" : {
      "type" : "object",
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "displayName" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "shortDescription" : {
          "type" : "string"
        },
        "properties" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/FieldRuleProperty"
          }
        },
        "objectClassType" : {
          "type" : "string"
        },
        "objectShortClassType" : {
          "type" : "string"
        },
        "propertyValuesDisplayString" : {
          "type" : "string"
        },
        "sequence" : {
          "type" : "integer",
          "format" : "int32"
        },
        "validConfiguration" : {
          "type" : "boolean",
          "default" : false
        },
        "validationMessage" : {
          "type" : "string"
        },
        "velocityTemplateType" : {
          "type" : "string"
        },
        "actionClasses" : {
          "description" : "actionClasses",
          "$ref" : "#/definitions/#"
        }
      }
    },
    "NifiProcessGroup" : {
      "type" : "object",
      "properties" : {
        "processGroupEntity" : {
          "$ref" : "#/definitions/ProcessGroupDTO"
        },
        "inputProcessor" : {
          "$ref" : "#/definitions/ProcessorDTO"
        },
        "success" : {
          "type" : "boolean",
          "default" : false
        },
        "errors" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/NiFiComponentErrors"
          }
        },
        "rolledBack" : {
          "type" : "boolean",
          "default" : false
        },
        "versionedProcessGroup" : {
          "$ref" : "#/definitions/VersionedProcessGroup"
        },
        "reusableFlowInstance" : {
          "type" : "boolean",
          "default" : false
        },
        "allErrors" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/NifiError"
          }
        },
        "controllerServiceErrors" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/NiFiComponentErrors"
          }
        }
      }
    },
    "BundleDTO" : {
      "type" : "object",
      "properties" : {
        "group" : {
          "type" : "string"
        },
        "artifact" : {
          "type" : "string"
        },
        "version" : {
          "type" : "string"
        }
      }
    },
    "ConnectableDTO" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        },
        "groupId" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "running" : {
          "type" : "boolean",
          "default" : false
        },
        "transmitting" : {
          "type" : "boolean",
          "default" : false
        },
        "exists" : {
          "type" : "boolean",
          "default" : false
        },
        "comments" : {
          "type" : "string"
        }
      }
    },
    "DocumentedTypeDTO" : {
      "type" : "object",
      "properties" : {
        "type" : {
          "type" : "string"
        },
        "bundle" : {
          "$ref" : "#/definitions/BundleDTO"
        },
        "controllerServiceApis" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ControllerServiceApiDTO"
          }
        },
        "description" : {
          "type" : "string"
        },
        "usageRestriction" : {
          "type" : "string"
        },
        "tags" : {
          "type" : "array",
          "uniqueItems" : true,
          "items" : {
            "type" : "string"
          }
        }
      }
    },
    "FieldStandardizationRule" : {
      "type" : "object",
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "displayName" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "shortDescription" : {
          "type" : "string"
        },
        "properties" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/FieldRuleProperty"
          }
        },
        "objectClassType" : {
          "type" : "string"
        },
        "objectShortClassType" : {
          "type" : "string"
        },
        "propertyValuesDisplayString" : {
          "type" : "string"
        },
        "sequence" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "FlowProcessor" : {
      "type" : "object",
      "properties" : {
        "properties" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/NifiProperty"
          }
        },
        "type" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "id" : {
          "type" : "string"
        },
        "groupName" : {
          "type" : "string"
        },
        "groupId" : {
          "type" : "string"
        },
        "inputProcessor" : {
          "type" : "boolean",
          "default" : false
        },
        "userDefinedInputProcessor" : {
          "type" : "boolean",
          "default" : false
        },
        "flowId" : {
          "type" : "string"
        },
        "leaf" : {
          "type" : "boolean",
          "default" : false
        }
      }
    },
    "MessageBodyWorkers" : {
      "type" : "object"
    },
    "PortDTO" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string"
        },
        "parentGroupId" : {
          "type" : "string"
        },
        "position" : {
          "$ref" : "#/definitions/PositionDTO"
        },
        "name" : {
          "type" : "string"
        },
        "comments" : {
          "type" : "string"
        },
        "state" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        },
        "transmitting" : {
          "type" : "boolean",
          "default" : false
        },
        "concurrentlySchedulableTaskCount" : {
          "type" : "integer",
          "format" : "int32"
        },
        "userAccessControl" : {
          "type" : "array",
          "uniqueItems" : true,
          "items" : {
            "type" : "string"
          }
        },
        "groupAccessControl" : {
          "type" : "array",
          "uniqueItems" : true,
          "items" : {
            "type" : "string"
          }
        },
        "validationErrors" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        }
      }
    },
    "TriggerInfo" : {
      "type" : "object",
      "properties" : {
        "jobIdentifier" : {
          "$ref" : "#/definitions/ScheduleIdentifier"
        },
        "triggerIdentifier" : {
          "$ref" : "#/definitions/ScheduleIdentifier"
        },
        "state" : {
          "type" : "string",
          "enum" : [ "NONE", "NORMAL", "PAUSED", "COMPLETE", "ERROR", "BLOCKED" ]
        },
        "nextFireTime" : {
          "type" : "string",
          "format" : "date-time"
        },
        "previousFireTime" : {
          "type" : "string",
          "format" : "date-time"
        },
        "startTime" : {
          "type" : "string",
          "format" : "date-time"
        },
        "endTime" : {
          "type" : "string",
          "format" : "date-time"
        },
        "cronExpression" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "cronExpressionSummary" : {
          "type" : "string"
        }
      }
    },
    "ServiceLevelAgreement" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "defaultGroup" : {
          "$ref" : "#/definitions/ObligationGroup"
        },
        "groups" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ObligationGroup"
          }
        },
        "slaChecks" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ServiceLevelAgreementCheck"
          }
        },
        "obligationErrors" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "slaCheckErrors" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "canEdit" : {
          "type" : "boolean",
          "default" : false
        }
      }
    },
    "RemoteProcessGroupPortDTO" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string"
        },
        "groupId" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "comments" : {
          "type" : "string"
        },
        "concurrentlySchedulableTaskCount" : {
          "type" : "integer",
          "format" : "int32"
        },
        "transmitting" : {
          "type" : "boolean",
          "default" : false
        },
        "useCompression" : {
          "type" : "boolean",
          "default" : false
        },
        "exists" : {
          "type" : "boolean",
          "default" : false
        },
        "targetRunning" : {
          "type" : "boolean",
          "default" : false
        },
        "connected" : {
          "type" : "boolean",
          "default" : false
        },
        "batchSettings" : {
          "$ref" : "#/definitions/BatchSettingsDTO"
        }
      }
    },
    "Role" : {
      "type" : "object",
      "properties" : {
        "systemName" : {
          "type" : "string"
        },
        "title" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "allowedActions" : {
          "$ref" : "#/definitions/ActionGroup"
        }
      }
    },
    "FeedDestination" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string"
        },
        "fieldsPolicy" : {
          "$ref" : "#/definitions/FieldsPolicy"
        },
        "feedId" : {
          "type" : "string"
        },
        "datasourceId" : {
          "type" : "string"
        },
        "datasource" : {
          "$ref" : "#/definitions/Datasource"
        }
      }
    },
    "FeedSchedule" : {
      "type" : "object",
      "properties" : {
        "processorId" : {
          "type" : "string"
        },
        "schedulingPeriod" : {
          "type" : "string"
        },
        "schedulingStrategy" : {
          "type" : "string"
        },
        "concurrentTasks" : {
          "type" : "integer",
          "format" : "int32"
        },
        "executionNode" : {
          "type" : "string"
        },
        "preconditions" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/PreconditionRule"
          }
        }
      }
    },
    "ServiceLevelAgreementRule" : {
      "type" : "object",
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "displayName" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "shortDescription" : {
          "type" : "string"
        },
        "properties" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/FieldRuleProperty"
          }
        },
        "objectClassType" : {
          "type" : "string"
        },
        "objectShortClassType" : {
          "type" : "string"
        },
        "propertyValuesDisplayString" : {
          "type" : "string"
        },
        "sequence" : {
          "type" : "integer",
          "format" : "int32"
        },
        "condition" : {
          "type" : "string",
          "enum" : [ "REQUIRED", "SUFFICIENT", "OPTIONAL" ]
        }
      }
    },
    "ServiceLevelAgreementEmailTemplate" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string"
        },
        "systemName" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "subject" : {
          "type" : "string"
        },
        "template" : {
          "type" : "string"
        },
        "enabled" : {
          "type" : "boolean",
          "default" : false
        },
        "default" : {
          "type" : "boolean",
          "default" : false
        }
      }
    },
    "EditFeedEntity" : {
      "type" : "object",
      "properties" : {
        "action" : {
          "type" : "string",
          "enum" : [ "SUMMARY", "NIFI_PROPERTIES", "TABLE_DATA", "PROPERTIES", "SCHEDULE" ]
        },
        "feedMetadata" : {
          "$ref" : "#/definitions/FeedMetadata"
        }
      }
    },
    "AlertChangeEvent" : {
      "type" : "object",
      "properties" : {
        "createdTime" : {
          "type" : "string",
          "format" : "date-time"
        },
        "state" : {
          "type" : "string",
          "enum" : [ "CREATED", "UNHANDLED", "IN_PROGRESS", "HANDLED" ]
        },
        "description" : {
          "type" : "string"
        },
        "content" : {
          "type" : "string"
        },
        "user" : {
          "type" : "string"
        }
      }
    },
    "ExtensibleTypeDescriptor" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "supertype" : {
          "type" : "string"
        },
        "displayName" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "createdTime" : {
          "type" : "string",
          "format" : "date-time"
        },
        "modifiedTime" : {
          "type" : "string",
          "format" : "date-time"
        },
        "fields" : {
          "type" : "array",
          "uniqueItems" : true,
          "items" : {
            "$ref" : "#/definitions/FieldDescriptor"
          }
        }
      }
    },
    "Action" : {
      "type" : "object",
      "properties" : {
        "systemName" : {
          "type" : "string"
        },
        "title" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "actions" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Action"
          }
        }
      }
    },
    "JdbcDatasource" : {
      "allOf" : [ {
        "$ref" : "#/definitions/Datasource"
      }, {
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "string"
          },
          "icon" : {
            "type" : "string"
          },
          "iconColor" : {
            "type" : "string"
          },
          "controllerServiceId" : {
            "type" : "string"
          },
          "databaseConnectionUrl" : {
            "type" : "string"
          },
          "databaseDriverClassName" : {
            "type" : "string"
          },
          "databaseDriverLocation" : {
            "type" : "string"
          },
          "databaseUser" : {
            "type" : "string"
          },
          "password" : {
            "type" : "string"
          }
        }
      } ]
    },
    "TableSchema" : {
      "type" : "object",
      "properties" : {
        "schemaName" : {
          "type" : "string"
        },
        "databaseName" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "charset" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "fields" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Field"
          }
        },
        "properties" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "id" : {
          "type" : "string",
          "format" : "uuid"
        }
      }
    },
    "FieldValidationRule" : {
      "type" : "object",
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "displayName" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "shortDescription" : {
          "type" : "string"
        },
        "properties" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/FieldRuleProperty"
          }
        },
        "objectClassType" : {
          "type" : "string"
        },
        "objectShortClassType" : {
          "type" : "string"
        },
        "propertyValuesDisplayString" : {
          "type" : "string"
        },
        "sequence" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "Parent" : {
      "type" : "object",
      "properties" : {
        "script" : {
          "type" : "string"
        },
        "table" : {
          "type" : "string"
        }
      }
    },
    "ImportTemplateOptions" : {
      "type" : "object",
      "properties" : {
        "uploadKey" : {
          "type" : "string"
        },
        "importComponentOptions" : {
          "type" : "array",
          "uniqueItems" : true,
          "items" : {
            "$ref" : "#/definitions/ImportComponentOption"
          }
        },
        "deferCleanup" : {
          "type" : "boolean",
          "default" : false
        }
      }
    },
    "JcrQueryResultRow" : {
      "type" : "object",
      "properties" : {
        "columnValues" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/JcrQueryResultColumnValue"
          }
        }
      }
    },
    "FeedHealth" : {
      "type" : "object",
      "properties" : {
        "runningCount" : {
          "type" : "integer",
          "format" : "int64"
        },
        "healthyCount" : {
          "type" : "integer",
          "format" : "int64"
        },
        "lastOpFeed" : {
          "$ref" : "#/definitions/ExecutedFeed"
        },
        "unhealthyCount" : {
          "type" : "integer",
          "format" : "int64"
        },
        "avgRuntime" : {
          "type" : "integer",
          "format" : "int64"
        },
        "lastUnhealthyTime" : {
          "type" : "string",
          "format" : "date-time"
        },
        "lastOpFeedState" : {
          "type" : "string"
        },
        "healthy" : {
          "type" : "boolean",
          "default" : false
        },
        "stream" : {
          "type" : "boolean",
          "default" : false
        },
        "feedId" : {
          "type" : "string"
        },
        "feed" : {
          "type" : "string"
        }
      }
    },
    "Field" : {
      "type" : "object",
      "properties" : {
        "modifiable" : {
          "type" : "boolean",
          "default" : false
        },
        "nativeDataType" : {
          "type" : "string"
        },
        "dataTypeDescriptor" : {
          "$ref" : "#/definitions/DataTypeDescriptor"
        },
        "dataTypeWithPrecisionAndScale" : {
          "type" : "string"
        },
        "precisionScale" : {
          "type" : "string"
        },
        "createdTracker" : {
          "type" : "boolean",
          "default" : false
        },
        "updatedTracker" : {
          "type" : "boolean",
          "default" : false
        },
        "tags" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Tag"
          }
        },
        "description" : {
          "type" : "string"
        },
        "nullable" : {
          "type" : "boolean",
          "default" : false
        },
        "primaryKey" : {
          "type" : "boolean",
          "default" : false
        },
        "derivedDataType" : {
          "type" : "string"
        },
        "sampleValues" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "name" : {
          "type" : "string"
        }
      }
    },
    "AlertType" : {
      "type" : "object",
      "properties" : {
        "type" : {
          "type" : "string"
        },
        "label" : {
          "type" : "string"
        }
      }
    },
    "TemplateOrder" : {
      "type" : "object",
      "properties" : {
        "templateIds" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        }
      }
    },
    "FeedLineage" : {
      "type" : "object",
      "properties" : {
        "feedMap" : {
          "type" : "object",
          "additionalProperties" : {
            "$ref" : "#/definitions/Feed"
          }
        },
        "feed" : {
          "$ref" : "#/definitions/Feed"
        },
        "datasourceMap" : {
          "type" : "object",
          "additionalProperties" : {
            "$ref" : "#/definitions/Datasource"
          }
        },
        "styles" : {
          "type" : "object",
          "additionalProperties" : {
            "$ref" : "#/definitions/FeedLineageStyle"
          }
        }
      }
    },
    "ImportFeedOptions" : {
      "type" : "object",
      "properties" : {
        "uploadKey" : {
          "type" : "string"
        },
        "importComponentOptions" : {
          "type" : "array",
          "uniqueItems" : true,
          "items" : {
            "$ref" : "#/definitions/ImportComponentOption"
          }
        },
        "disableUponImport" : {
          "type" : "boolean",
          "default" : false
        },
        "categorySystemName" : {
          "type" : "string"
        }
      }
    },
    "NiFiFlowProcessorConnection" : {
      "type" : "object",
      "properties" : {
        "connectionIdentifier" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "selectedRelationships" : {
          "type" : "array",
          "uniqueItems" : true,
          "items" : {
            "type" : "string"
          }
        }
      }
    },
    "ExecutedStep" : {
      "type" : "object",
      "properties" : {
        "executionContext" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "object"
          }
        },
        "running" : {
          "type" : "boolean",
          "default" : false
        },
        "exitDescription" : {
          "type" : "string"
        },
        "lastUpdateTime" : {
          "type" : "string",
          "format" : "date-time"
        },
        "nifiEventId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "timeSinceEndTime" : {
          "type" : "integer",
          "format" : "int64"
        },
        "runTime" : {
          "type" : "integer",
          "format" : "int64"
        },
        "version" : {
          "type" : "integer",
          "format" : "int32"
        },
        "endTime" : {
          "type" : "string",
          "format" : "date-time"
        },
        "status" : {
          "type" : "string",
          "enum" : [ "STARTING", "STARTED", "STOPPING", "STOPPED", "FAILED", "COMPLETED", "ABANDONED", "UNKNOWN" ]
        },
        "startTime" : {
          "type" : "string",
          "format" : "date-time"
        },
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "exitCode" : {
          "type" : "string"
        },
        "stepName" : {
          "type" : "string"
        }
      }
    },
    "Pair" : {
      "type" : "object",
      "properties" : {
        "key" : {
          "type" : "string"
        },
        "value" : {
          "type" : "object"
        }
      }
    },
    "ScheduledJob" : {
      "type" : "object",
      "properties" : {
        "jobIdentifier" : {
          "$ref" : "#/definitions/ScheduleIdentifier"
        },
        "jobName" : {
          "type" : "string"
        },
        "jobStatus" : {
          "type" : "string"
        },
        "jobGroup" : {
          "type" : "string"
        },
        "nextFireTimeString" : {
          "type" : "string"
        },
        "cronExpression" : {
          "type" : "string"
        },
        "nextFireTime" : {
          "type" : "string",
          "format" : "date-time"
        },
        "triggers" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/TriggerInfo"
          }
        },
        "state" : {
          "type" : "string"
        },
        "cronExpressionSummary" : {
          "type" : "string"
        },
        "running" : {
          "type" : "boolean",
          "default" : false
        },
        "scheduled" : {
          "type" : "boolean",
          "default" : false
        },
        "paused" : {
          "type" : "boolean",
          "default" : false
        }
      }
    },
    "ImportTemplate" : {
      "type" : "object",
      "properties" : {
        "versionIdentifier" : {
          "type" : "string"
        },
        "fileName" : {
          "type" : "string"
        },
        "templateName" : {
          "type" : "string"
        },
        "success" : {
          "type" : "boolean",
          "default" : false
        },
        "valid" : {
          "type" : "boolean",
          "default" : false
        },
        "templateResults" : {
          "$ref" : "#/definitions/NifiProcessGroup"
        },
        "controllerServiceErrors" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/NiFiComponentErrors"
          }
        },
        "templateId" : {
          "type" : "string"
        },
        "nifiTemplateId" : {
          "type" : "string"
        },
        "zipFile" : {
          "type" : "boolean",
          "default" : false
        },
        "nifiTemplateXml" : {
          "type" : "string"
        },
        "templateJson" : {
          "type" : "string"
        },
        "nifiConnectingReusableTemplateXmls" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "verificationToReplaceConnectingResuableTemplateNeeded" : {
          "type" : "boolean",
          "default" : false
        },
        "importOptions" : {
          "$ref" : "#/definitions/ImportTemplateOptions"
        },
        "reusableFlowOutputPortConnectionsNeeded" : {
          "type" : "boolean",
          "default" : false
        },
        "reusableTemplateConnections" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ReusableTemplateConnectionInfo"
          }
        }
      }
    },
    "PositionDTO" : {
      "type" : "object",
      "properties" : {
        "x" : {
          "type" : "number",
          "format" : "double"
        },
        "y" : {
          "type" : "number",
          "format" : "double"
        }
      }
    },
    "ContentDisposition" : {
      "type" : "object",
      "properties" : {
        "type" : {
          "type" : "string"
        },
        "parameters" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "fileName" : {
          "type" : "string"
        },
        "creationDate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "modificationDate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "readDate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "size" : {
          "type" : "integer",
          "format" : "int64"
        }
      }
    },
    "NiFiAllowableValue" : {
      "type" : "object",
      "properties" : {
        "displayName" : {
          "type" : "string"
        },
        "value" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        }
      }
    },
    "RoleMembership" : {
      "type" : "object",
      "properties" : {
        "role" : {
          "$ref" : "#/definitions/Role"
        },
        "users" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/User"
          }
        },
        "groups" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/UserGroup"
          }
        }
      }
    },
    "Metric" : {
      "type" : "object",
      "properties" : {
        "description" : {
          "type" : "string"
        }
      }
    },
    "Alert" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string",
          "format" : "uri"
        },
        "subtype" : {
          "type" : "string"
        },
        "level" : {
          "type" : "string",
          "enum" : [ "INFO", "WARNING", "MINOR", "MAJOR", "CRITICAL", "FATAL" ]
        },
        "state" : {
          "type" : "string",
          "enum" : [ "CREATED", "UNHANDLED", "IN_PROGRESS", "HANDLED" ]
        },
        "createdTime" : {
          "type" : "string",
          "format" : "date-time"
        },
        "description" : {
          "type" : "string"
        },
        "actionable" : {
          "type" : "boolean",
          "default" : false
        },
        "cleared" : {
          "type" : "boolean",
          "default" : false
        },
        "content" : {
          "type" : "string"
        },
        "entityId" : {
          "type" : "string"
        },
        "entityType" : {
          "type" : "string"
        },
        "events" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/AlertChangeEvent"
          }
        }
      }
    },
    "FeedSummary" : {
      "type" : "object",
      "properties" : {
        "owner" : {
          "$ref" : "#/definitions/User"
        },
        "allowedActions" : {
          "$ref" : "#/definitions/ActionGroup"
        },
        "roleMemberships" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/RoleMembership"
          }
        },
        "feedRoleMemberships" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/RoleMembership"
          }
        },
        "categoryName" : {
          "type" : "string"
        },
        "systemCategoryName" : {
          "type" : "string"
        },
        "categoryId" : {
          "type" : "string"
        },
        "categoryIcon" : {
          "type" : "string"
        },
        "categoryIconColor" : {
          "type" : "string"
        },
        "id" : {
          "type" : "string"
        },
        "feedId" : {
          "type" : "string"
        },
        "feedName" : {
          "type" : "string"
        },
        "systemFeedName" : {
          "type" : "string"
        },
        "active" : {
          "type" : "boolean",
          "default" : false
        },
        "state" : {
          "type" : "string"
        },
        "updateDate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "templateName" : {
          "type" : "string"
        },
        "templateId" : {
          "type" : "string"
        },
        "categoryAndFeedSystemName" : {
          "type" : "string"
        },
        "categoryAndFeedDisplayName" : {
          "type" : "string"
        }
      }
    },
    "ControllerServiceDTO" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string"
        },
        "parentGroupId" : {
          "type" : "string"
        },
        "position" : {
          "$ref" : "#/definitions/PositionDTO"
        },
        "name" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        },
        "bundle" : {
          "$ref" : "#/definitions/BundleDTO"
        },
        "controllerServiceApis" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ControllerServiceApiDTO"
          }
        },
        "comments" : {
          "type" : "string"
        },
        "state" : {
          "type" : "string"
        },
        "persistsState" : {
          "type" : "boolean",
          "default" : false
        },
        "restricted" : {
          "type" : "boolean",
          "default" : false
        },
        "multipleVersionsAvailable" : {
          "type" : "boolean",
          "default" : false
        },
        "properties" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "descriptors" : {
          "type" : "object",
          "additionalProperties" : {
            "$ref" : "#/definitions/PropertyDescriptorDTO"
          }
        },
        "customUiUrl" : {
          "type" : "string"
        },
        "annotationData" : {
          "type" : "string"
        },
        "referencingComponents" : {
          "type" : "array",
          "uniqueItems" : true,
          "items" : {
            "$ref" : "#/definitions/ControllerServiceReferencingComponentEntity"
          }
        },
        "validationErrors" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "extensionMissing" : {
          "type" : "boolean",
          "default" : false
        }
      }
    },
    "FlowSnippetDTO" : {
      "type" : "object",
      "properties" : {
        "processGroups" : {
          "type" : "array",
          "uniqueItems" : true,
          "items" : {
            "$ref" : "#/definitions/ProcessGroupDTO"
          }
        },
        "remoteProcessGroups" : {
          "type" : "array",
          "uniqueItems" : true,
          "items" : {
            "$ref" : "#/definitions/RemoteProcessGroupDTO"
          }
        },
        "processors" : {
          "type" : "array",
          "uniqueItems" : true,
          "items" : {
            "$ref" : "#/definitions/ProcessorDTO"
          }
        },
        "inputPorts" : {
          "type" : "array",
          "uniqueItems" : true,
          "items" : {
            "$ref" : "#/definitions/PortDTO"
          }
        },
        "outputPorts" : {
          "type" : "array",
          "uniqueItems" : true,
          "items" : {
            "$ref" : "#/definitions/PortDTO"
          }
        },
        "connections" : {
          "type" : "array",
          "uniqueItems" : true,
          "items" : {
            "$ref" : "#/definitions/ConnectionDTO"
          }
        },
        "labels" : {
          "type" : "array",
          "uniqueItems" : true,
          "items" : {
            "$ref" : "#/definitions/LabelDTO"
          }
        },
        "funnels" : {
          "type" : "array",
          "uniqueItems" : true,
          "items" : {
            "$ref" : "#/definitions/FunnelDTO"
          }
        },
        "controllerServices" : {
          "type" : "array",
          "uniqueItems" : true,
          "items" : {
            "$ref" : "#/definitions/ControllerServiceDTO"
          }
        }
      }
    },
    "LabelValue" : {
      "type" : "object",
      "properties" : {
        "label" : {
          "type" : "string"
        },
        "value" : {
          "type" : "string"
        },
        "hint" : {
          "type" : "string"
        },
        "properties" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "object"
          }
        }
      }
    },
    "ConnectionDTO" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string"
        },
        "parentGroupId" : {
          "type" : "string"
        },
        "position" : {
          "$ref" : "#/definitions/PositionDTO"
        },
        "source" : {
          "$ref" : "#/definitions/ConnectableDTO"
        },
        "destination" : {
          "$ref" : "#/definitions/ConnectableDTO"
        },
        "name" : {
          "type" : "string"
        },
        "labelIndex" : {
          "type" : "integer",
          "format" : "int32"
        },
        "getzIndex" : {
          "type" : "integer",
          "format" : "int64"
        },
        "selectedRelationships" : {
          "type" : "array",
          "uniqueItems" : true,
          "items" : {
            "type" : "string"
          }
        },
        "availableRelationships" : {
          "type" : "array",
          "uniqueItems" : true,
          "items" : {
            "type" : "string"
          }
        },
        "backPressureObjectThreshold" : {
          "type" : "integer",
          "format" : "int64"
        },
        "backPressureDataSizeThreshold" : {
          "type" : "string"
        },
        "flowFileExpiration" : {
          "type" : "string"
        },
        "prioritizers" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "bends" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/PositionDTO"
          }
        }
      }
    },
    "FieldsPolicy" : {
      "type" : "object",
      "properties" : {
        "fieldPolicies" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/FieldPolicy"
          }
        }
      }
    },
    "RelationshipDTO" : {
      "type" : "object",
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "autoTerminate" : {
          "type" : "boolean",
          "default" : false
        }
      }
    },
    "DatasourceDefinitions" : {
      "type" : "object",
      "properties" : {
        "definitions" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/DatasourceDefinition"
          }
        }
      }
    },
    "InitializationStatus" : {
      "type" : "object",
      "properties" : {
        "state" : {
          "type" : "string",
          "enum" : [ "PENDING", "IN_PROGRESS", "SUCCESS", "FAILED", "REINITIALIZE", "REINITIALIZE_FAILED" ]
        },
        "timestamp" : {
          "type" : "string",
          "format" : "date-time"
        }
      }
    },
    "UserGroup" : {
      "type" : "object",
      "properties" : {
        "description" : {
          "type" : "string"
        },
        "memberCount" : {
          "type" : "integer",
          "format" : "int32"
        },
        "systemName" : {
          "type" : "string"
        },
        "title" : {
          "type" : "string"
        }
      }
    },
    "IconOptions" : {
      "type" : "object",
      "properties" : {
        "code" : {
          "type" : "string"
        },
        "size" : {
          "type" : "integer",
          "format" : "int32"
        },
        "color" : {
          "type" : "string"
        }
      }
    },
    "JobAction" : {
      "type" : "object",
      "properties" : {
        "action" : {
          "type" : "string"
        },
        "includeSteps" : {
          "type" : "boolean",
          "default" : false
        }
      }
    },
    "TransformQueryResult" : {
      "type" : "object",
      "properties" : {
        "columns" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/QueryResultColumn"
          }
        },
        "rows" : {
          "type" : "array",
          "items" : {
            "type" : "array",
            "items" : {
              "type" : "object"
            }
          }
        },
        "validationResults" : {
          "type" : "array",
          "items" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/TransformValidationResult"
            }
          }
        }
      }
    },
    "AllowableValueEntity" : {
      "type" : "object",
      "properties" : {
        "allowableValue" : {
          "$ref" : "#/definitions/AllowableValueDTO"
        },
        "canRead" : {
          "type" : "boolean",
          "default" : false
        }
      },
      "xml" : {
        "name" : "entity"
      }
    },
    "TableSetup" : {
      "type" : "object",
      "properties" : {
        "fieldStructure" : {
          "type" : "string"
        },
        "existingTableName" : {
          "type" : "string"
        },
        "tableSchema" : {
          "$ref" : "#/definitions/TableSchema"
        },
        "sourceTableSchema" : {
          "$ref" : "#/definitions/TableSchema"
        },
        "feedTableSchema" : {
          "$ref" : "#/definitions/TableSchema"
        },
        "method" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "fieldPolicies" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/FieldPolicy"
          }
        },
        "partitions" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/PartitionField"
          }
        },
        "tableType" : {
          "type" : "string"
        },
        "incrementalDateField" : {
          "type" : "string"
        },
        "sourceTableIncrementalDateField" : {
          "type" : "string"
        },
        "options" : {
          "$ref" : "#/definitions/TableOptions"
        },
        "feedFormat" : {
          "type" : "string"
        },
        "targetFormat" : {
          "type" : "string"
        },
        "targetTblProperties" : {
          "type" : "string"
        },
        "targetMergeStrategy" : {
          "type" : "string"
        },
        "fieldPoliciesJson" : {
          "type" : "string"
        },
        "fieldIndexString" : {
          "type" : "string"
        },
        "partitionStructure" : {
          "type" : "string"
        },
        "partitionSpecs" : {
          "type" : "string"
        },
        "fieldsString" : {
          "type" : "string"
        },
        "sourceFields" : {
          "type" : "string"
        },
        "sourceFieldsCommaString" : {
          "type" : "string"
        },
        "feedFieldStructure" : {
          "type" : "string"
        },
        "nullableFields" : {
          "type" : "string"
        },
        "primaryKeyFields" : {
          "type" : "string"
        },
        "sourceTargetFieldMap" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "targetSourceFieldMap" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        }
      }
    },
    "RegisteredTemplate" : {
      "type" : "object",
      "properties" : {
        "owner" : {
          "$ref" : "#/definitions/User"
        },
        "allowedActions" : {
          "$ref" : "#/definitions/ActionGroup"
        },
        "roleMemberships" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/RoleMembership"
          }
        },
        "feedRoleMemberships" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/RoleMembership"
          }
        },
        "properties" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/NifiProperty"
          }
        },
        "nonInputProcessors" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Processor"
          }
        },
        "inputProcessors" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Processor"
          }
        },
        "id" : {
          "type" : "string"
        },
        "nifiTemplateId" : {
          "type" : "string"
        },
        "templateName" : {
          "type" : "string"
        },
        "updateDate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "createDate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "icon" : {
          "type" : "string"
        },
        "iconColor" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "state" : {
          "type" : "string"
        },
        "defineTable" : {
          "type" : "boolean",
          "default" : false
        },
        "reusableTemplate" : {
          "type" : "boolean",
          "default" : false
        },
        "reusableTemplateConnections" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ReusableTemplateConnectionInfo"
          }
        },
        "registeredDatasourceDefinitions" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/TemplateProcessorDatasourceDefinition"
          }
        },
        "order" : {
          "type" : "integer",
          "format" : "int64"
        },
        "templateOrder" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "feedsCount" : {
          "type" : "integer",
          "format" : "int32"
        },
        "templateTableOption" : {
          "type" : "string"
        },
        "timeBetweenStartingBatchJobs" : {
          "type" : "integer",
          "format" : "int64"
        },
        "stream" : {
          "type" : "boolean",
          "default" : false
        },
        "allowPreconditions" : {
          "type" : "boolean",
          "default" : false
        },
        "dataTransformation" : {
          "type" : "boolean",
          "default" : false
        },
        "isStream" : {
          "type" : "boolean",
          "default" : false
        }
      }
    },
    "ScheduleIdentifier" : {
      "type" : "object",
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "group" : {
          "type" : "string"
        }
      }
    },
    "ObligationGroup" : {
      "type" : "object",
      "properties" : {
        "condition" : {
          "type" : "string"
        },
        "obligations" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Obligation"
          }
        }
      }
    },
    "RestResponseStatus" : {
      "type" : "object",
      "properties" : {
        "status" : {
          "type" : "string"
        },
        "message" : {
          "type" : "string"
        },
        "developerMessage" : {
          "type" : "string"
        },
        "url" : {
          "type" : "string"
        },
        "validationError" : {
          "type" : "boolean",
          "default" : false
        },
        "properties" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "validationErrors" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ValidationError"
          }
        }
      }
    },
    "Datasource" : {
      "type" : "object",
      "properties" : {
        "owner" : {
          "$ref" : "#/definitions/User"
        },
        "allowedActions" : {
          "$ref" : "#/definitions/ActionGroup"
        },
        "roleMemberships" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/RoleMembership"
          }
        },
        "feedRoleMemberships" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/RoleMembership"
          }
        },
        "creationTime" : {
          "type" : "string",
          "format" : "date-time"
        },
        "id" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "encrypted" : {
          "type" : "boolean",
          "default" : false
        },
        "compressed" : {
          "type" : "boolean",
          "default" : false
        },
        "sourceForFeeds" : {
          "type" : "array",
          "uniqueItems" : true,
          "items" : {
            "$ref" : "#/definitions/Feed"
          }
        },
        "destinationForFeeds" : {
          "type" : "array",
          "uniqueItems" : true,
          "items" : {
            "$ref" : "#/definitions/Feed"
          }
        }
      }
    },
    "AllowableValueDTO" : {
      "type" : "object",
      "properties" : {
        "displayName" : {
          "type" : "string"
        },
        "value" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        }
      }
    },
    "UserDatasource" : {
      "allOf" : [ {
        "$ref" : "#/definitions/Datasource"
      }, {
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "string"
          },
          "icon" : {
            "type" : "string"
          },
          "iconColor" : {
            "type" : "string"
          }
        }
      } ]
    },
    "ControllerServiceReferencingComponentEntity" : {
      "type" : "object",
      "properties" : {
        "revision" : {
          "$ref" : "#/definitions/RevisionDTO"
        },
        "id" : {
          "type" : "string"
        },
        "uri" : {
          "type" : "string"
        },
        "position" : {
          "$ref" : "#/definitions/PositionDTO"
        },
        "permissions" : {
          "$ref" : "#/definitions/PermissionsDTO"
        },
        "bulletins" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/BulletinEntity"
          }
        },
        "component" : {
          "$ref" : "#/definitions/ControllerServiceReferencingComponentDTO"
        }
      },
      "xml" : {
        "name" : "controllerServiceReferencingComponentEntity"
      }
    },
    "RemoteProcessGroupContentsDTO" : {
      "type" : "object",
      "properties" : {
        "inputPorts" : {
          "type" : "array",
          "uniqueItems" : true,
          "items" : {
            "$ref" : "#/definitions/RemoteProcessGroupPortDTO"
          }
        },
        "outputPorts" : {
          "type" : "array",
          "uniqueItems" : true,
          "items" : {
            "$ref" : "#/definitions/RemoteProcessGroupPortDTO"
          }
        }
      }
    },
    "RemoteProcessGroupDTO" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string"
        },
        "parentGroupId" : {
          "type" : "string"
        },
        "position" : {
          "$ref" : "#/definitions/PositionDTO"
        },
        "targetUri" : {
          "type" : "string"
        },
        "targetUris" : {
          "type" : "string"
        },
        "targetSecure" : {
          "type" : "boolean",
          "default" : false
        },
        "name" : {
          "type" : "string"
        },
        "comments" : {
          "type" : "string"
        },
        "communicationsTimeout" : {
          "type" : "string"
        },
        "yieldDuration" : {
          "type" : "string"
        },
        "transportProtocol" : {
          "type" : "string"
        },
        "localNetworkInterface" : {
          "type" : "string"
        },
        "proxyHost" : {
          "type" : "string"
        },
        "proxyPort" : {
          "type" : "integer",
          "format" : "int32"
        },
        "proxyUser" : {
          "type" : "string"
        },
        "proxyPassword" : {
          "type" : "string"
        },
        "authorizationIssues" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "validationErrors" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "transmitting" : {
          "type" : "boolean",
          "default" : false
        },
        "inputPortCount" : {
          "type" : "integer",
          "format" : "int32"
        },
        "outputPortCount" : {
          "type" : "integer",
          "format" : "int32"
        },
        "activeRemoteInputPortCount" : {
          "type" : "integer",
          "format" : "int32"
        },
        "inactiveRemoteInputPortCount" : {
          "type" : "integer",
          "format" : "int32"
        },
        "activeRemoteOutputPortCount" : {
          "type" : "integer",
          "format" : "int32"
        },
        "inactiveRemoteOutputPortCount" : {
          "type" : "integer",
          "format" : "int32"
        },
        "flowRefreshed" : {
          "type" : "string",
          "format" : "date-time"
        },
        "contents" : {
          "$ref" : "#/definitions/RemoteProcessGroupContentsDTO"
        }
      }
    },
    "FunnelDTO" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string"
        },
        "parentGroupId" : {
          "type" : "string"
        },
        "position" : {
          "$ref" : "#/definitions/PositionDTO"
        }
      }
    },
    "FeedDependencyDeltaResults" : {
      "type" : "object",
      "properties" : {
        "feedJobExecutionContexts" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/FeedJobExecutionData"
            }
          }
        },
        "latestFeedJobExecutionContext" : {
          "type" : "object",
          "additionalProperties" : {
            "$ref" : "#/definitions/FeedJobExecutionData"
          }
        },
        "feedName" : {
          "type" : "string"
        },
        "feedId" : {
          "type" : "string"
        },
        "dependentFeedNames" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        }
      }
    },
    "TransformRequest" : {
      "type" : "object",
      "properties" : {
        "async" : {
          "type" : "boolean",
          "default" : false
        },
        "datasources" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Datasource"
          }
        },
        "parent" : {
          "$ref" : "#/definitions/Parent"
        },
        "policies" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/FieldPolicy"
          }
        },
        "script" : {
          "type" : "string"
        }
      }
    },
    "ServiceLevelAssessment" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string"
        },
        "obligationAssessments" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ObligationAssessment"
          }
        },
        "time" : {
          "type" : "string",
          "format" : "date-time"
        },
        "agreement" : {
          "$ref" : "#/definitions/ServiceLevelAgreement"
        },
        "message" : {
          "type" : "string"
        },
        "result" : {
          "type" : "string",
          "enum" : [ "SUCCESS", "WARNING", "FAILURE" ]
        }
      }
    },
    "DatasourceDefinition" : {
      "type" : "object",
      "properties" : {
        "processorType" : {
          "type" : "string"
        },
        "connectionType" : {
          "type" : "string",
          "enum" : [ "SOURCE", "DESTINATION" ]
        },
        "datasourcePropertyKeys" : {
          "type" : "array",
          "uniqueItems" : true,
          "items" : {
            "type" : "string"
          }
        },
        "datasourceType" : {
          "type" : "string"
        },
        "identityString" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "title" : {
          "type" : "string"
        }
      }
    },
    "HadoopAuthorizationGroup" : {
      "type" : "object",
      "properties" : {
        "description" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "id" : {
          "type" : "string"
        }
      }
    },
    "FilePattern" : {
      "type" : "object",
      "properties" : {
        "regex" : {
          "type" : "string"
        },
        "glob" : {
          "type" : "string"
        }
      }
    },
    "FormDataContentDisposition" : {
      "type" : "object",
      "properties" : {
        "type" : {
          "type" : "string"
        },
        "parameters" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "fileName" : {
          "type" : "string"
        },
        "creationDate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "modificationDate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "readDate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "size" : {
          "type" : "integer",
          "format" : "int64"
        },
        "name" : {
          "type" : "string"
        }
      }
    },
    "ClusterMessage" : {
      "type" : "object",
      "properties" : {
        "message" : {
          "$ref" : "#/definitions/Serializable"
        },
        "id" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        }
      }
    },
    "HiveTableDatasource" : {
      "allOf" : [ {
        "$ref" : "#/definitions/Datasource"
      }, {
        "type" : "object",
        "properties" : {
          "database" : {
            "type" : "string"
          },
          "tableName" : {
            "type" : "string"
          },
          "modifiers" : {
            "type" : "string"
          },
          "columns" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/HiveTableColumn"
            }
          },
          "partitions" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/HiveTablePartition"
            }
          }
        }
      } ]
    },
    "NiFiFlowCacheSync" : {
      "type" : "object",
      "properties" : {
        "syncId" : {
          "type" : "string"
        },
        "snapshot" : {
          "$ref" : "#/definitions/NifiFlowCacheSnapshot"
        },
        "lastSync" : {
          "type" : "string",
          "format" : "date-time"
        },
        "message" : {
          "type" : "string"
        },
        "updated" : {
          "type" : "boolean",
          "default" : false
        },
        "unavailable" : {
          "type" : "boolean",
          "default" : false
        }
      }
    },
    "AlertSummaryGrouped" : {
      "type" : "object",
      "properties" : {
        "type" : {
          "type" : "string",
          "format" : "uri"
        },
        "subtype" : {
          "type" : "string"
        },
        "feedId" : {
          "type" : "string"
        },
        "feedName" : {
          "type" : "string"
        },
        "slaId" : {
          "type" : "string"
        },
        "slaName" : {
          "type" : "string"
        },
        "count" : {
          "type" : "integer",
          "format" : "int64"
        },
        "levelCounts" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "integer",
            "format" : "int64"
          }
        },
        "lastAlertTimestamp" : {
          "type" : "integer",
          "format" : "int64"
        },
        "typeDisplayName" : {
          "type" : "string"
        },
        "groupDisplayName" : {
          "type" : "string"
        }
      }
    },
    "CacheSummary" : {
      "type" : "object",
      "properties" : {
        "summary" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "cachedSyncIds" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "DerivedDatasource" : {
      "allOf" : [ {
        "$ref" : "#/definitions/Datasource"
      }, {
        "type" : "object",
        "properties" : {
          "properties" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object"
            }
          },
          "datasourceType" : {
            "type" : "string"
          }
        }
      } ]
    },
    "FieldRuleProperty" : {
      "type" : "object",
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "displayName" : {
          "type" : "string"
        },
        "value" : {
          "type" : "string"
        },
        "values" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/LabelValue"
          }
        },
        "placeholder" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        },
        "hint" : {
          "type" : "string"
        },
        "objectProperty" : {
          "type" : "string"
        },
        "selectableValues" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/LabelValue"
          }
        },
        "required" : {
          "type" : "boolean",
          "default" : false
        },
        "group" : {
          "type" : "string"
        },
        "groupOrder" : {
          "type" : "integer",
          "format" : "int32"
        },
        "layout" : {
          "type" : "string"
        },
        "hidden" : {
          "type" : "boolean",
          "default" : false
        },
        "pattern" : {
          "type" : "string"
        },
        "patternInvalidMessage" : {
          "type" : "string"
        }
      }
    },
    "QueryResult" : {
      "type" : "object",
      "properties" : {
        "columnFieldMap" : {
          "type" : "object",
          "additionalProperties" : {
            "$ref" : "#/definitions/QueryResultColumn"
          }
        },
        "columnDisplayNameMap" : {
          "type" : "object",
          "additionalProperties" : {
            "$ref" : "#/definitions/QueryResultColumn"
          }
        },
        "columns" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/QueryResultColumn"
          }
        },
        "rows" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object"
            }
          }
        },
        "empty" : {
          "type" : "boolean",
          "default" : false
        },
        "query" : {
          "type" : "string"
        }
      }
    },
    "NiFiFlowCacheConnectionData" : {
      "type" : "object",
      "properties" : {
        "connectionIdentifier" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "sourceIdentifier" : {
          "type" : "string"
        },
        "destinationIdentifier" : {
          "type" : "string"
        }
      }
    },
    "SaveResponse" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string"
        },
        "location" : {
          "type" : "string"
        },
        "message" : {
          "type" : "string"
        },
        "progress" : {
          "type" : "number",
          "format" : "double"
        },
        "status" : {
          "type" : "string",
          "enum" : [ "ERROR", "PENDING", "SUCCESS" ]
        }
      }
    },
    "JcrQueryResultColumnValue" : {
      "type" : "object",
      "properties" : {
        "value" : {
          "type" : "string"
        }
      }
    },
    "DatabaseMetadata" : {
      "type" : "object",
      "properties" : {
        "columnName" : {
          "type" : "string"
        },
        "tableName" : {
          "type" : "string"
        },
        "databaseName" : {
          "type" : "string"
        }
      }
    },
    "ImportComponentOption" : {
      "type" : "object",
      "properties" : {
        "importComponent" : {
          "type" : "string",
          "enum" : [ "NIFI_TEMPLATE", "TEMPLATE_DATA", "FEED_DATA", "REUSABLE_TEMPLATE", "USER_DATASOURCES", "TEMPLATE_CONNECTION_INFORMATION" ]
        },
        "overwrite" : {
          "type" : "boolean",
          "default" : false
        },
        "shouldImport" : {
          "type" : "boolean",
          "default" : false
        },
        "analyzed" : {
          "type" : "boolean",
          "default" : false
        },
        "userAcknowledged" : {
          "type" : "boolean",
          "default" : false
        },
        "properties" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ImportProperty"
          }
        },
        "continueIfExists" : {
          "type" : "boolean",
          "default" : false
        },
        "errorMessages" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "connectionInfo" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ReusableTemplateConnectionInfo"
          }
        }
      }
    },
    "AboutDTO" : {
      "type" : "object",
      "properties" : {
        "title" : {
          "type" : "string"
        },
        "version" : {
          "type" : "string"
        },
        "uri" : {
          "type" : "string"
        },
        "contentViewerUrl" : {
          "type" : "string"
        },
        "timezone" : {
          "type" : "string",
          "format" : "date-time"
        },
        "buildTag" : {
          "type" : "string"
        },
        "buildRevision" : {
          "type" : "string"
        },
        "buildBranch" : {
          "type" : "string"
        },
        "buildTimestamp" : {
          "type" : "string",
          "format" : "date-time"
        }
      }
    },
    "Annotation" : {
      "type" : "object"
    },
    "SimpleServiceLevelAgreementDescription" : {
      "type" : "object",
      "properties" : {
        "slaId" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        }
      }
    },
    "PermissionsChange" : {
      "type" : "object",
      "properties" : {
        "change" : {
          "type" : "string",
          "enum" : [ "ADD", "REMOVE", "REPLACE" ]
        },
        "actionSet" : {
          "$ref" : "#/definitions/ActionGroup"
        },
        "users" : {
          "type" : "array",
          "uniqueItems" : true,
          "items" : {
            "type" : "string"
          }
        },
        "groups" : {
          "type" : "array",
          "uniqueItems" : true,
          "items" : {
            "type" : "string"
          }
        }
      }
    },
    "ProcessorDTO" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string"
        },
        "parentGroupId" : {
          "type" : "string"
        },
        "position" : {
          "$ref" : "#/definitions/PositionDTO"
        },
        "name" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        },
        "bundle" : {
          "$ref" : "#/definitions/BundleDTO"
        },
        "state" : {
          "type" : "string"
        },
        "style" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "relationships" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/RelationshipDTO"
          }
        },
        "description" : {
          "type" : "string"
        },
        "supportsParallelProcessing" : {
          "type" : "boolean",
          "default" : false
        },
        "supportsEventDriven" : {
          "type" : "boolean",
          "default" : false
        },
        "supportsBatching" : {
          "type" : "boolean",
          "default" : false
        },
        "persistsState" : {
          "type" : "boolean",
          "default" : false
        },
        "restricted" : {
          "type" : "boolean",
          "default" : false
        },
        "multipleVersionsAvailable" : {
          "type" : "boolean",
          "default" : false
        },
        "inputRequirement" : {
          "type" : "string"
        },
        "config" : {
          "$ref" : "#/definitions/ProcessorConfigDTO"
        },
        "validationErrors" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "extensionMissing" : {
          "type" : "boolean",
          "default" : false
        }
      }
    },
    "FormDataBodyPart" : {
      "type" : "object",
      "properties" : {
        "contentDisposition" : {
          "$ref" : "#/definitions/ContentDisposition"
        },
        "entity" : {
          "type" : "object"
        },
        "headers" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        },
        "mediaType" : {
          "$ref" : "#/definitions/MediaType"
        },
        "messageBodyWorkers" : {
          "$ref" : "#/definitions/MessageBodyWorkers"
        },
        "parent" : {
          "$ref" : "#/definitions/MultiPart"
        },
        "providers" : {
          "$ref" : "#/definitions/Providers"
        },
        "formDataContentDisposition" : {
          "$ref" : "#/definitions/FormDataContentDisposition"
        },
        "simple" : {
          "type" : "boolean",
          "default" : false
        },
        "name" : {
          "type" : "string"
        },
        "value" : {
          "type" : "string"
        },
        "parameterizedHeaders" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/ParameterizedHeader"
            }
          }
        }
      }
    },
    "LabelDTO" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string"
        },
        "parentGroupId" : {
          "type" : "string"
        },
        "position" : {
          "$ref" : "#/definitions/PositionDTO"
        },
        "label" : {
          "type" : "string"
        },
        "width" : {
          "type" : "number",
          "format" : "double"
        },
        "height" : {
          "type" : "number",
          "format" : "double"
        },
        "style" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        }
      }
    },
    "Tag" : {
      "type" : "object",
      "properties" : {
        "name" : {
          "type" : "string"
        }
      }
    },
    "ExecutedJob" : {
      "type" : "object",
      "properties" : {
        "executionContext" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "object"
          }
        },
        "instanceId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "createTime" : {
          "type" : "string",
          "format" : "date-time"
        },
        "jobParameters" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "object"
          }
        },
        "jobName" : {
          "type" : "string"
        },
        "jobType" : {
          "type" : "string"
        },
        "displayStatus" : {
          "type" : "string"
        },
        "executionId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "timeSinceEndTime" : {
          "type" : "integer",
          "format" : "int64"
        },
        "exitStatus" : {
          "type" : "string"
        },
        "executedSteps" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ExecutedStep"
          }
        },
        "runTime" : {
          "type" : "integer",
          "format" : "int64"
        },
        "endTime" : {
          "type" : "string",
          "format" : "date-time"
        },
        "status" : {
          "type" : "string",
          "enum" : [ "STARTING", "STARTED", "STOPPING", "STOPPED", "FAILED", "COMPLETED", "ABANDONED", "UNKNOWN" ]
        },
        "startTime" : {
          "type" : "string",
          "format" : "date-time"
        },
        "stream" : {
          "type" : "boolean",
          "default" : false
        },
        "exitCode" : {
          "type" : "string"
        },
        "lastUpdated" : {
          "type" : "string",
          "format" : "date-time"
        },
        "feedId" : {
          "type" : "string"
        },
        "feedName" : {
          "type" : "string"
        }
      }
    },
    "BodyPart" : {
      "type" : "object",
      "properties" : {
        "contentDisposition" : {
          "$ref" : "#/definitions/ContentDisposition"
        },
        "entity" : {
          "type" : "object"
        },
        "headers" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        },
        "mediaType" : {
          "$ref" : "#/definitions/MediaType"
        },
        "messageBodyWorkers" : {
          "$ref" : "#/definitions/MessageBodyWorkers"
        },
        "parent" : {
          "$ref" : "#/definitions/MultiPart"
        },
        "providers" : {
          "$ref" : "#/definitions/Providers"
        },
        "parameterizedHeaders" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/ParameterizedHeader"
            }
          }
        }
      }
    },
    "FeedCategory" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string"
        },
        "systemName" : {
          "type" : "string"
        },
        "displayName" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "userProperties" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "collectedUserProperties" : {
          "type" : "string",
          "readOnly" : true
        }
      }
    },
    "UserField" : {
      "type" : "object",
      "properties" : {
        "description" : {
          "type" : "string"
        },
        "displayName" : {
          "type" : "string"
        },
        "order" : {
          "type" : "integer",
          "format" : "int32"
        },
        "required" : {
          "type" : "boolean",
          "default" : false
        },
        "systemName" : {
          "type" : "string"
        }
      }
    },
    "HadoopSecurityGroup" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        }
      }
    },
    "PartitionField" : {
      "type" : "object",
      "properties" : {
        "position" : {
          "type" : "integer",
          "format" : "int32"
        },
        "sourceField" : {
          "type" : "string"
        },
        "sourceDataType" : {
          "type" : "string"
        },
        "field" : {
          "type" : "string"
        },
        "formula" : {
          "type" : "string"
        }
      }
    },
    "DataConfidenceSummary" : {
      "type" : "object",
      "properties" : {
        "latestCheckDataFeeds" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/CheckDataJob"
          }
        },
        "confidencePercentage" : {
          "type" : "number",
          "format" : "float"
        },
        "failedCount" : {
          "type" : "integer",
          "format" : "int32"
        },
        "successCount" : {
          "type" : "integer",
          "format" : "int32"
        },
        "totalCount" : {
          "type" : "integer",
          "format" : "int32"
        },
        "minCompleteDate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "failedJobs" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/CheckDataJob"
          }
        },
        "timeSinceLastCheck" : {
          "type" : "string"
        },
        "warnings" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "warningTimeThreshold" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "TableOptions" : {
      "type" : "object",
      "properties" : {
        "compress" : {
          "type" : "boolean",
          "default" : false
        },
        "auditLogging" : {
          "type" : "boolean",
          "default" : false
        },
        "encrypt" : {
          "type" : "boolean",
          "default" : false
        },
        "trackHistory" : {
          "type" : "boolean",
          "default" : false
        },
        "compressionFormat" : {
          "type" : "string"
        }
      }
    },
    "TemplateProcessorDatasourceDefinition" : {
      "type" : "object",
      "properties" : {
        "processorType" : {
          "type" : "string"
        },
        "processorName" : {
          "type" : "string"
        },
        "processorId" : {
          "type" : "string"
        },
        "datasourceDefinition" : {
          "$ref" : "#/definitions/DatasourceDefinition"
        }
      }
    },
    "ProcessGroupDTO" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string"
        },
        "parentGroupId" : {
          "type" : "string"
        },
        "position" : {
          "$ref" : "#/definitions/PositionDTO"
        },
        "name" : {
          "type" : "string"
        },
        "comments" : {
          "type" : "string"
        },
        "runningCount" : {
          "type" : "integer",
          "format" : "int32"
        },
        "stoppedCount" : {
          "type" : "integer",
          "format" : "int32"
        },
        "invalidCount" : {
          "type" : "integer",
          "format" : "int32"
        },
        "disabledCount" : {
          "type" : "integer",
          "format" : "int32"
        },
        "activeRemotePortCount" : {
          "type" : "integer",
          "format" : "int32"
        },
        "inactiveRemotePortCount" : {
          "type" : "integer",
          "format" : "int32"
        },
        "inputPortCount" : {
          "type" : "integer",
          "format" : "int32"
        },
        "outputPortCount" : {
          "type" : "integer",
          "format" : "int32"
        },
        "contents" : {
          "$ref" : "#/definitions/FlowSnippetDTO"
        }
      }
    },
    "CheckDataJob" : {
      "type" : "object",
      "properties" : {
        "validationMessage" : {
          "type" : "string"
        },
        "valid" : {
          "type" : "boolean",
          "default" : false
        },
        "executionContext" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "object"
          }
        },
        "instanceId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "createTime" : {
          "type" : "string",
          "format" : "date-time"
        },
        "jobParameters" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "object"
          }
        },
        "jobName" : {
          "type" : "string"
        },
        "jobType" : {
          "type" : "string"
        },
        "displayStatus" : {
          "type" : "string"
        },
        "executionId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "timeSinceEndTime" : {
          "type" : "integer",
          "format" : "int64"
        },
        "exitStatus" : {
          "type" : "string"
        },
        "executedSteps" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ExecutedStep"
          }
        },
        "runTime" : {
          "type" : "integer",
          "format" : "int64"
        },
        "endTime" : {
          "type" : "string",
          "format" : "date-time"
        },
        "status" : {
          "type" : "string",
          "enum" : [ "STARTING", "STARTED", "STOPPING", "STOPPED", "FAILED", "COMPLETED", "ABANDONED", "UNKNOWN" ]
        },
        "startTime" : {
          "type" : "string",
          "format" : "date-time"
        },
        "stream" : {
          "type" : "boolean",
          "default" : false
        },
        "exitCode" : {
          "type" : "string"
        },
        "lastUpdated" : {
          "type" : "string",
          "format" : "date-time"
        },
        "feedId" : {
          "type" : "string"
        },
        "feedName" : {
          "type" : "string"
        }
      }
    },
    "QueryResultColumn" : {
      "type" : "object",
      "properties" : {
        "dataType" : {
          "type" : "string"
        },
        "nativeDataType" : {
          "type" : "string"
        },
        "hiveColumnLabel" : {
          "type" : "string"
        },
        "displayName" : {
          "type" : "string"
        },
        "tableName" : {
          "type" : "string"
        },
        "index" : {
          "type" : "integer",
          "format" : "int32"
        },
        "comment" : {
          "type" : "string"
        },
        "field" : {
          "type" : "string"
        },
        "databaseName" : {
          "type" : "string"
        }
      }
    },
    "NifiFeed" : {
      "type" : "object",
      "properties" : {
        "feedMetadata" : {
          "$ref" : "#/definitions/FeedMetadata"
        },
        "feedProcessGroup" : {
          "$ref" : "#/definitions/NifiProcessGroup"
        },
        "success" : {
          "type" : "boolean",
          "default" : false
        },
        "enableAfterSave" : {
          "type" : "boolean",
          "default" : false
        },
        "errorMessages" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        }
      }
    },
    "Feed" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string"
        },
        "systemName" : {
          "type" : "string"
        },
        "displayName" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "owner" : {
          "type" : "string"
        },
        "state" : {
          "type" : "string",
          "enum" : [ "ENABLED", "DISABLED", "DELETED" ]
        },
        "createdTime" : {
          "type" : "string",
          "format" : "date-time"
        },
        "precondition" : {
          "$ref" : "#/definitions/FeedPrecondition"
        },
        "sources" : {
          "type" : "array",
          "uniqueItems" : true,
          "items" : {
            "$ref" : "#/definitions/FeedSource"
          }
        },
        "destinations" : {
          "type" : "array",
          "uniqueItems" : true,
          "items" : {
            "$ref" : "#/definitions/FeedDestination"
          }
        },
        "properties" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "category" : {
          "$ref" : "#/definitions/FeedCategory"
        },
        "currentInitStatus" : {
          "$ref" : "#/definitions/InitializationStatus"
        },
        "allowIndexing" : {
          "type" : "boolean",
          "default" : false
        },
        "currentHistoryReindexingStatus" : {
          "$ref" : "#/definitions/HistoryReindexingStatus"
        },
        "dependentFeeds" : {
          "type" : "array",
          "uniqueItems" : true,
          "items" : {
            "$ref" : "#/definitions/Feed"
          }
        },
        "dependentFeedIds" : {
          "type" : "array",
          "uniqueItems" : true,
          "items" : {
            "type" : "string"
          }
        },
        "usedByFeeds" : {
          "type" : "array",
          "uniqueItems" : true,
          "items" : {
            "$ref" : "#/definitions/Feed"
          }
        },
        "usedByFeedIds" : {
          "type" : "array",
          "uniqueItems" : true,
          "items" : {
            "type" : "string"
          }
        },
        "allowedActions" : {
          "$ref" : "#/definitions/ActionGroup"
        },
        "modifiedTime" : {
          "type" : "string",
          "format" : "date-time"
        },
        "userProperties" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "collectedUserProperties" : {
          "type" : "string",
          "readOnly" : true
        }
      }
    },
    "HiveTableColumn" : {
      "type" : "object",
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        }
      }
    },
    "ServiceComponent" : {
      "type" : "object",
      "properties" : {
        "maxAlertState" : {
          "type" : "string",
          "enum" : [ "OK", "UNKNOWN", "WARNING", "CRITICAL" ]
        },
        "highestAlertState" : {
          "type" : "string",
          "enum" : [ "OK", "UNKNOWN", "WARNING", "CRITICAL" ]
        },
        "serviceName" : {
          "type" : "string"
        },
        "healthy" : {
          "type" : "boolean",
          "default" : false
        },
        "containsErrorAlerts" : {
          "type" : "boolean",
          "default" : false
        },
        "errorAlerts" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ServiceAlert"
          }
        },
        "alerts" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ServiceAlert"
          }
        },
        "clusterName" : {
          "type" : "string"
        },
        "checkDate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "latestAlertTimestamp" : {
          "type" : "string",
          "format" : "date-time"
        },
        "earliestAlertTimestamp" : {
          "type" : "string",
          "format" : "date-time"
        },
        "name" : {
          "type" : "string"
        },
        "properties" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "object"
          }
        },
        "message" : {
          "type" : "string"
        },
        "state" : {
          "type" : "string",
          "enum" : [ "UP", "STARTING", "DOWN", "UNKNOWN" ]
        }
      }
    },
    "ActionGroup" : {
      "type" : "object",
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "actions" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Action"
          }
        }
      }
    },
    "FeedSource" : {
      "type" : "object",
      "properties" : {
        "lastLoadTime" : {
          "type" : "string",
          "format" : "date-time"
        },
        "id" : {
          "type" : "string"
        },
        "datasourceId" : {
          "type" : "string"
        },
        "datasource" : {
          "$ref" : "#/definitions/Datasource"
        }
      }
    },
    "ControllerServiceTypesEntity" : {
      "type" : "object",
      "properties" : {
        "controllerServiceTypes" : {
          "type" : "array",
          "uniqueItems" : true,
          "items" : {
            "$ref" : "#/definitions/DocumentedTypeDTO"
          }
        }
      },
      "xml" : {
        "name" : "controllerServiceTypesEntity"
      }
    },
    "ReusableTemplateConnectionInfo" : {
      "type" : "object",
      "properties" : {
        "feedOutputPortName" : {
          "type" : "string"
        },
        "reusableTemplateInputPortName" : {
          "type" : "string"
        },
        "inputPortDisplayName" : {
          "type" : "string"
        },
        "reusableTemplateProcessGroupName" : {
          "type" : "string"
        }
      }
    },
    "BulletinDTO" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "nodeAddress" : {
          "type" : "string"
        },
        "category" : {
          "type" : "string"
        },
        "groupId" : {
          "type" : "string"
        },
        "sourceId" : {
          "type" : "string"
        },
        "sourceName" : {
          "type" : "string"
        },
        "level" : {
          "type" : "string"
        },
        "message" : {
          "type" : "string"
        },
        "timestamp" : {
          "type" : "string",
          "format" : "date-time"
        }
      }
    },
    "SchemaParserDescriptor" : {
      "type" : "object",
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "displayName" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "shortDescription" : {
          "type" : "string"
        },
        "properties" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/FieldRuleProperty"
          }
        },
        "objectClassType" : {
          "type" : "string"
        },
        "objectShortClassType" : {
          "type" : "string"
        },
        "propertyValuesDisplayString" : {
          "type" : "string"
        },
        "sequence" : {
          "type" : "integer",
          "format" : "int32"
        },
        "supportsBinary" : {
          "type" : "boolean",
          "default" : false
        },
        "generatesHiveSerde" : {
          "type" : "boolean",
          "default" : false
        },
        "tags" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "clientHelper" : {
          "type" : "string"
        },
        "allowSkipHeader" : {
          "type" : "boolean",
          "default" : false
        }
      }
    },
    "FontOptions" : {
      "type" : "object",
      "properties" : {
        "color" : {
          "type" : "string"
        },
        "size" : {
          "type" : "integer",
          "format" : "int32"
        },
        "face" : {
          "type" : "string"
        },
        "background" : {
          "type" : "string"
        },
        "strokeWidth" : {
          "type" : "integer",
          "format" : "int32"
        },
        "strokeColor" : {
          "type" : "string"
        },
        "align" : {
          "type" : "string"
        }
      }
    },
    "SearchResultData" : {
      "type" : "object",
      "properties" : {
        "color" : {
          "type" : "string"
        },
        "highlights" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Pair"
          }
        },
        "rawData" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "object"
          }
        },
        "icon" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string",
          "enum" : [ "KYLO_DATA", "KYLO_SCHEMA", "KYLO_FEEDS", "KYLO_CATEGORIES", "KYLO_UNKNOWN" ]
        }
      }
    },
    "User" : {
      "type" : "object",
      "properties" : {
        "displayName" : {
          "type" : "string"
        },
        "email" : {
          "type" : "string"
        },
        "enabled" : {
          "type" : "boolean",
          "default" : false
        },
        "groups" : {
          "type" : "array",
          "uniqueItems" : true,
          "items" : {
            "type" : "string"
          }
        },
        "systemName" : {
          "type" : "string"
        }
      }
    },
    "FieldPolicy" : {
      "type" : "object",
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "rule" : {
          "type" : "string"
        }
      }
    },
    "KyloProcessorFlowTypeOption" : {
      "type" : "object",
      "properties" : {
        "flowType" : {
          "type" : "string"
        },
        "displayName" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        }
      }
    },
    "MessageDeliveryStatus" : {
      "type" : "object",
      "properties" : {
        "nodesAwaitingMessage" : {
          "type" : "array",
          "uniqueItems" : true,
          "items" : {
            "type" : "string"
          }
        },
        "sentTime" : {
          "type" : "integer",
          "format" : "int64"
        },
        "complete" : {
          "type" : "boolean",
          "default" : false
        },
        "message" : {
          "$ref" : "#/definitions/ClusterMessage"
        }
      }
    },
    "UserFieldCollection" : {
      "type" : "object",
      "properties" : {
        "categoryFields" : {
          "type" : "array",
          "uniqueItems" : true,
          "items" : {
            "$ref" : "#/definitions/UserField"
          }
        },
        "feedFields" : {
          "type" : "array",
          "uniqueItems" : true,
          "items" : {
            "$ref" : "#/definitions/UserField"
          }
        }
      }
    },
    "JobStatusCount" : {
      "type" : "object",
      "properties" : {
        "jobName" : {
          "type" : "string"
        },
        "date" : {
          "type" : "string",
          "format" : "date-time"
        },
        "status" : {
          "type" : "string"
        },
        "count" : {
          "type" : "integer",
          "format" : "int64"
        },
        "feedId" : {
          "type" : "string"
        },
        "feedName" : {
          "type" : "string"
        }
      }
    },
    "NifiFeedProcessorStats" : {
      "type" : "object",
      "properties" : {
        "duration" : {
          "type" : "integer",
          "format" : "int64"
        },
        "minEventTime" : {
          "type" : "string",
          "format" : "date-time"
        },
        "maxEventTime" : {
          "type" : "string",
          "format" : "date-time"
        },
        "bytesIn" : {
          "type" : "integer",
          "format" : "int64"
        },
        "bytesOut" : {
          "type" : "integer",
          "format" : "int64"
        },
        "totalCount" : {
          "type" : "integer",
          "format" : "int64"
        },
        "failedCount" : {
          "type" : "integer",
          "format" : "int64"
        },
        "jobsStarted" : {
          "type" : "integer",
          "format" : "int64"
        },
        "jobsFinished" : {
          "type" : "integer",
          "format" : "int64"
        },
        "jobsFailed" : {
          "type" : "integer",
          "format" : "int64"
        },
        "jobDuration" : {
          "type" : "integer",
          "format" : "int64"
        },
        "successfulJobDuration" : {
          "type" : "integer",
          "format" : "int64"
        },
        "processorsFailed" : {
          "type" : "integer",
          "format" : "int64"
        },
        "flowFilesStarted" : {
          "type" : "integer",
          "format" : "int64"
        },
        "flowFilesFinished" : {
          "type" : "integer",
          "format" : "int64"
        },
        "maxEventId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "id" : {
          "type" : "string"
        },
        "feedName" : {
          "type" : "string"
        },
        "processorId" : {
          "type" : "string"
        },
        "processorName" : {
          "type" : "string"
        },
        "feedProcessGroupId" : {
          "type" : "string"
        },
        "collectionTime" : {
          "type" : "string",
          "format" : "date-time"
        },
        "collectionId" : {
          "type" : "string"
        },
        "resultSetCount" : {
          "type" : "integer",
          "format" : "int64"
        },
        "latestFlowFileId" : {
          "type" : "string"
        },
        "errorMessages" : {
          "type" : "string"
        },
        "errorMessageTimestamp" : {
          "type" : "string",
          "format" : "date-time"
        },
        "jobsStartedPerSecond" : {
          "type" : "number"
        },
        "jobsFinishedPerSecond" : {
          "type" : "number"
        },
        "collectionIntervalSeconds" : {
          "type" : "integer",
          "format" : "int64"
        },
        "timeInterval" : {
          "type" : "number",
          "format" : "double"
        }
      }
    },
    "RegistrationRequest" : {
      "type" : "object",
      "properties" : {
        "host" : {
          "type" : "string"
        },
        "port" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "ControllerServiceReferencingComponentDTO" : {
      "type" : "object",
      "properties" : {
        "groupId" : {
          "type" : "string"
        },
        "id" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        },
        "state" : {
          "type" : "string"
        },
        "properties" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "descriptors" : {
          "type" : "object",
          "additionalProperties" : {
            "$ref" : "#/definitions/PropertyDescriptorDTO"
          }
        },
        "validationErrors" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "referenceType" : {
          "type" : "string"
        },
        "activeThreadCount" : {
          "type" : "integer",
          "format" : "int32"
        },
        "referenceCycle" : {
          "type" : "boolean",
          "default" : false
        },
        "referencingComponents" : {
          "type" : "array",
          "uniqueItems" : true,
          "items" : {
            "$ref" : "#/definitions/ControllerServiceReferencingComponentEntity"
          }
        }
      }
    },
    "JcrIndexDefinition" : {
      "type" : "object",
      "properties" : {
        "indexName" : {
          "type" : "string"
        },
        "indexKind" : {
          "type" : "string"
        },
        "nodeType" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "propertyName" : {
          "type" : "string"
        },
        "propertyType" : {
          "type" : "integer",
          "format" : "int32"
        },
        "propertyTypes" : {
          "type" : "string"
        }
      }
    },
    "FieldDescriptor" : {
      "type" : "object",
      "properties" : {
        "type" : {
          "type" : "string",
          "enum" : [ "STRING", "BOOLEAN", "INTEGER", "LONG", "DOUBLE", "DATE", "ENTITY" ]
        },
        "name" : {
          "type" : "string"
        },
        "displayName" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "collection" : {
          "type" : "boolean",
          "default" : false
        },
        "required" : {
          "type" : "boolean",
          "default" : false
        },
        "defaultValue" : {
          "type" : "string"
        }
      }
    },
    "NiFiComponentErrors" : {
      "type" : "object",
      "properties" : {
        "processorName" : {
          "type" : "string"
        },
        "processorId" : {
          "type" : "string"
        },
        "processGroupName" : {
          "type" : "string"
        },
        "processGroupId" : {
          "type" : "string"
        },
        "validationErrors" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/NifiError"
          }
        }
      }
    },
    "FeedServiceLevelAgreement" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "defaultGroup" : {
          "$ref" : "#/definitions/ObligationGroup"
        },
        "groups" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ObligationGroup"
          }
        },
        "slaChecks" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ServiceLevelAgreementCheck"
          }
        },
        "obligationErrors" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "slaCheckErrors" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "canEdit" : {
          "type" : "boolean",
          "default" : false
        },
        "feeds" : {
          "type" : "array",
          "uniqueItems" : true,
          "items" : {
            "$ref" : "#/definitions/Feed"
          }
        },
        "feedNames" : {
          "type" : "string",
          "readOnly" : true
        }
      }
    },
    "SaveRequest" : {
      "type" : "object",
      "properties" : {
        "format" : {
          "type" : "string"
        },
        "jdbc" : {
          "$ref" : "#/definitions/JdbcDatasource"
        },
        "mode" : {
          "type" : "string"
        },
        "options" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "tableName" : {
          "type" : "string"
        }
      }
    },
    "MultiPart" : {
      "type" : "object",
      "properties" : {
        "contentDisposition" : {
          "$ref" : "#/definitions/ContentDisposition"
        },
        "entity" : {
          "type" : "object"
        },
        "headers" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        },
        "mediaType" : {
          "$ref" : "#/definitions/MediaType"
        },
        "messageBodyWorkers" : {
          "$ref" : "#/definitions/MessageBodyWorkers"
        },
        "parent" : {
          "$ref" : "#/definitions/MultiPart"
        },
        "providers" : {
          "$ref" : "#/definitions/Providers"
        },
        "bodyParts" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/BodyPart"
          }
        },
        "parameterizedHeaders" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/ParameterizedHeader"
            }
          }
        }
      }
    },
    "NifiError" : {
      "type" : "object",
      "properties" : {
        "message" : {
          "type" : "string"
        },
        "category" : {
          "type" : "string"
        },
        "severity" : {
          "type" : "string",
          "enum" : [ "INFO", "WARN", "FATAL" ]
        }
      }
    },
    "OutputRow" : {
      "type" : "object",
      "properties" : {
        "columnName" : {
          "type" : "string"
        },
        "metricType" : {
          "type" : "string"
        },
        "metricValue" : {
          "type" : "string"
        }
      }
    },
    "HiveTablePartition" : {
      "type" : "object",
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "formula" : {
          "type" : "string"
        },
        "values" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        }
      }
    },
    "ObligationAssessment" : {
      "type" : "object",
      "properties" : {
        "obligation" : {
          "$ref" : "#/definitions/Obligation"
        },
        "result" : {
          "type" : "string",
          "enum" : [ "SUCCESS", "WARNING", "FAILURE" ]
        },
        "message" : {
          "type" : "string"
        },
        "metricAssessments" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/MetricAssessment"
          }
        }
      }
    },
    "Service Level Agreement UI Form Object" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "canEdit" : {
          "type" : "boolean",
          "default" : false
        },
        "rules" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ServiceLevelAgreementRule"
          }
        },
        "actionConfigurations" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ServiceLevelAgreementActionUiConfigurationItem"
          }
        },
        "actionErrors" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "ruleErrors" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        }
      },
      "description" : "A Service Level Agreement that is in the correct for for the UI to parse and display on a form with inputs."
    },
    "AlertRange" : {
      "type" : "object",
      "properties" : {
        "newestTime" : {
          "type" : "string",
          "format" : "date-time"
        },
        "oldestTime" : {
          "type" : "string",
          "format" : "date-time"
        },
        "size" : {
          "type" : "integer",
          "format" : "int32"
        },
        "alerts" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Alert"
          }
        }
      }
    },
    "FeedDataTransformation" : {
      "type" : "object",
      "properties" : {
        "chartViewModel" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "object"
          }
        },
        "datasourceIds" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "dataTransformScript" : {
          "type" : "string"
        },
        "sql" : {
          "type" : "string"
        },
        "states" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object"
            }
          }
        }
      }
    },
    "VelocityEmailTemplate" : {
      "type" : "object",
      "properties" : {
        "subject" : {
          "type" : "string"
        },
        "body" : {
          "type" : "string"
        }
      }
    },
    "FeedsForDataHistoryReindex" : {
      "type" : "object",
      "properties" : {
        "feeds" : {
          "type" : "array",
          "uniqueItems" : true,
          "items" : {
            "$ref" : "#/definitions/Feed"
          }
        },
        "feedCount" : {
          "type" : "integer",
          "format" : "int32"
        },
        "feedIds" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        }
      }
    },
    "RevisionDTO" : {
      "type" : "object",
      "properties" : {
        "clientId" : {
          "type" : "string"
        },
        "version" : {
          "type" : "integer",
          "format" : "int64"
        },
        "lastModifier" : {
          "type" : "string"
        }
      }
    },
    "NiFiTemplateFlowRequest" : {
      "type" : "object",
      "properties" : {
        "connectionInfo" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ReusableTemplateConnectionInfo"
          }
        }
      }
    },
    "ImportProperty" : {
      "type" : "object",
      "properties" : {
        "processorName" : {
          "type" : "string"
        },
        "processorId" : {
          "type" : "string"
        },
        "processorType" : {
          "type" : "string"
        },
        "propertyKey" : {
          "type" : "string"
        },
        "propertyValue" : {
          "type" : "string"
        },
        "processorNameTypeKey" : {
          "type" : "string"
        }
      }
    },
    "TransformResponse" : {
      "type" : "object",
      "properties" : {
        "message" : {
          "type" : "string"
        },
        "profile" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OutputRow"
          }
        },
        "progress" : {
          "type" : "number",
          "format" : "double"
        },
        "results" : {
          "$ref" : "#/definitions/TransformQueryResult"
        },
        "status" : {
          "type" : "string",
          "enum" : [ "ERROR", "PENDING", "SUCCESS" ]
        },
        "table" : {
          "type" : "string"
        }
      }
    },
    "NifiFlowProcessor" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        },
        "parentGroupId" : {
          "type" : "string"
        },
        "flowId" : {
          "type" : "string"
        },
        "processGroup" : {
          "$ref" : "#/definitions/NifiFlowProcessGroup"
        },
        "sourceIds" : {
          "type" : "array",
          "uniqueItems" : true,
          "items" : {
            "type" : "string"
          }
        },
        "destinationIds" : {
          "type" : "array",
          "uniqueItems" : true,
          "items" : {
            "type" : "string"
          }
        },
        "sourceConnectionIds" : {
          "type" : "array",
          "uniqueItems" : true,
          "items" : {
            "$ref" : "#/definitions/NiFiFlowProcessorConnection"
          }
        },
        "destinationConnectionIds" : {
          "type" : "array",
          "uniqueItems" : true,
          "items" : {
            "$ref" : "#/definitions/NiFiFlowProcessorConnection"
          }
        },
        "leaf" : {
          "type" : "boolean",
          "default" : false
        },
        "sortedDestinations" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/NifiFlowProcessor"
          }
        },
        "start" : {
          "type" : "boolean",
          "default" : false
        },
        "end" : {
          "type" : "boolean",
          "default" : false
        },
        "allDestinationIds" : {
          "type" : "array",
          "uniqueItems" : true,
          "items" : {
            "type" : "string"
          }
        }
      }
    },
    "ClusterNodeSummary" : {
      "type" : "object",
      "properties" : {
        "nodeAddress" : {
          "type" : "string"
        },
        "messagesSent" : {
          "type" : "integer",
          "format" : "int64"
        },
        "messagesReceived" : {
          "type" : "integer",
          "format" : "int64"
        },
        "lastReceivedMessageTimestamp" : {
          "type" : "integer",
          "format" : "int64"
        },
        "lastSentMessageTimestamp" : {
          "type" : "integer",
          "format" : "int64"
        },
        "messagesReceivedByType" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "integer",
            "format" : "int64"
          }
        },
        "messagesSentByType" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "integer",
            "format" : "int64"
          }
        },
        "channelStats" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "object"
          }
        }
      }
    }
  }
}